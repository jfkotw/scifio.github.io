From hiner at wisc.edu  Wed Jan  8 14:40:36 2014
From: hiner at wisc.edu (Mark Hiner)
Date: Wed, 8 Jan 2014 14:40:36 -0600
Subject: [SCIFIO] [ImageJ-devel] [ImgLib2] The img-metadata branch
In-Reply-To: <CAMWa8i0XoT3GPAc3sU8_4uBkP9sb__bE9Zv99=N_e17wGnBKRg@mail.gmail.com>
References: <CADN69ykbTxxsr6z6RcEqbb3hRpXgrOCZcw9700_zSFOCPNO_kg@mail.gmail.com>
	<CADN69ymwt_qLY2aYuGPonWEbS5sQxAmYHi==YdAvNe464yEV_w@mail.gmail.com>
	<CAMWa8i1+H5X=O+oe14SE200jkq5hPKZmVYnX=-q0NrKpJp8x2Q@mail.gmail.com>
	<CAMWa8i1t-haNinXjkaoDFntRF-8aW+1Si8QZYQZKePxHzptVtQ@mail.gmail.com>
	<CADN69ymbqEzu+XCRQr051ke1vppEf9frOUe=CEK4GSmop_00eg@mail.gmail.com>
	<CADN69ykKh8Y0eu11yLn08uRS0WqfP165fOPyW5ojXCppfsMFZw@mail.gmail.com>
	<CAMWa8i04n31BRSKN-8guCpFW-HS_HAbcZQvsmroib3WPwMjDVg@mail.gmail.com>
	<CA+B=mGpwd4a+JVyxKAiMtGZeEtMv_oqghc6SKxyw04OJfkd-Uw@mail.gmail.com>
	<CAMWa8i0fmiF51aN7s-kNJzDCuVZygp35-HFjKywrbB0avs-Gjw@mail.gmail.com>
	<CA+B=mGqfQ-jdmXv69addi3SrG=KN7pLDk1VR5pdzEigVGwD4fg@mail.gmail.com>
	<CAMWa8i0sLRvc3N8XgCNTcHs7nV-nxzVbt+Gxb+RbBH8KFRGLXg@mail.gmail.com>
	<CA+B=mGr+z1FiDfOJLJJBX1n2F971YoYVXcNjYcqiTTjds2F5+Q@mail.gmail.com>
	<CA+B=mGproDP1qioEeVZaLNP4JzMwYsyTHA63XaEevHWF7Oezwg@mail.gmail.com>
	<CAMWa8i282xYqkTcQGwDXyAiUYa+RYamDQ3XhDt5bR1TP3-nQnA@mail.gmail.com>
	<CA+B=mGqEsceF2dQ=pv3nJtAJuPQQ5QWbdOympjg7y1rMAbd5YA@mail.gmail.com>
	<CAMWa8i10EimnUz+vRcX372UcGZ2cUnGpkPu630FLfQzFyWn57g@mail.gmail.com>
	<CA+B=mGo0iXWwmwcLhGVBF9AbuCegzQaAxf5ca4ikv974iYhQ2g@mail.gmail.com>
	<CAMWa8i0XoT3GPAc3sU8_4uBkP9sb__bE9Zv99=N_e17wGnBKRg@mail.gmail.com>
Message-ID: <CA+B=mGqSWQaWjOas55bkefdv_e6GFiS_rZQ7zdb59qv9WaLrgA@mail.gmail.com>

Hi Brian,

 Sorry to hear that some tests are failing for you now.

 It does sound like there could be a bug here, but I will need more
information to track it down.

 Which tests are you running exactly, and what's the stack trace you get?
If you could provide a minimal set of steps to reproduce the error, that
would be great. Also, where are you setting the pixel size to be 0? (as a
side note, a value of 1.0 might be safer.. which is what these axes are
supposed to default to)

Thanks!
Mark


On Wed, Jan 8, 2014 at 9:57 AM, Brian Northan <bnorthan at gmail.com> wrote:

> Hi Mark
>
> Hope you had a good holiday.   I noticed some tests of mine failing just
> after Christmas. I think the failure possibly has something to do with a
> change in setting pixel size when loading.  Right around line 1000 in this
> commit.
>
>
> https://github.com/scifio/scifio/commit/232261b978cbaeb42eb28c67cdddb7aca1acb1b6
>
> If you remember I have a script SimpleCreatePhantoms.sh which creates a
> blank image then places a sphere in it.  It now fails in the second step
> because it cannot reload the blank image.  I also cannot reload the newly
> created blank image into the latest build of ImageJ.
>
> I have a workaround (set pixel size to zero since I am not actually using
> it right now) so it isn't critical but thought I'd let you know about a
> potential bug.
>
> Brian
>
>
> On Mon, Dec 16, 2013 at 3:32 PM, Mark Hiner <hiner at wisc.edu> wrote:
>
>> No problem. That "error" message when failing to create services is
>> confusing.
>>
>> Glad it's working, let us know if you have any more problems!
>>
>> - Mark
>>
>>
>> On Mon, Dec 16, 2013 at 2:19 PM, Brian Northan <bnorthan at gmail.com>wrote:
>>
>>> Hi Mark
>>>
>>> I just checked and It did work after all...  I actually never checked to
>>> see if the final output was created.  I just saw the exception and assumed
>>> it had stopped.
>>>
>>> So everything appears great now,.  Looks like the floating point numbers
>>> are being saved correctly.
>>>
>>> Thanks for the fix
>>>
>>> Brian
>>>
>>>
>>> On Mon, Dec 16, 2013 at 2:46 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>>
>>>> Hi Brian,
>>>>
>>>>  So, running your CreatePhantomCommand via the DeconvolutionTest class
>>>> actually creates a blank image for me... I ran it from Eclipse directly
>>>> though.
>>>>
>>>>  Also, I did observe the same error message that you saw, but the
>>>> message was just logged and execution continued (because the services that
>>>> failed to instantiate weren't necessary for execution.. so the "error"
>>>> nature of the message is a bit of an overstatement in this case).
>>>>
>>>>  It is possible that some classes in SCIFIO erroneously have required
>>>> services that aren't available in headless mode, but nothing stood out to
>>>> me as suspicious.
>>>>
>>>> Could you do two more things for me:
>>>>
>>>> 1) Try running your scripts without using a headless IJ2 to verify this
>>>> works on your end.
>>>>
>>>> 2) Set the Java system property: "scijava.log.level=4" and re-paste the
>>>> error output. This will turn full debugging on.
>>>>
>>>> Thanks,
>>>> Mark
>>>>
>>>>
>>>> On Mon, Dec 16, 2013 at 11:23 AM, Brian Northan <bnorthan at gmail.com>wrote:
>>>>
>>>>> Hi Mark
>>>>>
>>>>> My code is here: https://github.com/bnorthan/projects -- be warned it
>>>>> is in need of some refactoring which I plan to do as ImageJ2 scripting
>>>>> becomes available.
>>>>>
>>>>> A simple example of running my custom commands is in
>>>>> "SimpleCreatePhantoms.sh"  (the other scripts will not work because of
>>>>> references to things on my own machine).
>>>>>
>>>>> The code is for a project I did earlier in the year (
>>>>> http://spie.org/x648.xml?product_id=2002974).
>>>>>
>>>>> The main program is called DeconvolutionTest.java... which has ended
>>>>> up evolving into a command parser.  I never really polished it though
>>>>> because I am going to throw it away and use ImageJ2 scripting as that
>>>>> develops.     A lot of things in the code base fall into that category,
>>>>> things I put together quickly but are meant to be replaced with the
>>>>> "proper" imagej2 component.
>>>>>
>>>>> SimpleCreatePhantoms.sh just calls a command to create a blank
>>>>> phantom, then a second command to place a sphere in it.
>>>>>
>>>>>
>>>>> On Mon, Dec 16, 2013 at 9:09 AM, Mark Hiner <hinerm at gmail.com> wrote:
>>>>>
>>>>>> P.S. please feel free to send your commands via private e-mail, if
>>>>>> you don't want them to be public.
>>>>>>
>>>>>> Similarly, if you can share the dataset you're using that would be
>>>>>> ideal... but no worries if it's proprietary or anything.
>>>>>>
>>>>>>
>>>>>> On Mon, Dec 16, 2013 at 8:07 AM, Mark Hiner <hiner at wisc.edu> wrote:
>>>>>>
>>>>>>> Hi Brian,
>>>>>>>
>>>>>>>  Ahhh.. I'm sorry! I misunderstood. If that's the actual stack trace
>>>>>>> then no, I don't think you are having any problems with the dependency
>>>>>>> tree, and all your pom settings should be fine given that stack trace.
>>>>>>>
>>>>>>>  Sidetrack: the pom-scijava doesn't actually have snapshot versions.
>>>>>>> It's basically just versioning glue - it defines a version properties to
>>>>>>> help ensure consistent versions of the various SciJava libraries (like
>>>>>>> SCIFIO) are consumed. Using 1.111 is fine, as we want to use the latest
>>>>>>> version of everything since SCIFIO-0.7.4/0.7.5 are quite new. Let me know
>>>>>>> if that's not clear...
>>>>>>>
>>>>>>>   Anyway, since we know it worked in 0.7.3, I would like to bisect<https://www.kernel.org/pub/software/scm/git/docs/git-bisect.html>and figure out what happened. However, I currently can't reproduce the
>>>>>>> issue. When I open a float dataset with SCIFIO 0.7.5 in IJ2 I'm able to
>>>>>>> write it as a .tif. So you're probably exposing a bug with other commands
>>>>>>> interacting with SCIFIO.
>>>>>>>
>>>>>>>  Can you share your custom commands? If not, could you let me know
>>>>>>> which commands you're calling?
>>>>>>>
>>>>>>> Thanks,
>>>>>>> - Mark
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> On Fri, Dec 13, 2013 at 1:49 PM, Brian Northan <bnorthan at gmail.com>wrote:
>>>>>>>
>>>>>>>> Hi Mark
>>>>>>>>
>>>>>>>> I am using IJ2 in headless mode with some custom commands I wrote.
>>>>>>>> So it is always possible that I still have old references somewhere.
>>>>>>>> However that stack trace was actually generated with 0.7.4.  When I had
>>>>>>>> noted that 0.7.5-SNAPSHOT threw an exception, I went back to 0.7.4 to make
>>>>>>>> sure that worked but it also had the same exception.  Then I went back to
>>>>>>>> 0.7.3 which worked (other than the floating point problem).
>>>>>>>>
>>>>>>>> Below is the stack trace using 0.7.5-SNAPSHOT.   (btw since I am
>>>>>>>> using IJ2 maybe there is something else wrong in the dependency tree??  One
>>>>>>>> of the IJ2 components??  Should I set the sci-java version to a SNAPSHOT
>>>>>>>> version too??  It is 1.111 right now.
>>>>>>>>
>>>>>>>>      at org.scijava.Context.inject(Context.java:273)
>>>>>>>>     at
>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstance(DefaultPluginService.java:241)
>>>>>>>>     at
>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstances(DefaultPluginService.java:229)
>>>>>>>>     at
>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstancesOfType(DefaultPluginService.java:220)
>>>>>>>>     at
>>>>>>>> org.scijava.plugin.AbstractSingletonService.createInstances(AbstractSingletonService.java:95)
>>>>>>>>     at
>>>>>>>> org.scijava.plugin.AbstractSingletonService.getInstances(AbstractSingletonService.java:73)
>>>>>>>>     at
>>>>>>>> org.scijava.plugin.AbstractSingletonService$1.get(AbstractSingletonService.java:87)
>>>>>>>>     at
>>>>>>>> org.scijava.plugin.AbstractSingletonService$1.get(AbstractSingletonService.java:83)
>>>>>>>>     at
>>>>>>>> org.scijava.object.ObjectIndex.resolvePending(ObjectIndex.java:391)
>>>>>>>>     at org.scijava.object.ObjectIndex.get(ObjectIndex.java:136)
>>>>>>>>     at
>>>>>>>> org.scijava.object.DefaultObjectService.getObjects(DefaultObjectService.java:89)
>>>>>>>>     at
>>>>>>>> io.scif.codec.DefaultCodecService.getCodec(DefaultCodecService.java:65)
>>>>>>>>     at
>>>>>>>> io.scif.formats.tiff.TiffCompression.compress(TiffCompression.java:330)
>>>>>>>>     at io.scif.formats.tiff.TiffSaver.writeImage(TiffSaver.java:391)
>>>>>>>>     at io.scif.formats.tiff.TiffSaver.writeImage(TiffSaver.java:279)
>>>>>>>>      at
>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1250)
>>>>>>>>     at
>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1290)
>>>>>>>>
>>>>>>>>     at io.scif.AbstractWriter.savePlane(AbstractWriter.java:107)
>>>>>>>>     at io.scif.img.ImgSaver.writePlanes(ImgSaver.java:532)
>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:380)
>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:133)
>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:114)
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>> On Fri, Dec 13, 2013 at 1:40 PM, Mark Hiner <hinerm at gmail.com>wrote:
>>>>>>>>
>>>>>>>>>
>>>>>>>>> Hi Brian,
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>>  I referenced the scifio 0.7.5-SNAPSHOT (would that be correct to
>>>>>>>>>> get the absolute latest??)
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>> Yep this should be the latest snapshot.
>>>>>>>>>
>>>>>>>>>  in my POM and ran into an exception when executing my code.
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>> ...
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>>      at
>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1255)
>>>>>>>>>>     at
>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1295)
>>>>>>>>>>     at io.scif.AbstractWriter.savePlane(AbstractWriter.java:107)
>>>>>>>>>>     at io.scif.img.ImgSaver.writePlanes(ImgSaver.java:532)
>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:380)
>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:133)
>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:114)
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>> That stack trace suggests that an older version of the TIFFFormat
>>>>>>>>> is being used. It must be from prior commit 37953<https://github.com/scifio/scifio/commit/379530aab9a9848e59363d87dcbdb79c4842bfc3>(because the TiffSaver.writeImage call is now on line 1250, not 1255). I'm
>>>>>>>>> assuming it's from the 0.7.4 release.
>>>>>>>>>
>>>>>>>>>  Are you just running the code snippet that Curtis posted a while
>>>>>>>>> back (or your own similar snippet)? Or are you using SCIFIO in IJ2, or
>>>>>>>>> another application?
>>>>>>>>>
>>>>>>>>>  Could you run "mvn dependency:tree", or check the "Maven
>>>>>>>>> Dependencies" tab if you're using Eclipse? I'm assuming something must
>>>>>>>>> still have a 0.7.4 SCIFIO reference, which is being pulled in instead of
>>>>>>>>> 0.7.5...
>>>>>>>>>
>>>>>>>>> Sorry for the inconvenience.. let me know what you find!
>>>>>>>>>
>>>>>>>>> Thanks,
>>>>>>>>> Mark
>>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://scif.io/pipermail/scifio/attachments/20140108/4a443835/attachment.html>

From bnorthan at gmail.com  Wed Jan  8 15:01:39 2014
From: bnorthan at gmail.com (Brian Northan)
Date: Wed, 8 Jan 2014 16:01:39 -0500
Subject: [SCIFIO] [ImageJ-devel] [ImgLib2] The img-metadata branch
In-Reply-To: <CA+B=mGqSWQaWjOas55bkefdv_e6GFiS_rZQ7zdb59qv9WaLrgA@mail.gmail.com>
References: <CADN69ykbTxxsr6z6RcEqbb3hRpXgrOCZcw9700_zSFOCPNO_kg@mail.gmail.com>
	<CADN69ymwt_qLY2aYuGPonWEbS5sQxAmYHi==YdAvNe464yEV_w@mail.gmail.com>
	<CAMWa8i1+H5X=O+oe14SE200jkq5hPKZmVYnX=-q0NrKpJp8x2Q@mail.gmail.com>
	<CAMWa8i1t-haNinXjkaoDFntRF-8aW+1Si8QZYQZKePxHzptVtQ@mail.gmail.com>
	<CADN69ymbqEzu+XCRQr051ke1vppEf9frOUe=CEK4GSmop_00eg@mail.gmail.com>
	<CADN69ykKh8Y0eu11yLn08uRS0WqfP165fOPyW5ojXCppfsMFZw@mail.gmail.com>
	<CAMWa8i04n31BRSKN-8guCpFW-HS_HAbcZQvsmroib3WPwMjDVg@mail.gmail.com>
	<CA+B=mGpwd4a+JVyxKAiMtGZeEtMv_oqghc6SKxyw04OJfkd-Uw@mail.gmail.com>
	<CAMWa8i0fmiF51aN7s-kNJzDCuVZygp35-HFjKywrbB0avs-Gjw@mail.gmail.com>
	<CA+B=mGqfQ-jdmXv69addi3SrG=KN7pLDk1VR5pdzEigVGwD4fg@mail.gmail.com>
	<CAMWa8i0sLRvc3N8XgCNTcHs7nV-nxzVbt+Gxb+RbBH8KFRGLXg@mail.gmail.com>
	<CA+B=mGr+z1FiDfOJLJJBX1n2F971YoYVXcNjYcqiTTjds2F5+Q@mail.gmail.com>
	<CA+B=mGproDP1qioEeVZaLNP4JzMwYsyTHA63XaEevHWF7Oezwg@mail.gmail.com>
	<CAMWa8i282xYqkTcQGwDXyAiUYa+RYamDQ3XhDt5bR1TP3-nQnA@mail.gmail.com>
	<CA+B=mGqEsceF2dQ=pv3nJtAJuPQQ5QWbdOympjg7y1rMAbd5YA@mail.gmail.com>
	<CAMWa8i10EimnUz+vRcX372UcGZ2cUnGpkPu630FLfQzFyWn57g@mail.gmail.com>
	<CA+B=mGo0iXWwmwcLhGVBF9AbuCegzQaAxf5ca4ikv974iYhQ2g@mail.gmail.com>
	<CAMWa8i0XoT3GPAc3sU8_4uBkP9sb__bE9Zv99=N_e17wGnBKRg@mail.gmail.com>
	<CA+B=mGqSWQaWjOas55bkefdv_e6GFiS_rZQ7zdb59qv9WaLrgA@mail.gmail.com>
Message-ID: <CAMWa8i1HcF3ZgujbsixH1ygaNggSr17yAn3WqYij7rLrpwpSOQ@mail.gmail.com>

Hi Mark

To clarify I was only changing the spacings to 0 as a hack to get around
the error I was seeing.  The code I was wondering about (around line 975 of
TIFFFormat.java) is only called for spacing > 0.0.

You can repeat the error by running the CreatePhantomCommand we discussed a
couple weeks ago.  (I believe you retrieved the code and got it running but
let me know if you need the instructions again).

The error can be repeated by running the CreatePhantomCommand to create a
blank image and then trying to load the output into ImageJ2.  The stack
trace that I get from ImageJ2 is then as follows...

java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
    at java.util.ArrayList.rangeCheck(ArrayList.java:604)
    at java.util.ArrayList.get(ArrayList.java:382)
    at io.scif.AbstractMetadata.get(AbstractMetadata.java:138)
    at
io.scif.formats.TIFFFormat$BaseTIFFParser.initMetadata(TIFFFormat.java:975)
    at io.scif.formats.TIFFFormat$Parser.initMetadata(TIFFFormat.java:375)
    at
io.scif.formats.TIFFFormat$BaseTIFFParser.typedParse(TIFFFormat.java:645)
    at
io.scif.formats.TIFFFormat$BaseTIFFParser.typedParse(TIFFFormat.java:627)
    at io.scif.AbstractParser.parse(AbstractParser.java:326)
    at io.scif.AbstractParser.parse(AbstractParser.java:105)
    at io.scif.AbstractParser.parse(AbstractParser.java:59)
    at io.scif.AbstractReader.setSource(AbstractReader.java:217)
    at
io.scif.services.DefaultInitializeService.initializeReader(DefaultInitializeService.java:96)
    at io.scif.img.ImgOpener.createReader(ImgOpener.java:365)
    at io.scif.img.ImgOpener.openImg(ImgOpener.java:147)
    at
imagej.data.DefaultDatasetService.open(DefaultDatasetService.java:254)
    at imagej.data.io.DatasetIOPlugin.open(DatasetIOPlugin.java:82)
    at imagej.data.io.DatasetIOPlugin.open(DatasetIOPlugin.java:54)
    at imagej.io.DefaultIOService.open(DefaultIOService.java:87)
    at imagej.plugins.commands.io.OpenFile.run(OpenFile.java:85)
    at imagej.command.CommandModule.run(CommandModule.java:196)
    at imagej.module.ModuleRunner.run(ModuleRunner.java:170)
    at imagej.module.ModuleRunner.call(ModuleRunner.java:131)
    at imagej.module.ModuleRunner.call(ModuleRunner.java:70)
    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
    at java.util.concurrent.FutureTask.run(FutureTask.java:166)
    at
java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:724)


On Wed, Jan 8, 2014 at 3:40 PM, Mark Hiner <hiner at wisc.edu> wrote:

> Hi Brian,
>
>  Sorry to hear that some tests are failing for you now.
>
>  It does sound like there could be a bug here, but I will need more
> information to track it down.
>
>  Which tests are you running exactly, and what's the stack trace you get?
> If you could provide a minimal set of steps to reproduce the error, that
> would be great. Also, where are you setting the pixel size to be 0? (as a
> side note, a value of 1.0 might be safer.. which is what these axes are
> supposed to default to)
>
> Thanks!
> Mark
>
>
> On Wed, Jan 8, 2014 at 9:57 AM, Brian Northan <bnorthan at gmail.com> wrote:
>
>> Hi Mark
>>
>> Hope you had a good holiday.   I noticed some tests of mine failing just
>> after Christmas. I think the failure possibly has something to do with a
>> change in setting pixel size when loading.  Right around line 1000 in this
>> commit.
>>
>>
>> https://github.com/scifio/scifio/commit/232261b978cbaeb42eb28c67cdddb7aca1acb1b6
>>
>> If you remember I have a script SimpleCreatePhantoms.sh which creates a
>> blank image then places a sphere in it.  It now fails in the second step
>> because it cannot reload the blank image.  I also cannot reload the newly
>> created blank image into the latest build of ImageJ.
>>
>> I have a workaround (set pixel size to zero since I am not actually using
>> it right now) so it isn't critical but thought I'd let you know about a
>> potential bug.
>>
>> Brian
>>
>>
>> On Mon, Dec 16, 2013 at 3:32 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>
>>> No problem. That "error" message when failing to create services is
>>> confusing.
>>>
>>> Glad it's working, let us know if you have any more problems!
>>>
>>> - Mark
>>>
>>>
>>> On Mon, Dec 16, 2013 at 2:19 PM, Brian Northan <bnorthan at gmail.com>wrote:
>>>
>>>> Hi Mark
>>>>
>>>> I just checked and It did work after all...  I actually never checked
>>>> to see if the final output was created.  I just saw the exception and
>>>> assumed it had stopped.
>>>>
>>>> So everything appears great now,.  Looks like the floating point
>>>> numbers are being saved correctly.
>>>>
>>>> Thanks for the fix
>>>>
>>>> Brian
>>>>
>>>>
>>>> On Mon, Dec 16, 2013 at 2:46 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>>>
>>>>> Hi Brian,
>>>>>
>>>>>  So, running your CreatePhantomCommand via the DeconvolutionTest class
>>>>> actually creates a blank image for me... I ran it from Eclipse directly
>>>>> though.
>>>>>
>>>>>  Also, I did observe the same error message that you saw, but the
>>>>> message was just logged and execution continued (because the services that
>>>>> failed to instantiate weren't necessary for execution.. so the "error"
>>>>> nature of the message is a bit of an overstatement in this case).
>>>>>
>>>>>  It is possible that some classes in SCIFIO erroneously have required
>>>>> services that aren't available in headless mode, but nothing stood out to
>>>>> me as suspicious.
>>>>>
>>>>> Could you do two more things for me:
>>>>>
>>>>> 1) Try running your scripts without using a headless IJ2 to verify
>>>>> this works on your end.
>>>>>
>>>>> 2) Set the Java system property: "scijava.log.level=4" and re-paste
>>>>> the error output. This will turn full debugging on.
>>>>>
>>>>> Thanks,
>>>>> Mark
>>>>>
>>>>>
>>>>> On Mon, Dec 16, 2013 at 11:23 AM, Brian Northan <bnorthan at gmail.com>wrote:
>>>>>
>>>>>> Hi Mark
>>>>>>
>>>>>> My code is here: https://github.com/bnorthan/projects -- be warned
>>>>>> it is in need of some refactoring which I plan to do as ImageJ2 scripting
>>>>>> becomes available.
>>>>>>
>>>>>> A simple example of running my custom commands is in
>>>>>> "SimpleCreatePhantoms.sh"  (the other scripts will not work because of
>>>>>> references to things on my own machine).
>>>>>>
>>>>>> The code is for a project I did earlier in the year (
>>>>>> http://spie.org/x648.xml?product_id=2002974).
>>>>>>
>>>>>> The main program is called DeconvolutionTest.java... which has ended
>>>>>> up evolving into a command parser.  I never really polished it though
>>>>>> because I am going to throw it away and use ImageJ2 scripting as that
>>>>>> develops.     A lot of things in the code base fall into that category,
>>>>>> things I put together quickly but are meant to be replaced with the
>>>>>> "proper" imagej2 component.
>>>>>>
>>>>>> SimpleCreatePhantoms.sh just calls a command to create a blank
>>>>>> phantom, then a second command to place a sphere in it.
>>>>>>
>>>>>>
>>>>>> On Mon, Dec 16, 2013 at 9:09 AM, Mark Hiner <hinerm at gmail.com> wrote:
>>>>>>
>>>>>>> P.S. please feel free to send your commands via private e-mail, if
>>>>>>> you don't want them to be public.
>>>>>>>
>>>>>>> Similarly, if you can share the dataset you're using that would be
>>>>>>> ideal... but no worries if it's proprietary or anything.
>>>>>>>
>>>>>>>
>>>>>>> On Mon, Dec 16, 2013 at 8:07 AM, Mark Hiner <hiner at wisc.edu> wrote:
>>>>>>>
>>>>>>>> Hi Brian,
>>>>>>>>
>>>>>>>>  Ahhh.. I'm sorry! I misunderstood. If that's the actual stack
>>>>>>>> trace then no, I don't think you are having any problems with the
>>>>>>>> dependency tree, and all your pom settings should be fine given that stack
>>>>>>>> trace.
>>>>>>>>
>>>>>>>>  Sidetrack: the pom-scijava doesn't actually have snapshot
>>>>>>>> versions. It's basically just versioning glue - it defines a version
>>>>>>>> properties to help ensure consistent versions of the various SciJava
>>>>>>>> libraries (like SCIFIO) are consumed. Using 1.111 is fine, as we want to
>>>>>>>> use the latest version of everything since SCIFIO-0.7.4/0.7.5 are quite
>>>>>>>> new. Let me know if that's not clear...
>>>>>>>>
>>>>>>>>   Anyway, since we know it worked in 0.7.3, I would like to bisect<https://www.kernel.org/pub/software/scm/git/docs/git-bisect.html>and figure out what happened. However, I currently can't reproduce the
>>>>>>>> issue. When I open a float dataset with SCIFIO 0.7.5 in IJ2 I'm able to
>>>>>>>> write it as a .tif. So you're probably exposing a bug with other commands
>>>>>>>> interacting with SCIFIO.
>>>>>>>>
>>>>>>>>  Can you share your custom commands? If not, could you let me know
>>>>>>>> which commands you're calling?
>>>>>>>>
>>>>>>>> Thanks,
>>>>>>>> - Mark
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>> On Fri, Dec 13, 2013 at 1:49 PM, Brian Northan <bnorthan at gmail.com>wrote:
>>>>>>>>
>>>>>>>>> Hi Mark
>>>>>>>>>
>>>>>>>>> I am using IJ2 in headless mode with some custom commands I
>>>>>>>>> wrote.  So it is always possible that I still have old references
>>>>>>>>> somewhere.  However that stack trace was actually generated with 0.7.4.
>>>>>>>>> When I had noted that 0.7.5-SNAPSHOT threw an exception, I went back to
>>>>>>>>> 0.7.4 to make sure that worked but it also had the same exception.  Then I
>>>>>>>>> went back to 0.7.3 which worked (other than the floating point problem).
>>>>>>>>>
>>>>>>>>> Below is the stack trace using 0.7.5-SNAPSHOT.   (btw since I am
>>>>>>>>> using IJ2 maybe there is something else wrong in the dependency tree??  One
>>>>>>>>> of the IJ2 components??  Should I set the sci-java version to a SNAPSHOT
>>>>>>>>> version too??  It is 1.111 right now.
>>>>>>>>>
>>>>>>>>>      at org.scijava.Context.inject(Context.java:273)
>>>>>>>>>     at
>>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstance(DefaultPluginService.java:241)
>>>>>>>>>     at
>>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstances(DefaultPluginService.java:229)
>>>>>>>>>     at
>>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstancesOfType(DefaultPluginService.java:220)
>>>>>>>>>     at
>>>>>>>>> org.scijava.plugin.AbstractSingletonService.createInstances(AbstractSingletonService.java:95)
>>>>>>>>>     at
>>>>>>>>> org.scijava.plugin.AbstractSingletonService.getInstances(AbstractSingletonService.java:73)
>>>>>>>>>     at
>>>>>>>>> org.scijava.plugin.AbstractSingletonService$1.get(AbstractSingletonService.java:87)
>>>>>>>>>     at
>>>>>>>>> org.scijava.plugin.AbstractSingletonService$1.get(AbstractSingletonService.java:83)
>>>>>>>>>     at
>>>>>>>>> org.scijava.object.ObjectIndex.resolvePending(ObjectIndex.java:391)
>>>>>>>>>     at org.scijava.object.ObjectIndex.get(ObjectIndex.java:136)
>>>>>>>>>     at
>>>>>>>>> org.scijava.object.DefaultObjectService.getObjects(DefaultObjectService.java:89)
>>>>>>>>>     at
>>>>>>>>> io.scif.codec.DefaultCodecService.getCodec(DefaultCodecService.java:65)
>>>>>>>>>     at
>>>>>>>>> io.scif.formats.tiff.TiffCompression.compress(TiffCompression.java:330)
>>>>>>>>>     at
>>>>>>>>> io.scif.formats.tiff.TiffSaver.writeImage(TiffSaver.java:391)
>>>>>>>>>     at
>>>>>>>>> io.scif.formats.tiff.TiffSaver.writeImage(TiffSaver.java:279)
>>>>>>>>>      at
>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1250)
>>>>>>>>>     at
>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1290)
>>>>>>>>>
>>>>>>>>>     at io.scif.AbstractWriter.savePlane(AbstractWriter.java:107)
>>>>>>>>>     at io.scif.img.ImgSaver.writePlanes(ImgSaver.java:532)
>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:380)
>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:133)
>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:114)
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> On Fri, Dec 13, 2013 at 1:40 PM, Mark Hiner <hinerm at gmail.com>wrote:
>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> Hi Brian,
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>>  I referenced the scifio 0.7.5-SNAPSHOT (would that be correct
>>>>>>>>>>> to get the absolute latest??)
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> Yep this should be the latest snapshot.
>>>>>>>>>>
>>>>>>>>>>  in my POM and ran into an exception when executing my code.
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> ...
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>>      at
>>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1255)
>>>>>>>>>>>     at
>>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1295)
>>>>>>>>>>>     at io.scif.AbstractWriter.savePlane(AbstractWriter.java:107)
>>>>>>>>>>>     at io.scif.img.ImgSaver.writePlanes(ImgSaver.java:532)
>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:380)
>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:133)
>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:114)
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> That stack trace suggests that an older version of the TIFFFormat
>>>>>>>>>> is being used. It must be from prior commit 37953<https://github.com/scifio/scifio/commit/379530aab9a9848e59363d87dcbdb79c4842bfc3>(because the TiffSaver.writeImage call is now on line 1250, not 1255). I'm
>>>>>>>>>> assuming it's from the 0.7.4 release.
>>>>>>>>>>
>>>>>>>>>>  Are you just running the code snippet that Curtis posted a while
>>>>>>>>>> back (or your own similar snippet)? Or are you using SCIFIO in IJ2, or
>>>>>>>>>> another application?
>>>>>>>>>>
>>>>>>>>>>  Could you run "mvn dependency:tree", or check the "Maven
>>>>>>>>>> Dependencies" tab if you're using Eclipse? I'm assuming something must
>>>>>>>>>> still have a 0.7.4 SCIFIO reference, which is being pulled in instead of
>>>>>>>>>> 0.7.5...
>>>>>>>>>>
>>>>>>>>>> Sorry for the inconvenience.. let me know what you find!
>>>>>>>>>>
>>>>>>>>>> Thanks,
>>>>>>>>>> Mark
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://scif.io/pipermail/scifio/attachments/20140108/d73743d3/attachment-0001.html>

From hiner at wisc.edu  Wed Jan  8 15:52:16 2014
From: hiner at wisc.edu (Mark Hiner)
Date: Wed, 8 Jan 2014 15:52:16 -0600
Subject: [SCIFIO] [ImageJ-devel] [ImgLib2] The img-metadata branch
In-Reply-To: <CAMWa8i1HcF3ZgujbsixH1ygaNggSr17yAn3WqYij7rLrpwpSOQ@mail.gmail.com>
References: <CADN69ykbTxxsr6z6RcEqbb3hRpXgrOCZcw9700_zSFOCPNO_kg@mail.gmail.com>
	<CADN69ymwt_qLY2aYuGPonWEbS5sQxAmYHi==YdAvNe464yEV_w@mail.gmail.com>
	<CAMWa8i1+H5X=O+oe14SE200jkq5hPKZmVYnX=-q0NrKpJp8x2Q@mail.gmail.com>
	<CAMWa8i1t-haNinXjkaoDFntRF-8aW+1Si8QZYQZKePxHzptVtQ@mail.gmail.com>
	<CADN69ymbqEzu+XCRQr051ke1vppEf9frOUe=CEK4GSmop_00eg@mail.gmail.com>
	<CADN69ykKh8Y0eu11yLn08uRS0WqfP165fOPyW5ojXCppfsMFZw@mail.gmail.com>
	<CAMWa8i04n31BRSKN-8guCpFW-HS_HAbcZQvsmroib3WPwMjDVg@mail.gmail.com>
	<CA+B=mGpwd4a+JVyxKAiMtGZeEtMv_oqghc6SKxyw04OJfkd-Uw@mail.gmail.com>
	<CAMWa8i0fmiF51aN7s-kNJzDCuVZygp35-HFjKywrbB0avs-Gjw@mail.gmail.com>
	<CA+B=mGqfQ-jdmXv69addi3SrG=KN7pLDk1VR5pdzEigVGwD4fg@mail.gmail.com>
	<CAMWa8i0sLRvc3N8XgCNTcHs7nV-nxzVbt+Gxb+RbBH8KFRGLXg@mail.gmail.com>
	<CA+B=mGr+z1FiDfOJLJJBX1n2F971YoYVXcNjYcqiTTjds2F5+Q@mail.gmail.com>
	<CA+B=mGproDP1qioEeVZaLNP4JzMwYsyTHA63XaEevHWF7Oezwg@mail.gmail.com>
	<CAMWa8i282xYqkTcQGwDXyAiUYa+RYamDQ3XhDt5bR1TP3-nQnA@mail.gmail.com>
	<CA+B=mGqEsceF2dQ=pv3nJtAJuPQQ5QWbdOympjg7y1rMAbd5YA@mail.gmail.com>
	<CAMWa8i10EimnUz+vRcX372UcGZ2cUnGpkPu630FLfQzFyWn57g@mail.gmail.com>
	<CA+B=mGo0iXWwmwcLhGVBF9AbuCegzQaAxf5ca4ikv974iYhQ2g@mail.gmail.com>
	<CAMWa8i0XoT3GPAc3sU8_4uBkP9sb__bE9Zv99=N_e17wGnBKRg@mail.gmail.com>
	<CA+B=mGqSWQaWjOas55bkefdv_e6GFiS_rZQ7zdb59qv9WaLrgA@mail.gmail.com>
	<CAMWa8i1HcF3ZgujbsixH1ygaNggSr17yAn3WqYij7rLrpwpSOQ@mail.gmail.com>
Message-ID: <CA+B=mGrvxVDsK6J_j-Nv=p=zUtF2Dfqsvmb88eam6s65+-w=HA@mail.gmail.com>

Ahh.. looks like this was just a general bug in opening TIFF data. Sorry
that wasn't clear to me.

Anyway, it's fixed now locally. I'll release SCIFIO 0.8.2 tonight or
tomorrow which will include the fix (you'll just have to update your
pom-scijava to the latest version at that point).

Side note: you may want to define your CreatePhantomCommand (and other
commands?) as discoverable IJ2 commands..

For example:

@Plugin(type=Command.class, menu = {
    @Menu(label = MenuConstants.PLUGINS_LABEL,
            weight = MenuConstants.PLUGINS_WEIGHT,
            mnemonic = MenuConstants.PLUGINS_MNEMONIC),
        @Menu(label = "Truenorth", mnemonic = 't'), @Menu(label = "Create
Phantom", weight = 1) })
public class CreatePhantomCommand  implements Command
{
...
}

Would make the CreatePhantomCommand discoverable by searching commands, or
via the Plugin menu. Made testing in IJ2 a little easier for me..

Anyway, thanks again!
- Mark


On Wed, Jan 8, 2014 at 3:01 PM, Brian Northan <bnorthan at gmail.com> wrote:

> Hi Mark
>
> To clarify I was only changing the spacings to 0 as a hack to get around
> the error I was seeing.  The code I was wondering about (around line 975 of
> TIFFFormat.java) is only called for spacing > 0.0.
>
> You can repeat the error by running the CreatePhantomCommand we discussed
> a couple weeks ago.  (I believe you retrieved the code and got it running
> but let me know if you need the instructions again).
>
> The error can be repeated by running the CreatePhantomCommand to create a
> blank image and then trying to load the output into ImageJ2.  The stack
> trace that I get from ImageJ2 is then as follows...
>
> java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
>     at java.util.ArrayList.rangeCheck(ArrayList.java:604)
>     at java.util.ArrayList.get(ArrayList.java:382)
>     at io.scif.AbstractMetadata.get(AbstractMetadata.java:138)
>     at
> io.scif.formats.TIFFFormat$BaseTIFFParser.initMetadata(TIFFFormat.java:975)
>     at io.scif.formats.TIFFFormat$Parser.initMetadata(TIFFFormat.java:375)
>     at
> io.scif.formats.TIFFFormat$BaseTIFFParser.typedParse(TIFFFormat.java:645)
>     at
> io.scif.formats.TIFFFormat$BaseTIFFParser.typedParse(TIFFFormat.java:627)
>     at io.scif.AbstractParser.parse(AbstractParser.java:326)
>     at io.scif.AbstractParser.parse(AbstractParser.java:105)
>     at io.scif.AbstractParser.parse(AbstractParser.java:59)
>     at io.scif.AbstractReader.setSource(AbstractReader.java:217)
>     at
> io.scif.services.DefaultInitializeService.initializeReader(DefaultInitializeService.java:96)
>     at io.scif.img.ImgOpener.createReader(ImgOpener.java:365)
>     at io.scif.img.ImgOpener.openImg(ImgOpener.java:147)
>     at
> imagej.data.DefaultDatasetService.open(DefaultDatasetService.java:254)
>     at imagej.data.io.DatasetIOPlugin.open(DatasetIOPlugin.java:82)
>     at imagej.data.io.DatasetIOPlugin.open(DatasetIOPlugin.java:54)
>     at imagej.io.DefaultIOService.open(DefaultIOService.java:87)
>     at imagej.plugins.commands.io.OpenFile.run(OpenFile.java:85)
>     at imagej.command.CommandModule.run(CommandModule.java:196)
>     at imagej.module.ModuleRunner.run(ModuleRunner.java:170)
>     at imagej.module.ModuleRunner.call(ModuleRunner.java:131)
>     at imagej.module.ModuleRunner.call(ModuleRunner.java:70)
>     at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
>     at java.util.concurrent.FutureTask.run(FutureTask.java:166)
>     at
> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>     at
> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>     at java.lang.Thread.run(Thread.java:724)
>
>
> On Wed, Jan 8, 2014 at 3:40 PM, Mark Hiner <hiner at wisc.edu> wrote:
>
>> Hi Brian,
>>
>>  Sorry to hear that some tests are failing for you now.
>>
>>  It does sound like there could be a bug here, but I will need more
>> information to track it down.
>>
>>  Which tests are you running exactly, and what's the stack trace you get?
>> If you could provide a minimal set of steps to reproduce the error, that
>> would be great. Also, where are you setting the pixel size to be 0? (as a
>> side note, a value of 1.0 might be safer.. which is what these axes are
>> supposed to default to)
>>
>> Thanks!
>> Mark
>>
>>
>> On Wed, Jan 8, 2014 at 9:57 AM, Brian Northan <bnorthan at gmail.com> wrote:
>>
>>> Hi Mark
>>>
>>> Hope you had a good holiday.   I noticed some tests of mine failing just
>>> after Christmas. I think the failure possibly has something to do with a
>>> change in setting pixel size when loading.  Right around line 1000 in this
>>> commit.
>>>
>>>
>>> https://github.com/scifio/scifio/commit/232261b978cbaeb42eb28c67cdddb7aca1acb1b6
>>>
>>> If you remember I have a script SimpleCreatePhantoms.sh which creates a
>>> blank image then places a sphere in it.  It now fails in the second step
>>> because it cannot reload the blank image.  I also cannot reload the newly
>>> created blank image into the latest build of ImageJ.
>>>
>>> I have a workaround (set pixel size to zero since I am not actually
>>> using it right now) so it isn't critical but thought I'd let you know about
>>> a potential bug.
>>>
>>> Brian
>>>
>>>
>>> On Mon, Dec 16, 2013 at 3:32 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>>
>>>> No problem. That "error" message when failing to create services is
>>>> confusing.
>>>>
>>>> Glad it's working, let us know if you have any more problems!
>>>>
>>>> - Mark
>>>>
>>>>
>>>> On Mon, Dec 16, 2013 at 2:19 PM, Brian Northan <bnorthan at gmail.com>wrote:
>>>>
>>>>> Hi Mark
>>>>>
>>>>> I just checked and It did work after all...  I actually never checked
>>>>> to see if the final output was created.  I just saw the exception and
>>>>> assumed it had stopped.
>>>>>
>>>>> So everything appears great now,.  Looks like the floating point
>>>>> numbers are being saved correctly.
>>>>>
>>>>> Thanks for the fix
>>>>>
>>>>> Brian
>>>>>
>>>>>
>>>>> On Mon, Dec 16, 2013 at 2:46 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>>>>
>>>>>> Hi Brian,
>>>>>>
>>>>>>  So, running your CreatePhantomCommand via the DeconvolutionTest
>>>>>> class actually creates a blank image for me... I ran it from Eclipse
>>>>>> directly though.
>>>>>>
>>>>>>  Also, I did observe the same error message that you saw, but the
>>>>>> message was just logged and execution continued (because the services that
>>>>>> failed to instantiate weren't necessary for execution.. so the "error"
>>>>>> nature of the message is a bit of an overstatement in this case).
>>>>>>
>>>>>>  It is possible that some classes in SCIFIO erroneously have required
>>>>>> services that aren't available in headless mode, but nothing stood out to
>>>>>> me as suspicious.
>>>>>>
>>>>>> Could you do two more things for me:
>>>>>>
>>>>>> 1) Try running your scripts without using a headless IJ2 to verify
>>>>>> this works on your end.
>>>>>>
>>>>>> 2) Set the Java system property: "scijava.log.level=4" and re-paste
>>>>>> the error output. This will turn full debugging on.
>>>>>>
>>>>>> Thanks,
>>>>>> Mark
>>>>>>
>>>>>>
>>>>>> On Mon, Dec 16, 2013 at 11:23 AM, Brian Northan <bnorthan at gmail.com>wrote:
>>>>>>
>>>>>>> Hi Mark
>>>>>>>
>>>>>>> My code is here: https://github.com/bnorthan/projects -- be warned
>>>>>>> it is in need of some refactoring which I plan to do as ImageJ2 scripting
>>>>>>> becomes available.
>>>>>>>
>>>>>>> A simple example of running my custom commands is in
>>>>>>> "SimpleCreatePhantoms.sh"  (the other scripts will not work because of
>>>>>>> references to things on my own machine).
>>>>>>>
>>>>>>> The code is for a project I did earlier in the year (
>>>>>>> http://spie.org/x648.xml?product_id=2002974).
>>>>>>>
>>>>>>> The main program is called DeconvolutionTest.java... which has ended
>>>>>>> up evolving into a command parser.  I never really polished it though
>>>>>>> because I am going to throw it away and use ImageJ2 scripting as that
>>>>>>> develops.     A lot of things in the code base fall into that category,
>>>>>>> things I put together quickly but are meant to be replaced with the
>>>>>>> "proper" imagej2 component.
>>>>>>>
>>>>>>> SimpleCreatePhantoms.sh just calls a command to create a blank
>>>>>>> phantom, then a second command to place a sphere in it.
>>>>>>>
>>>>>>>
>>>>>>> On Mon, Dec 16, 2013 at 9:09 AM, Mark Hiner <hinerm at gmail.com>wrote:
>>>>>>>
>>>>>>>> P.S. please feel free to send your commands via private e-mail, if
>>>>>>>> you don't want them to be public.
>>>>>>>>
>>>>>>>> Similarly, if you can share the dataset you're using that would be
>>>>>>>> ideal... but no worries if it's proprietary or anything.
>>>>>>>>
>>>>>>>>
>>>>>>>> On Mon, Dec 16, 2013 at 8:07 AM, Mark Hiner <hiner at wisc.edu> wrote:
>>>>>>>>
>>>>>>>>> Hi Brian,
>>>>>>>>>
>>>>>>>>>  Ahhh.. I'm sorry! I misunderstood. If that's the actual stack
>>>>>>>>> trace then no, I don't think you are having any problems with the
>>>>>>>>> dependency tree, and all your pom settings should be fine given that stack
>>>>>>>>> trace.
>>>>>>>>>
>>>>>>>>>  Sidetrack: the pom-scijava doesn't actually have snapshot
>>>>>>>>> versions. It's basically just versioning glue - it defines a version
>>>>>>>>> properties to help ensure consistent versions of the various SciJava
>>>>>>>>> libraries (like SCIFIO) are consumed. Using 1.111 is fine, as we want to
>>>>>>>>> use the latest version of everything since SCIFIO-0.7.4/0.7.5 are quite
>>>>>>>>> new. Let me know if that's not clear...
>>>>>>>>>
>>>>>>>>>   Anyway, since we know it worked in 0.7.3, I would like to bisect<https://www.kernel.org/pub/software/scm/git/docs/git-bisect.html>and figure out what happened. However, I currently can't reproduce the
>>>>>>>>> issue. When I open a float dataset with SCIFIO 0.7.5 in IJ2 I'm able to
>>>>>>>>> write it as a .tif. So you're probably exposing a bug with other commands
>>>>>>>>> interacting with SCIFIO.
>>>>>>>>>
>>>>>>>>>  Can you share your custom commands? If not, could you let me know
>>>>>>>>> which commands you're calling?
>>>>>>>>>
>>>>>>>>> Thanks,
>>>>>>>>> - Mark
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> On Fri, Dec 13, 2013 at 1:49 PM, Brian Northan <bnorthan at gmail.com
>>>>>>>>> > wrote:
>>>>>>>>>
>>>>>>>>>> Hi Mark
>>>>>>>>>>
>>>>>>>>>> I am using IJ2 in headless mode with some custom commands I
>>>>>>>>>> wrote.  So it is always possible that I still have old references
>>>>>>>>>> somewhere.  However that stack trace was actually generated with 0.7.4.
>>>>>>>>>> When I had noted that 0.7.5-SNAPSHOT threw an exception, I went back to
>>>>>>>>>> 0.7.4 to make sure that worked but it also had the same exception.  Then I
>>>>>>>>>> went back to 0.7.3 which worked (other than the floating point problem).
>>>>>>>>>>
>>>>>>>>>> Below is the stack trace using 0.7.5-SNAPSHOT.   (btw since I am
>>>>>>>>>> using IJ2 maybe there is something else wrong in the dependency tree??  One
>>>>>>>>>> of the IJ2 components??  Should I set the sci-java version to a SNAPSHOT
>>>>>>>>>> version too??  It is 1.111 right now.
>>>>>>>>>>
>>>>>>>>>>      at org.scijava.Context.inject(Context.java:273)
>>>>>>>>>>     at
>>>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstance(DefaultPluginService.java:241)
>>>>>>>>>>     at
>>>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstances(DefaultPluginService.java:229)
>>>>>>>>>>     at
>>>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstancesOfType(DefaultPluginService.java:220)
>>>>>>>>>>     at
>>>>>>>>>> org.scijava.plugin.AbstractSingletonService.createInstances(AbstractSingletonService.java:95)
>>>>>>>>>>     at
>>>>>>>>>> org.scijava.plugin.AbstractSingletonService.getInstances(AbstractSingletonService.java:73)
>>>>>>>>>>     at
>>>>>>>>>> org.scijava.plugin.AbstractSingletonService$1.get(AbstractSingletonService.java:87)
>>>>>>>>>>     at
>>>>>>>>>> org.scijava.plugin.AbstractSingletonService$1.get(AbstractSingletonService.java:83)
>>>>>>>>>>     at
>>>>>>>>>> org.scijava.object.ObjectIndex.resolvePending(ObjectIndex.java:391)
>>>>>>>>>>     at org.scijava.object.ObjectIndex.get(ObjectIndex.java:136)
>>>>>>>>>>     at
>>>>>>>>>> org.scijava.object.DefaultObjectService.getObjects(DefaultObjectService.java:89)
>>>>>>>>>>     at
>>>>>>>>>> io.scif.codec.DefaultCodecService.getCodec(DefaultCodecService.java:65)
>>>>>>>>>>     at
>>>>>>>>>> io.scif.formats.tiff.TiffCompression.compress(TiffCompression.java:330)
>>>>>>>>>>     at
>>>>>>>>>> io.scif.formats.tiff.TiffSaver.writeImage(TiffSaver.java:391)
>>>>>>>>>>     at
>>>>>>>>>> io.scif.formats.tiff.TiffSaver.writeImage(TiffSaver.java:279)
>>>>>>>>>>      at
>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1250)
>>>>>>>>>>     at
>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1290)
>>>>>>>>>>
>>>>>>>>>>     at io.scif.AbstractWriter.savePlane(AbstractWriter.java:107)
>>>>>>>>>>     at io.scif.img.ImgSaver.writePlanes(ImgSaver.java:532)
>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:380)
>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:133)
>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:114)
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> On Fri, Dec 13, 2013 at 1:40 PM, Mark Hiner <hinerm at gmail.com>wrote:
>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> Hi Brian,
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>>  I referenced the scifio 0.7.5-SNAPSHOT (would that be correct
>>>>>>>>>>>> to get the absolute latest??)
>>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> Yep this should be the latest snapshot.
>>>>>>>>>>>
>>>>>>>>>>>  in my POM and ran into an exception when executing my code.
>>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> ...
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>>      at
>>>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1255)
>>>>>>>>>>>>     at
>>>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1295)
>>>>>>>>>>>>     at io.scif.AbstractWriter.savePlane(AbstractWriter.java:107)
>>>>>>>>>>>>     at io.scif.img.ImgSaver.writePlanes(ImgSaver.java:532)
>>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:380)
>>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:133)
>>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:114)
>>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> That stack trace suggests that an older version of the
>>>>>>>>>>> TIFFFormat is being used. It must be from prior commit 37953<https://github.com/scifio/scifio/commit/379530aab9a9848e59363d87dcbdb79c4842bfc3>(because the TiffSaver.writeImage call is now on line 1250, not 1255). I'm
>>>>>>>>>>> assuming it's from the 0.7.4 release.
>>>>>>>>>>>
>>>>>>>>>>>  Are you just running the code snippet that Curtis posted a
>>>>>>>>>>> while back (or your own similar snippet)? Or are you using SCIFIO in IJ2,
>>>>>>>>>>> or another application?
>>>>>>>>>>>
>>>>>>>>>>>  Could you run "mvn dependency:tree", or check the "Maven
>>>>>>>>>>> Dependencies" tab if you're using Eclipse? I'm assuming something must
>>>>>>>>>>> still have a 0.7.4 SCIFIO reference, which is being pulled in instead of
>>>>>>>>>>> 0.7.5...
>>>>>>>>>>>
>>>>>>>>>>> Sorry for the inconvenience.. let me know what you find!
>>>>>>>>>>>
>>>>>>>>>>> Thanks,
>>>>>>>>>>> Mark
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://scif.io/pipermail/scifio/attachments/20140108/facd20cc/attachment-0001.html>

From bnorthan at gmail.com  Wed Jan  8 16:39:33 2014
From: bnorthan at gmail.com (Brian Northan)
Date: Wed, 8 Jan 2014 17:39:33 -0500
Subject: [SCIFIO] [ImageJ-devel] [ImgLib2] The img-metadata branch
In-Reply-To: <CA+B=mGrvxVDsK6J_j-Nv=p=zUtF2Dfqsvmb88eam6s65+-w=HA@mail.gmail.com>
References: <CADN69ykbTxxsr6z6RcEqbb3hRpXgrOCZcw9700_zSFOCPNO_kg@mail.gmail.com>
	<CADN69ymwt_qLY2aYuGPonWEbS5sQxAmYHi==YdAvNe464yEV_w@mail.gmail.com>
	<CAMWa8i1+H5X=O+oe14SE200jkq5hPKZmVYnX=-q0NrKpJp8x2Q@mail.gmail.com>
	<CAMWa8i1t-haNinXjkaoDFntRF-8aW+1Si8QZYQZKePxHzptVtQ@mail.gmail.com>
	<CADN69ymbqEzu+XCRQr051ke1vppEf9frOUe=CEK4GSmop_00eg@mail.gmail.com>
	<CADN69ykKh8Y0eu11yLn08uRS0WqfP165fOPyW5ojXCppfsMFZw@mail.gmail.com>
	<CAMWa8i04n31BRSKN-8guCpFW-HS_HAbcZQvsmroib3WPwMjDVg@mail.gmail.com>
	<CA+B=mGpwd4a+JVyxKAiMtGZeEtMv_oqghc6SKxyw04OJfkd-Uw@mail.gmail.com>
	<CAMWa8i0fmiF51aN7s-kNJzDCuVZygp35-HFjKywrbB0avs-Gjw@mail.gmail.com>
	<CA+B=mGqfQ-jdmXv69addi3SrG=KN7pLDk1VR5pdzEigVGwD4fg@mail.gmail.com>
	<CAMWa8i0sLRvc3N8XgCNTcHs7nV-nxzVbt+Gxb+RbBH8KFRGLXg@mail.gmail.com>
	<CA+B=mGr+z1FiDfOJLJJBX1n2F971YoYVXcNjYcqiTTjds2F5+Q@mail.gmail.com>
	<CA+B=mGproDP1qioEeVZaLNP4JzMwYsyTHA63XaEevHWF7Oezwg@mail.gmail.com>
	<CAMWa8i282xYqkTcQGwDXyAiUYa+RYamDQ3XhDt5bR1TP3-nQnA@mail.gmail.com>
	<CA+B=mGqEsceF2dQ=pv3nJtAJuPQQ5QWbdOympjg7y1rMAbd5YA@mail.gmail.com>
	<CAMWa8i10EimnUz+vRcX372UcGZ2cUnGpkPu630FLfQzFyWn57g@mail.gmail.com>
	<CA+B=mGo0iXWwmwcLhGVBF9AbuCegzQaAxf5ca4ikv974iYhQ2g@mail.gmail.com>
	<CAMWa8i0XoT3GPAc3sU8_4uBkP9sb__bE9Zv99=N_e17wGnBKRg@mail.gmail.com>
	<CA+B=mGqSWQaWjOas55bkefdv_e6GFiS_rZQ7zdb59qv9WaLrgA@mail.gmail.com>
	<CAMWa8i1HcF3ZgujbsixH1ygaNggSr17yAn3WqYij7rLrpwpSOQ@mail.gmail.com>
	<CA+B=mGrvxVDsK6J_j-Nv=p=zUtF2Dfqsvmb88eam6s65+-w=HA@mail.gmail.com>
Message-ID: <CAMWa8i39Jy8sirZ8-zG9JM87XCKEgyvVpsgoMCHVn2gEkhZeQA@mail.gmail.com>

Hi Mark

Thanks for the fix.  And thanks for the example code for making the command
discoverable.

Brian


On Wed, Jan 8, 2014 at 4:52 PM, Mark Hiner <hiner at wisc.edu> wrote:

> Ahh.. looks like this was just a general bug in opening TIFF data. Sorry
> that wasn't clear to me.
>
> Anyway, it's fixed now locally. I'll release SCIFIO 0.8.2 tonight or
> tomorrow which will include the fix (you'll just have to update your
> pom-scijava to the latest version at that point).
>
> Side note: you may want to define your CreatePhantomCommand (and other
> commands?) as discoverable IJ2 commands..
>
> For example:
>
> @Plugin(type=Command.class, menu = {
>     @Menu(label = MenuConstants.PLUGINS_LABEL,
>             weight = MenuConstants.PLUGINS_WEIGHT,
>             mnemonic = MenuConstants.PLUGINS_MNEMONIC),
>         @Menu(label = "Truenorth", mnemonic = 't'), @Menu(label = "Create
> Phantom", weight = 1) })
> public class CreatePhantomCommand  implements Command
> {
> ...
> }
>
> Would make the CreatePhantomCommand discoverable by searching commands, or
> via the Plugin menu. Made testing in IJ2 a little easier for me..
>
> Anyway, thanks again!
> - Mark
>
>
> On Wed, Jan 8, 2014 at 3:01 PM, Brian Northan <bnorthan at gmail.com> wrote:
>
>> Hi Mark
>>
>> To clarify I was only changing the spacings to 0 as a hack to get around
>> the error I was seeing.  The code I was wondering about (around line 975 of
>> TIFFFormat.java) is only called for spacing > 0.0.
>>
>> You can repeat the error by running the CreatePhantomCommand we discussed
>> a couple weeks ago.  (I believe you retrieved the code and got it running
>> but let me know if you need the instructions again).
>>
>> The error can be repeated by running the CreatePhantomCommand to create a
>> blank image and then trying to load the output into ImageJ2.  The stack
>> trace that I get from ImageJ2 is then as follows...
>>
>> java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
>>     at java.util.ArrayList.rangeCheck(ArrayList.java:604)
>>     at java.util.ArrayList.get(ArrayList.java:382)
>>     at io.scif.AbstractMetadata.get(AbstractMetadata.java:138)
>>     at
>> io.scif.formats.TIFFFormat$BaseTIFFParser.initMetadata(TIFFFormat.java:975)
>>     at io.scif.formats.TIFFFormat$Parser.initMetadata(TIFFFormat.java:375)
>>     at
>> io.scif.formats.TIFFFormat$BaseTIFFParser.typedParse(TIFFFormat.java:645)
>>     at
>> io.scif.formats.TIFFFormat$BaseTIFFParser.typedParse(TIFFFormat.java:627)
>>     at io.scif.AbstractParser.parse(AbstractParser.java:326)
>>     at io.scif.AbstractParser.parse(AbstractParser.java:105)
>>     at io.scif.AbstractParser.parse(AbstractParser.java:59)
>>     at io.scif.AbstractReader.setSource(AbstractReader.java:217)
>>     at
>> io.scif.services.DefaultInitializeService.initializeReader(DefaultInitializeService.java:96)
>>     at io.scif.img.ImgOpener.createReader(ImgOpener.java:365)
>>     at io.scif.img.ImgOpener.openImg(ImgOpener.java:147)
>>     at
>> imagej.data.DefaultDatasetService.open(DefaultDatasetService.java:254)
>>     at imagej.data.io.DatasetIOPlugin.open(DatasetIOPlugin.java:82)
>>     at imagej.data.io.DatasetIOPlugin.open(DatasetIOPlugin.java:54)
>>     at imagej.io.DefaultIOService.open(DefaultIOService.java:87)
>>     at imagej.plugins.commands.io.OpenFile.run(OpenFile.java:85)
>>     at imagej.command.CommandModule.run(CommandModule.java:196)
>>     at imagej.module.ModuleRunner.run(ModuleRunner.java:170)
>>     at imagej.module.ModuleRunner.call(ModuleRunner.java:131)
>>     at imagej.module.ModuleRunner.call(ModuleRunner.java:70)
>>     at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
>>     at java.util.concurrent.FutureTask.run(FutureTask.java:166)
>>     at
>> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>>     at
>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>>     at java.lang.Thread.run(Thread.java:724)
>>
>>
>> On Wed, Jan 8, 2014 at 3:40 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>
>>> Hi Brian,
>>>
>>>  Sorry to hear that some tests are failing for you now.
>>>
>>>  It does sound like there could be a bug here, but I will need more
>>> information to track it down.
>>>
>>>  Which tests are you running exactly, and what's the stack trace you
>>> get? If you could provide a minimal set of steps to reproduce the error,
>>> that would be great. Also, where are you setting the pixel size to be 0?
>>> (as a side note, a value of 1.0 might be safer.. which is what these axes
>>> are supposed to default to)
>>>
>>> Thanks!
>>> Mark
>>>
>>>
>>> On Wed, Jan 8, 2014 at 9:57 AM, Brian Northan <bnorthan at gmail.com>wrote:
>>>
>>>> Hi Mark
>>>>
>>>> Hope you had a good holiday.   I noticed some tests of mine failing
>>>> just after Christmas. I think the failure possibly has something to do with
>>>> a change in setting pixel size when loading.  Right around line 1000 in
>>>> this commit.
>>>>
>>>>
>>>> https://github.com/scifio/scifio/commit/232261b978cbaeb42eb28c67cdddb7aca1acb1b6
>>>>
>>>> If you remember I have a script SimpleCreatePhantoms.sh which creates a
>>>> blank image then places a sphere in it.  It now fails in the second step
>>>> because it cannot reload the blank image.  I also cannot reload the newly
>>>> created blank image into the latest build of ImageJ.
>>>>
>>>> I have a workaround (set pixel size to zero since I am not actually
>>>> using it right now) so it isn't critical but thought I'd let you know about
>>>> a potential bug.
>>>>
>>>> Brian
>>>>
>>>>
>>>> On Mon, Dec 16, 2013 at 3:32 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>>>
>>>>> No problem. That "error" message when failing to create services is
>>>>> confusing.
>>>>>
>>>>> Glad it's working, let us know if you have any more problems!
>>>>>
>>>>> - Mark
>>>>>
>>>>>
>>>>> On Mon, Dec 16, 2013 at 2:19 PM, Brian Northan <bnorthan at gmail.com>wrote:
>>>>>
>>>>>> Hi Mark
>>>>>>
>>>>>> I just checked and It did work after all...  I actually never checked
>>>>>> to see if the final output was created.  I just saw the exception and
>>>>>> assumed it had stopped.
>>>>>>
>>>>>> So everything appears great now,.  Looks like the floating point
>>>>>> numbers are being saved correctly.
>>>>>>
>>>>>> Thanks for the fix
>>>>>>
>>>>>> Brian
>>>>>>
>>>>>>
>>>>>> On Mon, Dec 16, 2013 at 2:46 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>>>>>
>>>>>>> Hi Brian,
>>>>>>>
>>>>>>>  So, running your CreatePhantomCommand via the DeconvolutionTest
>>>>>>> class actually creates a blank image for me... I ran it from Eclipse
>>>>>>> directly though.
>>>>>>>
>>>>>>>  Also, I did observe the same error message that you saw, but the
>>>>>>> message was just logged and execution continued (because the services that
>>>>>>> failed to instantiate weren't necessary for execution.. so the "error"
>>>>>>> nature of the message is a bit of an overstatement in this case).
>>>>>>>
>>>>>>>  It is possible that some classes in SCIFIO erroneously have
>>>>>>> required services that aren't available in headless mode, but nothing stood
>>>>>>> out to me as suspicious.
>>>>>>>
>>>>>>> Could you do two more things for me:
>>>>>>>
>>>>>>> 1) Try running your scripts without using a headless IJ2 to verify
>>>>>>> this works on your end.
>>>>>>>
>>>>>>> 2) Set the Java system property: "scijava.log.level=4" and re-paste
>>>>>>> the error output. This will turn full debugging on.
>>>>>>>
>>>>>>> Thanks,
>>>>>>> Mark
>>>>>>>
>>>>>>>
>>>>>>> On Mon, Dec 16, 2013 at 11:23 AM, Brian Northan <bnorthan at gmail.com>wrote:
>>>>>>>
>>>>>>>> Hi Mark
>>>>>>>>
>>>>>>>> My code is here: https://github.com/bnorthan/projects -- be warned
>>>>>>>> it is in need of some refactoring which I plan to do as ImageJ2 scripting
>>>>>>>> becomes available.
>>>>>>>>
>>>>>>>> A simple example of running my custom commands is in
>>>>>>>> "SimpleCreatePhantoms.sh"  (the other scripts will not work because of
>>>>>>>> references to things on my own machine).
>>>>>>>>
>>>>>>>> The code is for a project I did earlier in the year (
>>>>>>>> http://spie.org/x648.xml?product_id=2002974).
>>>>>>>>
>>>>>>>> The main program is called DeconvolutionTest.java... which has
>>>>>>>> ended up evolving into a command parser.  I never really polished it though
>>>>>>>> because I am going to throw it away and use ImageJ2 scripting as that
>>>>>>>> develops.     A lot of things in the code base fall into that category,
>>>>>>>> things I put together quickly but are meant to be replaced with the
>>>>>>>> "proper" imagej2 component.
>>>>>>>>
>>>>>>>> SimpleCreatePhantoms.sh just calls a command to create a blank
>>>>>>>> phantom, then a second command to place a sphere in it.
>>>>>>>>
>>>>>>>>
>>>>>>>> On Mon, Dec 16, 2013 at 9:09 AM, Mark Hiner <hinerm at gmail.com>wrote:
>>>>>>>>
>>>>>>>>> P.S. please feel free to send your commands via private e-mail, if
>>>>>>>>> you don't want them to be public.
>>>>>>>>>
>>>>>>>>> Similarly, if you can share the dataset you're using that would be
>>>>>>>>> ideal... but no worries if it's proprietary or anything.
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> On Mon, Dec 16, 2013 at 8:07 AM, Mark Hiner <hiner at wisc.edu>wrote:
>>>>>>>>>
>>>>>>>>>> Hi Brian,
>>>>>>>>>>
>>>>>>>>>>  Ahhh.. I'm sorry! I misunderstood. If that's the actual stack
>>>>>>>>>> trace then no, I don't think you are having any problems with the
>>>>>>>>>> dependency tree, and all your pom settings should be fine given that stack
>>>>>>>>>> trace.
>>>>>>>>>>
>>>>>>>>>>  Sidetrack: the pom-scijava doesn't actually have snapshot
>>>>>>>>>> versions. It's basically just versioning glue - it defines a version
>>>>>>>>>> properties to help ensure consistent versions of the various SciJava
>>>>>>>>>> libraries (like SCIFIO) are consumed. Using 1.111 is fine, as we want to
>>>>>>>>>> use the latest version of everything since SCIFIO-0.7.4/0.7.5 are quite
>>>>>>>>>> new. Let me know if that's not clear...
>>>>>>>>>>
>>>>>>>>>>   Anyway, since we know it worked in 0.7.3, I would like to
>>>>>>>>>> bisect<https://www.kernel.org/pub/software/scm/git/docs/git-bisect.html>and figure out what happened. However, I currently can't reproduce the
>>>>>>>>>> issue. When I open a float dataset with SCIFIO 0.7.5 in IJ2 I'm able to
>>>>>>>>>> write it as a .tif. So you're probably exposing a bug with other commands
>>>>>>>>>> interacting with SCIFIO.
>>>>>>>>>>
>>>>>>>>>>  Can you share your custom commands? If not, could you let me
>>>>>>>>>> know which commands you're calling?
>>>>>>>>>>
>>>>>>>>>> Thanks,
>>>>>>>>>> - Mark
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> On Fri, Dec 13, 2013 at 1:49 PM, Brian Northan <
>>>>>>>>>> bnorthan at gmail.com> wrote:
>>>>>>>>>>
>>>>>>>>>>> Hi Mark
>>>>>>>>>>>
>>>>>>>>>>> I am using IJ2 in headless mode with some custom commands I
>>>>>>>>>>> wrote.  So it is always possible that I still have old references
>>>>>>>>>>> somewhere.  However that stack trace was actually generated with 0.7.4.
>>>>>>>>>>> When I had noted that 0.7.5-SNAPSHOT threw an exception, I went back to
>>>>>>>>>>> 0.7.4 to make sure that worked but it also had the same exception.  Then I
>>>>>>>>>>> went back to 0.7.3 which worked (other than the floating point problem).
>>>>>>>>>>>
>>>>>>>>>>> Below is the stack trace using 0.7.5-SNAPSHOT.   (btw since I am
>>>>>>>>>>> using IJ2 maybe there is something else wrong in the dependency tree??  One
>>>>>>>>>>> of the IJ2 components??  Should I set the sci-java version to a SNAPSHOT
>>>>>>>>>>> version too??  It is 1.111 right now.
>>>>>>>>>>>
>>>>>>>>>>>      at org.scijava.Context.inject(Context.java:273)
>>>>>>>>>>>     at
>>>>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstance(DefaultPluginService.java:241)
>>>>>>>>>>>     at
>>>>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstances(DefaultPluginService.java:229)
>>>>>>>>>>>     at
>>>>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstancesOfType(DefaultPluginService.java:220)
>>>>>>>>>>>     at
>>>>>>>>>>> org.scijava.plugin.AbstractSingletonService.createInstances(AbstractSingletonService.java:95)
>>>>>>>>>>>     at
>>>>>>>>>>> org.scijava.plugin.AbstractSingletonService.getInstances(AbstractSingletonService.java:73)
>>>>>>>>>>>     at
>>>>>>>>>>> org.scijava.plugin.AbstractSingletonService$1.get(AbstractSingletonService.java:87)
>>>>>>>>>>>     at
>>>>>>>>>>> org.scijava.plugin.AbstractSingletonService$1.get(AbstractSingletonService.java:83)
>>>>>>>>>>>     at
>>>>>>>>>>> org.scijava.object.ObjectIndex.resolvePending(ObjectIndex.java:391)
>>>>>>>>>>>     at org.scijava.object.ObjectIndex.get(ObjectIndex.java:136)
>>>>>>>>>>>     at
>>>>>>>>>>> org.scijava.object.DefaultObjectService.getObjects(DefaultObjectService.java:89)
>>>>>>>>>>>     at
>>>>>>>>>>> io.scif.codec.DefaultCodecService.getCodec(DefaultCodecService.java:65)
>>>>>>>>>>>     at
>>>>>>>>>>> io.scif.formats.tiff.TiffCompression.compress(TiffCompression.java:330)
>>>>>>>>>>>     at
>>>>>>>>>>> io.scif.formats.tiff.TiffSaver.writeImage(TiffSaver.java:391)
>>>>>>>>>>>     at
>>>>>>>>>>> io.scif.formats.tiff.TiffSaver.writeImage(TiffSaver.java:279)
>>>>>>>>>>>      at
>>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1250)
>>>>>>>>>>>     at
>>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1290)
>>>>>>>>>>>
>>>>>>>>>>>     at io.scif.AbstractWriter.savePlane(AbstractWriter.java:107)
>>>>>>>>>>>     at io.scif.img.ImgSaver.writePlanes(ImgSaver.java:532)
>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:380)
>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:133)
>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:114)
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> On Fri, Dec 13, 2013 at 1:40 PM, Mark Hiner <hinerm at gmail.com>wrote:
>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>> Hi Brian,
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>>  I referenced the scifio 0.7.5-SNAPSHOT (would that be correct
>>>>>>>>>>>>> to get the absolute latest??)
>>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>> Yep this should be the latest snapshot.
>>>>>>>>>>>>
>>>>>>>>>>>>  in my POM and ran into an exception when executing my code.
>>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>> ...
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>>      at
>>>>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1255)
>>>>>>>>>>>>>     at
>>>>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1295)
>>>>>>>>>>>>>     at
>>>>>>>>>>>>> io.scif.AbstractWriter.savePlane(AbstractWriter.java:107)
>>>>>>>>>>>>>     at io.scif.img.ImgSaver.writePlanes(ImgSaver.java:532)
>>>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:380)
>>>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:133)
>>>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:114)
>>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>> That stack trace suggests that an older version of the
>>>>>>>>>>>> TIFFFormat is being used. It must be from prior commit 37953<https://github.com/scifio/scifio/commit/379530aab9a9848e59363d87dcbdb79c4842bfc3>(because the TiffSaver.writeImage call is now on line 1250, not 1255). I'm
>>>>>>>>>>>> assuming it's from the 0.7.4 release.
>>>>>>>>>>>>
>>>>>>>>>>>>  Are you just running the code snippet that Curtis posted a
>>>>>>>>>>>> while back (or your own similar snippet)? Or are you using SCIFIO in IJ2,
>>>>>>>>>>>> or another application?
>>>>>>>>>>>>
>>>>>>>>>>>>  Could you run "mvn dependency:tree", or check the "Maven
>>>>>>>>>>>> Dependencies" tab if you're using Eclipse? I'm assuming something must
>>>>>>>>>>>> still have a 0.7.4 SCIFIO reference, which is being pulled in instead of
>>>>>>>>>>>> 0.7.5...
>>>>>>>>>>>>
>>>>>>>>>>>> Sorry for the inconvenience.. let me know what you find!
>>>>>>>>>>>>
>>>>>>>>>>>> Thanks,
>>>>>>>>>>>> Mark
>>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://scif.io/pipermail/scifio/attachments/20140108/a54970d1/attachment-0001.html>

From hiner at wisc.edu  Tue Jan 14 08:39:38 2014
From: hiner at wisc.edu (Mark Hiner)
Date: Tue, 14 Jan 2014 08:39:38 -0600
Subject: [SCIFIO] Service construction
In-Reply-To: <52D514DE.6000707@uni-konstanz.de>
References: <CA+B=mGo89gdBMJG6df8Vj_DZ3=jqqNiX7ETWkeu=O6Nn3cs9TQ@mail.gmail.com>
	<52D187E5.5060204@uni-konstanz.de>
	<CA+B=mGo_xuHh2fRH9wZgcgpW2MuqyMgxq-B5G8iQeTphHipo+A@mail.gmail.com>
	<52D514DE.6000707@uni-konstanz.de>
Message-ID: <CA+B=mGoZH-LfLquJ5tboDLLw5WSbJg2VVLX0HQ+3xfB9jG1_fA@mail.gmail.com>

Hi Christian,

These are both great questions, so no worries!

* If I want to use a global "Context" in my complete "KNIME Application",
> why is there the possibility to create several contexts?
>

Curtis can expand on this if necessary, but by avoiding one static Context,
we allow multiple instances of applications to run in the same JVM with
differing sets of Services, Plugins, and any other state that could be
desired. I don't have specific use cases off hand, but fundamentally,
avoiding static classes and allowing state to be encapsulated with each
instance of a Context is considerably more flexible. I think the only
advantage a static Context would have is that it might mitigate some
confusion. ;)

Also, if you know you want a static Context, it's easy enough to create a
static utility class with a getContext() method that provides a consistent
Context instance for everything in your application.

* How can I use the class "Scifio" in a global way, s.t. this context also
> knows all other services? The "Scifio" Context class itself suggests to
> create one context for ImageJ2, one for SCIFIO, etc.?!
>

I'm not sure exactly what you mean when you reference the "Scifio" Context.
But note that the SCIFIO
class<https://github.com/scifio/scifio/blob/master/scifio/src/main/java/io/scif/SCIFIO.java#L97>has
a constructor that accepts an existing Context. The SCIFIO class was
designed, fundamentally, to act as a wrapper for existing Contexts. So you
can maintain your one application context, and create a new SCIFIO around
it when needed. The zero-param constructor is primarily a convenience for
when you don't have/need a Context already in your application.

So to make SCIFIO global, just have a single global Context and then wrap
it with a SCIFIO whenever you need the SCIFIO API. There are many ways you
could implement this - using a static utility method as above, or adding a
HasSCIFIO layer on top of
AbstractContextual<https://github.com/scijava/scijava-common/blob/master/src/main/java/org/scijava/AbstractContextual.java>classes
(which we actually had at one point and then moved away from),
etc...

Hope this helps. Let me know if anything is unclear.

- Mark


On Tue, Jan 14, 2014 at 4:43 AM, Christian Dietz <
christian.dietz at uni-konstanz.de> wrote:

>  Hi Mark,
>
> maybe a very stupid questions, but I got two more very general ones:
>
> * If I want to use a global "Context" in my complete "KNIME Application",
> why is there the possibility to create several contexts?
> * How can I use the class "Scifio" in a global way, s.t. this context also
> knows all other services? The "Scifio" Context class itself suggests to
> create one context for ImageJ2, one for SCIFIO, etc.?!
>
> Don't misunderstand me, I really want to use the context the way you guys
> think its best, but I understand too little since now I guess :)
>
> Have a nice day!
>
> Christian
>
>
> Am 13.01.2014 17:34, schrieb Mark Hiner:
>
>  Hi Christian,
>
> On Sat, Jan 11, 2014 at 12:05 PM, Christian Dietz <
> christian.dietz at uni-konstanz.de> wrote:
>
>> If so, I thought about an "exclude service" option in the Context?
>> Something like: Include all SingletonService, but if you include them, make
>> sure that they are of type ImageJService or SCIFIOService or something like
>> that? Or: The user can provide a "ServiceFilter" Implementation where he
>> can exclude/Include certain services? I don't know if this makes sense at
>> all, just a naive thinking I guess.
>
>
>  I understand what you're saying, but there are significant problems with
> excluding services like this. It's really not extensible - it will always
> be possible for something downstream to add a problematic service. Unless
> you have complete control of the classpath - but if you have that, you can
> limit which services and plugins are discovered, and thus loaded, anyway.
>
>  So let's go more into the philosophy of what you're trying to do:
>
>  - Why severely limit Services available to the Context? From what I
> understood (and please correct me if I'm wrong here) you have one class
> loader and one context per plugin? So you want to limit the number of
> services because each plugin is going to load a new context? Is that right?
>
>  If so, I feel like the Context use is a bit too narrowly scoped here.
> It's developed as more of an application-level context, so I think it will
> be a continuous struggle to use it as something else. Would it be possible
> to refactor your context usage to simply have one Context, that loads all
> of the services/plugins available, and is then passed around/reused by
> other modules?
>
>  Thanks,
> Mark
>
>
> On Sat, Jan 11, 2014 at 12:05 PM, Christian Dietz <
> christian.dietz at uni-konstanz.de> wrote:
>
>>  Hi Mark,
>>
>> I figured out my problem and I have no clue how to solve it in a nice way
>> :-)
>>
>> We restrict our the context we create to very limited amount of services.
>> We only want to load the services we really need.
>> Since now, I told my Context to load all SingletonService.class. I needed
>> to load all SingletonServices, such that the method isMultipleChoiceObject
>> (line 382) returns "true" for e.g. the "CalculatorOp" and KNIME can
>> generate the dialog for e.g. the ImageCalculator. This only worked if the
>> CalculatorService.class is available in the context.
>>
>> The important part actually is: If I request to load _any_
>> SingletonService, of course also the SingletonServices from SCIFIO etc are
>> also loaded, which I actually don't need here. On the other hand, I don't
>> want to manually add SingletonServices from ImageJ2 I need (this is what I
>> do now with CalculatorSerice, ThresholdService, etc... see line 128/129 at
>> https://github.com/knime-ip/knip-imagej2/blob/master/org.knime.knip.imagej2.core/src/org/knime/knip/imagej2/core/IJGateway.java
>> ).
>>
>> Does this make sense?
>>
>> If so, I thought about an "exclude service" option in the Context?
>> Something like: Include all SingletonService, but if you include them, make
>> sure that they are of type ImageJService or SCIFIOService or something like
>> that? Or: The user can provide a "ServiceFilter" Implementation where he
>> can exclude/Include certain services? I don't know if this makes sense at
>> all, just a naive thinking I guess.
>>
>> Thanks for your support again,
>>
>> Christian
>>
>>
>>
>> Am 10.01.2014 19:57, schrieb Mark Hiner:
>>
>>    OK, so I'm questioning how the IJAdapterProvider<https://github.com/knime-ip/knip-imagej2/blob/master/org.knime.knip.imagej2.core/src/org/knime/knip/imagej2/core/IJGateway.java#L428>assembles the list of services..
>>
>>
>> It seems like it's trying to manually assemble a list of services to
>> construct the context with. Is that right? When constructing the context
>> and providing a list of services, you basically can give it just the
>> superclass services, and all children will be discovered. We did that so
>> you can make a context with say SCIFOService and SciJavaService and then
>> plugins that add more SCIFIOServices will automatically be included.
>>
>> Does that make sense?
>>
>>    So I would possibly refactor this to make a context with
>> ImageJServices, SCIFIOServices, and SciJavaServices.. because those are the
>> relevant components you're using, right?
>>
>>    Also, yes whenever you try to get objects from an ObjectIndex, ALL
>> pending initializations occur. This just defers the initialization until
>> it's required.
>>
>>    All SingletonServices add each of their singleton instances to the
>> ObjectIndex lazily during their initialize() method. So that's why these
>> translators are being loaded. And they fail because SCIFIOServices aren't
>> included.
>>
>> So, context creation is part of the problem.. but I think the
>> classpath/class loader is still incorrect, because you have OME-Formats
>> stuff in it.
>>
>> I will try to update the Context so that when that error comes up, it
>> prints out the services that WERE used to create the context, and maybe the
>> classpath of the current class loader. Because that error is extremely
>> cryptic and unhelpful.
>>
>> Then maybe we can discuss more tomorrow!
>>
>>   Take care
>>  Mark
>>
>>
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://scif.io/pipermail/scifio/attachments/20140114/89f1e264/attachment.html>

From martin.hoehne at uk-koeln.de  Wed Jan 15 06:36:48 2014
From: martin.hoehne at uk-koeln.de (=?iso-8859-1?Q?Martin_H=F6hne?=)
Date: Wed, 15 Jan 2014 12:36:48 +0000
Subject: [SCIFIO] opening tiff files with ImageJ2
Message-ID: <E450B219918B8C47A2C631E943340A7052F2CDA6@UKK086.ADS.UK-KOELN.DE>

Dear list,

We have 16 bit Tiff files from a camera (from a Chemoluminescence detector. Fusion XL machine form Vilber Lourmat http://www.vilber.com/). The images can be opened fine in Fiji (open or drag&drop). However, importing via File>Import>BioFormats fails. I get this error:

"Sorry, there was a problem during import". The log file is posted at the end of this mail.

We are fine with the normal opening, however the ImageJ2 seems to try to open with the import function (2.0.0.0 beta7.6). I get this message:
"io.scif.img.ImgIOExceprion: java.io.EOFException: Attempting to read beyond end of file" 

The image contains some metadata I can?t read when opening with ImageJ, but only when opening the file with the Fusion software from Vilber.
For the attached file the metadata is at the end of this posting as well.

The metadata is not so important, but it would be great if the images could be opened with ImageJ2 as well.

Thank you
Martin

PS - I hope this ist he right list to post. If not, maybe someone could direct me to the best suited forum

System information:
Win7 64bit
Fiji, updatet 2014-01-15

Log from import:
Fiji(legacy mode) File>Import>BioFormats:
loci.formats.FormatException: loci.common.ReflectException: java.lang.reflect.InvocationTargetException
	at loci.formats.in.TiffJAIReader.openBufferedImage(TiffJAIReader.java:202)
	at loci.formats.in.TiffJAIReader.initFile(TiffJAIReader.java:162)
	at loci.formats.FormatReader.setId(FormatReader.java:1360)
	at loci.formats.DelegateReader.setId(DelegateReader.java:275)
	at loci.plugins.in.ImportProcess.initializeFile(ImportProcess.java:482)
	at loci.plugins.in.ImportProcess.execute(ImportProcess.java:146)
	at loci.plugins.in.Importer.showDialogs(Importer.java:141)
	at loci.plugins.in.Importer.run(Importer.java:79)
	at loci.plugins.LociImporter.run(LociImporter.java:81)
	at ij.IJ.runUserPlugIn(IJ.java:196)
	at ij.IJ.runPlugIn(IJ.java:160)
	at ij.Executer.runCommand(Executer.java:131)
	at ij.Executer.run(Executer.java:64)
	at java.lang.Thread.run(Thread.java:662)
Caused by: loci.common.ReflectException: java.lang.reflect.InvocationTargetException
	at loci.common.ReflectedUniverse.exec(ReflectedUniverse.java:125)
	at loci.formats.in.TiffJAIReader.openBufferedImage(TiffJAIReader.java:197)
	... 13 more
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at ome.scifio.common.ReflectedUniverse.exec(ReflectedUniverse.java:317)
	at loci.common.ReflectedUniverse.exec(ReflectedUniverse.java:122)
	... 14 more
Caused by: java.io.EOFException
	at com.sun.media.jai.codec.SeekableStream.readFully(SeekableStream.java:329)
	at com.sun.media.jai.codec.SeekableStream.readFully(SeekableStream.java:306)
	at com.sun.media.jai.codec.SeekableStream.readUnsignedIntLE(SeekableStream.java:708)
	at com.sun.media.jai.codec.TIFFDirectory.readUnsignedInt(TIFFDirectory.java:524)
	at com.sun.media.jai.codec.TIFFDirectory.initialize(TIFFDirectory.java:289)
	at com.sun.media.jai.codec.TIFFDirectory.<init>(TIFFDirectory.java:125)
	at com.sun.media.jai.codecimpl.TIFFImage.<init>(TIFFImage.java:318)
	at com.sun.media.jai.codecimpl.TIFFImageDecoder.decodeAsRenderedImage(TIFFImageDecoder.java:112)
	... 20 more


Metadata of attached image:
Good Laboratory Practice:GLP

GENERAL INFORMATION
   Title: 
   Comments:
   Date:  Freitag, 13. Dezember 2013
   Time: 13:42:04
   Image name: C:\Users\nephrolab\Pictures\temp_western\mhoehne\eva24__1.TIF

   Software information: FusionCapt Advance  Solo 4 16.07

ACQUISITION PARAMETERS: 

Lens information:
   Iris aperture:  

Camera information:
   Integration time acquisition: : 0 min 50 sec 0 msec
   Acquisition mode: Serial/r/n      Image 1/10  
   Positive acquisition 
   Resolution used: Binning 2x2 
   Pixel depth 16 Bit per pixel  
   Software acquisition mode: Not defined 
   Vigneting filter : Aperture value 0.84
   Sensor area used: : (0, 0, 2048,2048)
   Configuration file used: C:\Users\nephrolab\Documents\Vilber Lourmat\nephrolab_settings\2x2 binning.prt
   Camera serial number: 275704
   Tray position:  Non applicable
   Application name: 2x2 binning
   Auto mode: User defined autoexposure coef 97%
   USB status: No USB detected
   Imaging system: FusionCapt Advance  Solo 4 16.07
   Camera serial number: 275704   - Firmware >2.0.0<
   USB codage: No darkroom
   Lens configuration: Non applicable
   RGB status: Not installed
   Skylight: Not installed

Image manipulation 

   Gray level inversion: No

-------------- next part --------------
A non-text attachment was scrubbed...
Name: eva24__1.TIF
Type: image/tiff
Size: 2098962 bytes
Desc: eva24__1.TIF
URL: <http://scif.io/pipermail/scifio/attachments/20140115/4555589d/attachment-0001.tif>

From hiner at wisc.edu  Wed Jan 15 09:32:46 2014
From: hiner at wisc.edu (Mark Hiner)
Date: Wed, 15 Jan 2014 09:32:46 -0600
Subject: [SCIFIO] opening tiff files with ImageJ2
In-Reply-To: <E450B219918B8C47A2C631E943340A7052F2CDA6@UKK086.ADS.UK-KOELN.DE>
References: <E450B219918B8C47A2C631E943340A7052F2CDA6@UKK086.ADS.UK-KOELN.DE>
Message-ID: <CA+B=mGqMOW1w2RM7R_0aLU=ubHPi1eeWDLNww47abZ-xQ7oRdA@mail.gmail.com>

Hi Martin,

PS - I hope this ist he right list to post. If not, maybe someone could
> direct me to the best suited forum
>

This is definitely a problem in SCIFIO, so this was the right place to
post! I've opened a new issue
<https://github.com/scifio/scifio/issues/123>to track this problem and
will look into it today.

Because this looks to be a bug in Bio-Formats as well (which is not
surprising - as the SCIFIO TIFF support is derived from Bio-Formats) I am
also forwarding this to the OME-Users list.

Thanks for the report!

- Mark


On Wed, Jan 15, 2014 at 6:36 AM, Martin H?hne <martin.hoehne at uk-koeln.de>wrote:

> Dear list,
>
> We have 16 bit Tiff files from a camera (from a Chemoluminescence
> detector. Fusion XL machine form Vilber Lourmat http://www.vilber.com/).
> The images can be opened fine in Fiji (open or drag&drop). However,
> importing via File>Import>BioFormats fails. I get this error:
>
> "Sorry, there was a problem during import". The log file is posted at the
> end of this mail.
>
> We are fine with the normal opening, however the ImageJ2 seems to try to
> open with the import function (2.0.0.0 beta7.6). I get this message:
> "io.scif.img.ImgIOExceprion: java.io.EOFException: Attempting to read
> beyond end of file"
>
> The image contains some metadata I can?t read when opening with ImageJ,
> but only when opening the file with the Fusion software from Vilber.
> For the attached file the metadata is at the end of this posting as well.
>
> The metadata is not so important, but it would be great if the images
> could be opened with ImageJ2 as well.
>
> Thank you
> Martin
>
> PS - I hope this ist he right list to post. If not, maybe someone could
> direct me to the best suited forum
>
> System information:
> Win7 64bit
> Fiji, updatet 2014-01-15
>
> Log from import:
> Fiji(legacy mode) File>Import>BioFormats:
> loci.formats.FormatException: loci.common.ReflectException:
> java.lang.reflect.InvocationTargetException
>         at
> loci.formats.in.TiffJAIReader.openBufferedImage(TiffJAIReader.java:202)
>         at loci.formats.in.TiffJAIReader.initFile(TiffJAIReader.java:162)
>         at loci.formats.FormatReader.setId(FormatReader.java:1360)
>         at loci.formats.DelegateReader.setId(DelegateReader.java:275)
>         at
> loci.plugins.in.ImportProcess.initializeFile(ImportProcess.java:482)
>         at loci.plugins.in.ImportProcess.execute(ImportProcess.java:146)
>         at loci.plugins.in.Importer.showDialogs(Importer.java:141)
>         at loci.plugins.in.Importer.run(Importer.java:79)
>         at loci.plugins.LociImporter.run(LociImporter.java:81)
>         at ij.IJ.runUserPlugIn(IJ.java:196)
>         at ij.IJ.runPlugIn(IJ.java:160)
>         at ij.Executer.runCommand(Executer.java:131)
>         at ij.Executer.run(Executer.java:64)
>         at java.lang.Thread.run(Thread.java:662)
> Caused by: loci.common.ReflectException:
> java.lang.reflect.InvocationTargetException
>         at loci.common.ReflectedUniverse.exec(ReflectedUniverse.java:125)
>         at
> loci.formats.in.TiffJAIReader.openBufferedImage(TiffJAIReader.java:197)
>         ... 13 more
> Caused by: java.lang.reflect.InvocationTargetException
>         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>         at
> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>         at
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
>         at java.lang.reflect.Method.invoke(Method.java:597)
>         at
> ome.scifio.common.ReflectedUniverse.exec(ReflectedUniverse.java:317)
>         at loci.common.ReflectedUniverse.exec(ReflectedUniverse.java:122)
>         ... 14 more
> Caused by: java.io.EOFException
>         at
> com.sun.media.jai.codec.SeekableStream.readFully(SeekableStream.java:329)
>         at
> com.sun.media.jai.codec.SeekableStream.readFully(SeekableStream.java:306)
>         at
> com.sun.media.jai.codec.SeekableStream.readUnsignedIntLE(SeekableStream.java:708)
>         at
> com.sun.media.jai.codec.TIFFDirectory.readUnsignedInt(TIFFDirectory.java:524)
>         at
> com.sun.media.jai.codec.TIFFDirectory.initialize(TIFFDirectory.java:289)
>         at
> com.sun.media.jai.codec.TIFFDirectory.<init>(TIFFDirectory.java:125)
>         at com.sun.media.jai.codecimpl.TIFFImage.<init>(TIFFImage.java:318)
>         at
> com.sun.media.jai.codecimpl.TIFFImageDecoder.decodeAsRenderedImage(TIFFImageDecoder.java:112)
>         ... 20 more
>
>
> Metadata of attached image:
> Good Laboratory Practice:GLP
>
> GENERAL INFORMATION
>    Title:
>    Comments:
>    Date:  Freitag, 13. Dezember 2013
>    Time: 13:42:04
>    Image name:
> C:\Users\nephrolab\Pictures\temp_western\mhoehne\eva24__1.TIF
>
>    Software information: FusionCapt Advance  Solo 4 16.07
>
> ACQUISITION PARAMETERS:
>
> Lens information:
>    Iris aperture:
>
> Camera information:
>    Integration time acquisition: : 0 min 50 sec 0 msec
>    Acquisition mode: Serial/r/n      Image 1/10
>    Positive acquisition
>    Resolution used: Binning 2x2
>    Pixel depth 16 Bit per pixel
>    Software acquisition mode: Not defined
>    Vigneting filter : Aperture value 0.84
>    Sensor area used: : (0, 0, 2048,2048)
>    Configuration file used: C:\Users\nephrolab\Documents\Vilber
> Lourmat\nephrolab_settings\2x2 binning.prt
>    Camera serial number: 275704
>    Tray position:  Non applicable
>    Application name: 2x2 binning
>    Auto mode: User defined autoexposure coef 97%
>    USB status: No USB detected
>    Imaging system: FusionCapt Advance  Solo 4 16.07
>    Camera serial number: 275704   - Firmware >2.0.0<
>    USB codage: No darkroom
>    Lens configuration: Non applicable
>    RGB status: Not installed
>    Skylight: Not installed
>
> Image manipulation
>
>    Gray level inversion: No
>
>
> _______________________________________________
> SCIFIO mailing list
> SCIFIO at scif.io
> http://scif.io/mailman/listinfo/scifio
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://scif.io/pipermail/scifio/attachments/20140115/b297d73d/attachment.html>

From hiner at wisc.edu  Thu Jan 16 13:47:41 2014
From: hiner at wisc.edu (Mark Hiner)
Date: Thu, 16 Jan 2014 13:47:41 -0600
Subject: [SCIFIO] opening tiff files with ImageJ2
In-Reply-To: <CA+B=mGqMOW1w2RM7R_0aLU=ubHPi1eeWDLNww47abZ-xQ7oRdA@mail.gmail.com>
References: <E450B219918B8C47A2C631E943340A7052F2CDA6@UKK086.ADS.UK-KOELN.DE>
	<CA+B=mGqMOW1w2RM7R_0aLU=ubHPi1eeWDLNww47abZ-xQ7oRdA@mail.gmail.com>
Message-ID: <CA+B=mGpykqkpzJ8jLn0irwAdrAOXJeVgv3yK_Hz+zYihEifFtA@mail.gmail.com>

Hi Martin,

  There were two IFDs (id 1807 and 1808) which were unknown to us -
presumably related to the FusionCapt software you're using. As interpreted
by the TIFF spec they would cause reading past the EOF. There was a
safeguard in the SCIFIO parser to truncate such a read before the EOF, but
it wasn't implemented properly.

 I fixed the bug,<https://github.com/scifio/scifio/commit/2b9f1be852c4b2bffee40a673924780022ac2c54>and
added a SCIFIO-dev
update site <http://fiji.sc/List_of_update_sites> for Fiji. Using this
update site will allow you to use the most recent SCIFIO. Generally, this
isn't guaranteed to be stable, but it should help if you want to view your
data in IJ2 between now and the next SCIFIO release.

Thanks again for reporting this issue. Let me know if anything else comes
up!

- Mark


On Wed, Jan 15, 2014 at 9:32 AM, Mark Hiner <hiner at wisc.edu> wrote:

> Hi Martin,
>
>
> PS - I hope this ist he right list to post. If not, maybe someone could
>> direct me to the best suited forum
>>
>
> This is definitely a problem in SCIFIO, so this was the right place to
> post! I've opened a new issue<https://github.com/scifio/scifio/issues/123>to track this problem and will look into it today.
>
> Because this looks to be a bug in Bio-Formats as well (which is not
> surprising - as the SCIFIO TIFF support is derived from Bio-Formats) I am
> also forwarding this to the OME-Users list.
>
> Thanks for the report!
>
> - Mark
>
>
> On Wed, Jan 15, 2014 at 6:36 AM, Martin H?hne <martin.hoehne at uk-koeln.de>wrote:
>
>> Dear list,
>>
>> We have 16 bit Tiff files from a camera (from a Chemoluminescence
>> detector. Fusion XL machine form Vilber Lourmat http://www.vilber.com/).
>> The images can be opened fine in Fiji (open or drag&drop). However,
>> importing via File>Import>BioFormats fails. I get this error:
>>
>> "Sorry, there was a problem during import". The log file is posted at the
>> end of this mail.
>>
>> We are fine with the normal opening, however the ImageJ2 seems to try to
>> open with the import function (2.0.0.0 beta7.6). I get this message:
>> "io.scif.img.ImgIOExceprion: java.io.EOFException: Attempting to read
>> beyond end of file"
>>
>> The image contains some metadata I can?t read when opening with ImageJ,
>> but only when opening the file with the Fusion software from Vilber.
>> For the attached file the metadata is at the end of this posting as well.
>>
>> The metadata is not so important, but it would be great if the images
>> could be opened with ImageJ2 as well.
>>
>> Thank you
>> Martin
>>
>> PS - I hope this ist he right list to post. If not, maybe someone could
>> direct me to the best suited forum
>>
>> System information:
>> Win7 64bit
>> Fiji, updatet 2014-01-15
>>
>> Log from import:
>> Fiji(legacy mode) File>Import>BioFormats:
>> loci.formats.FormatException: loci.common.ReflectException:
>> java.lang.reflect.InvocationTargetException
>>         at
>> loci.formats.in.TiffJAIReader.openBufferedImage(TiffJAIReader.java:202)
>>         at loci.formats.in.TiffJAIReader.initFile(TiffJAIReader.java:162)
>>         at loci.formats.FormatReader.setId(FormatReader.java:1360)
>>         at loci.formats.DelegateReader.setId(DelegateReader.java:275)
>>         at
>> loci.plugins.in.ImportProcess.initializeFile(ImportProcess.java:482)
>>         at loci.plugins.in.ImportProcess.execute(ImportProcess.java:146)
>>         at loci.plugins.in.Importer.showDialogs(Importer.java:141)
>>         at loci.plugins.in.Importer.run(Importer.java:79)
>>         at loci.plugins.LociImporter.run(LociImporter.java:81)
>>         at ij.IJ.runUserPlugIn(IJ.java:196)
>>         at ij.IJ.runPlugIn(IJ.java:160)
>>         at ij.Executer.runCommand(Executer.java:131)
>>         at ij.Executer.run(Executer.java:64)
>>         at java.lang.Thread.run(Thread.java:662)
>> Caused by: loci.common.ReflectException:
>> java.lang.reflect.InvocationTargetException
>>         at loci.common.ReflectedUniverse.exec(ReflectedUniverse.java:125)
>>         at
>> loci.formats.in.TiffJAIReader.openBufferedImage(TiffJAIReader.java:197)
>>         ... 13 more
>> Caused by: java.lang.reflect.InvocationTargetException
>>         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>         at
>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>>         at
>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
>>         at java.lang.reflect.Method.invoke(Method.java:597)
>>         at
>> ome.scifio.common.ReflectedUniverse.exec(ReflectedUniverse.java:317)
>>         at loci.common.ReflectedUniverse.exec(ReflectedUniverse.java:122)
>>         ... 14 more
>> Caused by: java.io.EOFException
>>         at
>> com.sun.media.jai.codec.SeekableStream.readFully(SeekableStream.java:329)
>>         at
>> com.sun.media.jai.codec.SeekableStream.readFully(SeekableStream.java:306)
>>         at
>> com.sun.media.jai.codec.SeekableStream.readUnsignedIntLE(SeekableStream.java:708)
>>         at
>> com.sun.media.jai.codec.TIFFDirectory.readUnsignedInt(TIFFDirectory.java:524)
>>         at
>> com.sun.media.jai.codec.TIFFDirectory.initialize(TIFFDirectory.java:289)
>>         at
>> com.sun.media.jai.codec.TIFFDirectory.<init>(TIFFDirectory.java:125)
>>         at
>> com.sun.media.jai.codecimpl.TIFFImage.<init>(TIFFImage.java:318)
>>         at
>> com.sun.media.jai.codecimpl.TIFFImageDecoder.decodeAsRenderedImage(TIFFImageDecoder.java:112)
>>         ... 20 more
>>
>>
>> Metadata of attached image:
>> Good Laboratory Practice:GLP
>>
>> GENERAL INFORMATION
>>    Title:
>>    Comments:
>>    Date:  Freitag, 13. Dezember 2013
>>    Time: 13:42:04
>>    Image name:
>> C:\Users\nephrolab\Pictures\temp_western\mhoehne\eva24__1.TIF
>>
>>    Software information: FusionCapt Advance  Solo 4 16.07
>>
>> ACQUISITION PARAMETERS:
>>
>> Lens information:
>>    Iris aperture:
>>
>> Camera information:
>>    Integration time acquisition: : 0 min 50 sec 0 msec
>>    Acquisition mode: Serial/r/n      Image 1/10
>>    Positive acquisition
>>    Resolution used: Binning 2x2
>>    Pixel depth 16 Bit per pixel
>>    Software acquisition mode: Not defined
>>    Vigneting filter : Aperture value 0.84
>>    Sensor area used: : (0, 0, 2048,2048)
>>    Configuration file used: C:\Users\nephrolab\Documents\Vilber
>> Lourmat\nephrolab_settings\2x2 binning.prt
>>    Camera serial number: 275704
>>    Tray position:  Non applicable
>>    Application name: 2x2 binning
>>    Auto mode: User defined autoexposure coef 97%
>>    USB status: No USB detected
>>    Imaging system: FusionCapt Advance  Solo 4 16.07
>>    Camera serial number: 275704   - Firmware >2.0.0<
>>    USB codage: No darkroom
>>    Lens configuration: Non applicable
>>    RGB status: Not installed
>>    Skylight: Not installed
>>
>> Image manipulation
>>
>>    Gray level inversion: No
>>
>>
>> _______________________________________________
>> SCIFIO mailing list
>> SCIFIO at scif.io
>> http://scif.io/mailman/listinfo/scifio
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://scif.io/pipermail/scifio/attachments/20140116/6aafb371/attachment.html>

From hiner at wisc.edu  Thu Jan 16 14:37:00 2014
From: hiner at wisc.edu (Mark Hiner)
Date: Thu, 16 Jan 2014 14:37:00 -0600
Subject: [SCIFIO] opening tiff files with ImageJ2
In-Reply-To: <E450B219918B8C47A2C631E943340A7052F2E238@UKK086.ADS.UK-KOELN.DE>
References: <E450B219918B8C47A2C631E943340A7052F2CDA6@UKK086.ADS.UK-KOELN.DE>
	<CA+B=mGqMOW1w2RM7R_0aLU=ubHPi1eeWDLNww47abZ-xQ7oRdA@mail.gmail.com>
	<CA+B=mGpykqkpzJ8jLn0irwAdrAOXJeVgv3yK_Hz+zYihEifFtA@mail.gmail.com>
	<E450B219918B8C47A2C631E943340A7052F2E238@UKK086.ADS.UK-KOELN.DE>
Message-ID: <CA+B=mGoV1FW6appuaZNu1+WqhLNX0HDGCa19SkA1JAOug82uqA@mail.gmail.com>

Hi Martin,

thank you for that incredible fast reaction and fix!
>

You're welcome! Just wanted to post this on the list, so it goes on record.
;)

 I tried with the Scifio-dev update and it works perfectly fine.
>

Glad to hear it. It's always great to get feedback about SCIFIO/IJ2 - even
bug reports!

Take care,
Mark


On Thu, Jan 16, 2014 at 2:18 PM, Martin H?hne <martin.hoehne at uk-koeln.de>wrote:

>  Hi Mark,
>
>
>
> thank you for that incredible fast reaction and fix!
>
>
>
> As I said, currently we were still fine with Fiji/ImageJ1 opening the
> files. I just wanted to ensure that we still can open the files when
> ImageJ2 has replaced ImageJ1.
>
> I tried with the Scifio-dev update and it works perfectly fine.
>
>  Thanks again
>
> Martin
>
>
>
> *Von:* hinerm at gmail.com [mailto:hinerm at gmail.com] *Im Auftrag von *Mark
> Hiner
> *Gesendet:* Donnerstag, 16. Januar 2014 20:48
> *An:* Martin H?hne
> *Cc:* scifio at scif.io
> *Betreff:* Re: [SCIFIO] opening tiff files with ImageJ2
>
>
>
> Hi Martin,
>
>   There were two IFDs (id 1807 and 1808) which were unknown to us -
> presumably related to the FusionCapt software you're using. As interpreted
> by the TIFF spec they would cause reading past the EOF. There was a
> safeguard in the SCIFIO parser to truncate such a read before the EOF, but
> it wasn't implemented properly.
>
>  I fixed the bug,<https://github.com/scifio/scifio/commit/2b9f1be852c4b2bffee40a673924780022ac2c54>and added a SCIFIO-dev
> update site <http://fiji.sc/List_of_update_sites> for Fiji. Using this
> update site will allow you to use the most recent SCIFIO. Generally, this
> isn't guaranteed to be stable, but it should help if you want to view your
> data in IJ2 between now and the next SCIFIO release.
>
> Thanks again for reporting this issue. Let me know if anything else comes
> up!
>
> - Mark
>
>
>
> On Wed, Jan 15, 2014 at 9:32 AM, Mark Hiner <hiner at wisc.edu> wrote:
>
> Hi Martin,
>
>
>
> PS - I hope this ist he right list to post. If not, maybe someone could
> direct me to the best suited forum
>
>
>
> This is definitely a problem in SCIFIO, so this was the right place to
> post! I've opened a new issue<https://github.com/scifio/scifio/issues/123>to track this problem and will look into it today.
>
> Because this looks to be a bug in Bio-Formats as well (which is not
> surprising - as the SCIFIO TIFF support is derived from Bio-Formats) I am
> also forwarding this to the OME-Users list.
>
> Thanks for the report!
>
> - Mark
>
>
>
> On Wed, Jan 15, 2014 at 6:36 AM, Martin H?hne <martin.hoehne at uk-koeln.de>
> wrote:
>
>  Dear list,
>
> We have 16 bit Tiff files from a camera (from a Chemoluminescence
> detector. Fusion XL machine form Vilber Lourmat http://www.vilber.com/).
> The images can be opened fine in Fiji (open or drag&drop). However,
> importing via File>Import>BioFormats fails. I get this error:
>
> "Sorry, there was a problem during import". The log file is posted at the
> end of this mail.
>
> We are fine with the normal opening, however the ImageJ2 seems to try to
> open with the import function (2.0.0.0 beta7.6). I get this message:
> "io.scif.img.ImgIOExceprion: java.io.EOFException: Attempting to read
> beyond end of file"
>
> The image contains some metadata I can?t read when opening with ImageJ,
> but only when opening the file with the Fusion software from Vilber.
> For the attached file the metadata is at the end of this posting as well.
>
> The metadata is not so important, but it would be great if the images
> could be opened with ImageJ2 as well.
>
> Thank you
> Martin
>
> PS - I hope this ist he right list to post. If not, maybe someone could
> direct me to the best suited forum
>
> System information:
> Win7 64bit
> Fiji, updatet 2014-01-15
>
> Log from import:
> Fiji(legacy mode) File>Import>BioFormats:
> loci.formats.FormatException: loci.common.ReflectException:
> java.lang.reflect.InvocationTargetException
>         at
> loci.formats.in.TiffJAIReader.openBufferedImage(TiffJAIReader.java:202)
>         at loci.formats.in.TiffJAIReader.initFile(TiffJAIReader.java:162)
>         at loci.formats.FormatReader.setId(FormatReader.java:1360)
>         at loci.formats.DelegateReader.setId(DelegateReader.java:275)
>         at
> loci.plugins.in.ImportProcess.initializeFile(ImportProcess.java:482)
>         at loci.plugins.in.ImportProcess.execute(ImportProcess.java:146)
>         at loci.plugins.in.Importer.showDialogs(Importer.java:141)
>         at loci.plugins.in.Importer.run(Importer.java:79)
>         at loci.plugins.LociImporter.run(LociImporter.java:81)
>         at ij.IJ.runUserPlugIn(IJ.java:196)
>         at ij.IJ.runPlugIn(IJ.java:160)
>         at ij.Executer.runCommand(Executer.java:131)
>         at ij.Executer.run(Executer.java:64)
>         at java.lang.Thread.run(Thread.java:662)
> Caused by: loci.common.ReflectException:
> java.lang.reflect.InvocationTargetException
>         at loci.common.ReflectedUniverse.exec(ReflectedUniverse.java:125)
>         at
> loci.formats.in.TiffJAIReader.openBufferedImage(TiffJAIReader.java:197)
>         ... 13 more
> Caused by: java.lang.reflect.InvocationTargetException
>         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>         at
> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>         at
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
>         at java.lang.reflect.Method.invoke(Method.java:597)
>         at
> ome.scifio.common.ReflectedUniverse.exec(ReflectedUniverse.java:317)
>         at loci.common.ReflectedUniverse.exec(ReflectedUniverse.java:122)
>         ... 14 more
> Caused by: java.io.EOFException
>         at
> com.sun.media.jai.codec.SeekableStream.readFully(SeekableStream.java:329)
>         at
> com.sun.media.jai.codec.SeekableStream.readFully(SeekableStream.java:306)
>         at
> com.sun.media.jai.codec.SeekableStream.readUnsignedIntLE(SeekableStream.java:708)
>         at
> com.sun.media.jai.codec.TIFFDirectory.readUnsignedInt(TIFFDirectory.java:524)
>         at
> com.sun.media.jai.codec.TIFFDirectory.initialize(TIFFDirectory.java:289)
>         at
> com.sun.media.jai.codec.TIFFDirectory.<init>(TIFFDirectory.java:125)
>         at com.sun.media.jai.codecimpl.TIFFImage.<init>(TIFFImage.java:318)
>         at
> com.sun.media.jai.codecimpl.TIFFImageDecoder.decodeAsRenderedImage(TIFFImageDecoder.java:112)
>         ... 20 more
>
>
> Metadata of attached image:
> Good Laboratory Practice:GLP
>
> GENERAL INFORMATION
>    Title:
>    Comments:
>    Date:  Freitag, 13. Dezember 2013
>    Time: 13:42:04
>    Image name:
> C:\Users\nephrolab\Pictures\temp_western\mhoehne\eva24__1.TIF
>
>    Software information: FusionCapt Advance  Solo 4 16.07
>
> ACQUISITION PARAMETERS:
>
> Lens information:
>    Iris aperture:
>
> Camera information:
>    Integration time acquisition: : 0 min 50 sec 0 msec
>    Acquisition mode: Serial/r/n      Image 1/10
>    Positive acquisition
>    Resolution used: Binning 2x2
>    Pixel depth 16 Bit per pixel
>    Software acquisition mode: Not defined
>    Vigneting filter : Aperture value 0.84
>    Sensor area used: : (0, 0, 2048,2048)
>    Configuration file used: C:\Users\nephrolab\Documents\Vilber
> Lourmat\nephrolab_settings\2x2 binning.prt
>    Camera serial number: 275704
>    Tray position:  Non applicable
>    Application name: 2x2 binning
>    Auto mode: User defined autoexposure coef 97%
>    USB status: No USB detected
>    Imaging system: FusionCapt Advance  Solo 4 16.07
>    Camera serial number: 275704   - Firmware >2.0.0<
>    USB codage: No darkroom
>    Lens configuration: Non applicable
>    RGB status: Not installed
>    Skylight: Not installed
>
> Image manipulation
>
>    Gray level inversion: No
>
>   _______________________________________________
> SCIFIO mailing list
> SCIFIO at scif.io
> http://scif.io/mailman/listinfo/scifio
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://scif.io/pipermail/scifio/attachments/20140116/84d570fc/attachment-0001.html>

From ctrueden at wisc.edu  Tue Jan 21 16:08:39 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Tue, 21 Jan 2014 16:08:39 -0600
Subject: [SCIFIO] Service construction
In-Reply-To: <CA+B=mGoZH-LfLquJ5tboDLLw5WSbJg2VVLX0HQ+3xfB9jG1_fA@mail.gmail.com>
References: <CA+B=mGo89gdBMJG6df8Vj_DZ3=jqqNiX7ETWkeu=O6Nn3cs9TQ@mail.gmail.com>
	<52D187E5.5060204@uni-konstanz.de>
	<CA+B=mGo_xuHh2fRH9wZgcgpW2MuqyMgxq-B5G8iQeTphHipo+A@mail.gmail.com>
	<52D514DE.6000707@uni-konstanz.de>
	<CA+B=mGoZH-LfLquJ5tboDLLw5WSbJg2VVLX0HQ+3xfB9jG1_fA@mail.gmail.com>
Message-ID: <CADN69y=eQ0+OuHP2OWTXvGvfYUMHfU0cDOK9iKQJVXRqSKz5JQ@mail.gmail.com>

Hi Christian & everyone,

> Curtis can expand on this if necessary, but by avoiding one static
> Context, we allow multiple instances of applications to run in the
> same JVM with differing sets of Services, Plugins, and any other state
> that could be desired.

Right. There are valid use cases for having multiple Contexts in the same
JVM. But I would not suggest proliferating several Context objects within
the same instance of the KNIME application, if you can avoid it.

As a rule of thumb: two objects from different Contexts should not
interact. There is currently no way to pass objects between Contexts. Each
Contextual object has exactly *one* Context associated with it, which
cannot be changed once it is set. This is by design. I am open to changing
the design, but at the moment, that's how it works. So if you create object
Foo using Context F, and then create object Bar using Context B, and then
later Foo and Bar need to interact somehow... the behavior will be
undefined at best, unstable or explosive at worst. Such interactions do not
always check for "context consistency" but that assumption is definitely
implicit throughout the codebase right now.

So I agree with Mark: best if you can create one Context that has all the
services you need, and you can reuse that Context everywhere. If this is a
problem for OSGi-related reasons (e.g., class loaders) then perhaps we can
tackle those issues at our next hackathon. :-)

Regards,
Curtis


On Tue, Jan 14, 2014 at 8:39 AM, Mark Hiner <hiner at wisc.edu> wrote:

> Hi Christian,
>
> These are both great questions, so no worries!
>
> * If I want to use a global "Context" in my complete "KNIME Application",
>> why is there the possibility to create several contexts?
>>
>
> Curtis can expand on this if necessary, but by avoiding one static
> Context, we allow multiple instances of applications to run in the same JVM
> with differing sets of Services, Plugins, and any other state that could be
> desired. I don't have specific use cases off hand, but fundamentally,
> avoiding static classes and allowing state to be encapsulated with each
> instance of a Context is considerably more flexible. I think the only
> advantage a static Context would have is that it might mitigate some
> confusion. ;)
>
> Also, if you know you want a static Context, it's easy enough to create a
> static utility class with a getContext() method that provides a consistent
> Context instance for everything in your application.
>
> * How can I use the class "Scifio" in a global way, s.t. this context also
>> knows all other services? The "Scifio" Context class itself suggests to
>> create one context for ImageJ2, one for SCIFIO, etc.?!
>>
>
> I'm not sure exactly what you mean when you reference the "Scifio"
> Context. But note that the SCIFIO class<https://github.com/scifio/scifio/blob/master/scifio/src/main/java/io/scif/SCIFIO.java#L97>has a constructor that accepts an existing Context. The SCIFIO class was
> designed, fundamentally, to act as a wrapper for existing Contexts. So you
> can maintain your one application context, and create a new SCIFIO around
> it when needed. The zero-param constructor is primarily a convenience for
> when you don't have/need a Context already in your application.
>
> So to make SCIFIO global, just have a single global Context and then wrap
> it with a SCIFIO whenever you need the SCIFIO API. There are many ways you
> could implement this - using a static utility method as above, or adding a
> HasSCIFIO layer on top of AbstractContextual<https://github.com/scijava/scijava-common/blob/master/src/main/java/org/scijava/AbstractContextual.java>classes (which we actually had at one point and then moved away from),
> etc...
>
> Hope this helps. Let me know if anything is unclear.
>
> - Mark
>
>
> On Tue, Jan 14, 2014 at 4:43 AM, Christian Dietz <
> christian.dietz at uni-konstanz.de> wrote:
>
>>  Hi Mark,
>>
>> maybe a very stupid questions, but I got two more very general ones:
>>
>> * If I want to use a global "Context" in my complete "KNIME Application",
>> why is there the possibility to create several contexts?
>> * How can I use the class "Scifio" in a global way, s.t. this context
>> also knows all other services? The "Scifio" Context class itself suggests
>> to create one context for ImageJ2, one for SCIFIO, etc.?!
>>
>> Don't misunderstand me, I really want to use the context the way you guys
>> think its best, but I understand too little since now I guess :)
>>
>> Have a nice day!
>>
>> Christian
>>
>>
>> Am 13.01.2014 17:34, schrieb Mark Hiner:
>>
>>  Hi Christian,
>>
>> On Sat, Jan 11, 2014 at 12:05 PM, Christian Dietz <
>> christian.dietz at uni-konstanz.de> wrote:
>>
>>> If so, I thought about an "exclude service" option in the Context?
>>> Something like: Include all SingletonService, but if you include them, make
>>> sure that they are of type ImageJService or SCIFIOService or something like
>>> that? Or: The user can provide a "ServiceFilter" Implementation where he
>>> can exclude/Include certain services? I don't know if this makes sense at
>>> all, just a naive thinking I guess.
>>
>>
>>  I understand what you're saying, but there are significant problems
>> with excluding services like this. It's really not extensible - it will
>> always be possible for something downstream to add a problematic service.
>> Unless you have complete control of the classpath - but if you have that,
>> you can limit which services and plugins are discovered, and thus loaded,
>> anyway.
>>
>>  So let's go more into the philosophy of what you're trying to do:
>>
>>  - Why severely limit Services available to the Context? From what I
>> understood (and please correct me if I'm wrong here) you have one class
>> loader and one context per plugin? So you want to limit the number of
>> services because each plugin is going to load a new context? Is that right?
>>
>>  If so, I feel like the Context use is a bit too narrowly scoped here.
>> It's developed as more of an application-level context, so I think it will
>> be a continuous struggle to use it as something else. Would it be possible
>> to refactor your context usage to simply have one Context, that loads all
>> of the services/plugins available, and is then passed around/reused by
>> other modules?
>>
>>  Thanks,
>> Mark
>>
>>
>> On Sat, Jan 11, 2014 at 12:05 PM, Christian Dietz <
>> christian.dietz at uni-konstanz.de> wrote:
>>
>>>  Hi Mark,
>>>
>>> I figured out my problem and I have no clue how to solve it in a nice
>>> way :-)
>>>
>>> We restrict our the context we create to very limited amount of
>>> services. We only want to load the services we really need.
>>> Since now, I told my Context to load all SingletonService.class. I
>>> needed to load all SingletonServices, such that the method
>>> isMultipleChoiceObject (line 382) returns "true" for e.g. the
>>> "CalculatorOp" and KNIME can generate the dialog for e.g. the
>>> ImageCalculator. This only worked if the CalculatorService.class is
>>> available in the context.
>>>
>>> The important part actually is: If I request to load _any_
>>> SingletonService, of course also the SingletonServices from SCIFIO etc are
>>> also loaded, which I actually don't need here. On the other hand, I don't
>>> want to manually add SingletonServices from ImageJ2 I need (this is what I
>>> do now with CalculatorSerice, ThresholdService, etc... see line 128/129 at
>>> https://github.com/knime-ip/knip-imagej2/blob/master/org.knime.knip.imagej2.core/src/org/knime/knip/imagej2/core/IJGateway.java
>>> ).
>>>
>>> Does this make sense?
>>>
>>> If so, I thought about an "exclude service" option in the Context?
>>> Something like: Include all SingletonService, but if you include them, make
>>> sure that they are of type ImageJService or SCIFIOService or something like
>>> that? Or: The user can provide a "ServiceFilter" Implementation where he
>>> can exclude/Include certain services? I don't know if this makes sense at
>>> all, just a naive thinking I guess.
>>>
>>> Thanks for your support again,
>>>
>>> Christian
>>>
>>>
>>>
>>> Am 10.01.2014 19:57, schrieb Mark Hiner:
>>>
>>>    OK, so I'm questioning how the IJAdapterProvider<https://github.com/knime-ip/knip-imagej2/blob/master/org.knime.knip.imagej2.core/src/org/knime/knip/imagej2/core/IJGateway.java#L428>assembles the list of services..
>>>
>>>
>>> It seems like it's trying to manually assemble a list of services to
>>> construct the context with. Is that right? When constructing the context
>>> and providing a list of services, you basically can give it just the
>>> superclass services, and all children will be discovered. We did that so
>>> you can make a context with say SCIFOService and SciJavaService and then
>>> plugins that add more SCIFIOServices will automatically be included.
>>>
>>> Does that make sense?
>>>
>>>    So I would possibly refactor this to make a context with
>>> ImageJServices, SCIFIOServices, and SciJavaServices.. because those are the
>>> relevant components you're using, right?
>>>
>>>    Also, yes whenever you try to get objects from an ObjectIndex, ALL
>>> pending initializations occur. This just defers the initialization until
>>> it's required.
>>>
>>>    All SingletonServices add each of their singleton instances to the
>>> ObjectIndex lazily during their initialize() method. So that's why these
>>> translators are being loaded. And they fail because SCIFIOServices aren't
>>> included.
>>>
>>> So, context creation is part of the problem.. but I think the
>>> classpath/class loader is still incorrect, because you have OME-Formats
>>> stuff in it.
>>>
>>> I will try to update the Context so that when that error comes up, it
>>> prints out the services that WERE used to create the context, and maybe the
>>> classpath of the current class loader. Because that error is extremely
>>> cryptic and unhelpful.
>>>
>>> Then maybe we can discuss more tomorrow!
>>>
>>>   Take care
>>>  Mark
>>>
>>>
>>>
>>
>>
>  --
> You received this message because you are subscribed to the Google Groups
> "scijava" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to scijava+unsubscribe at googlegroups.com.
> For more options, visit https://groups.google.com/groups/opt_out.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://scif.io/pipermail/scifio/attachments/20140121/9bfc79fd/attachment.html>

From hiner at wisc.edu  Wed Jan  8 14:40:36 2014
From: hiner at wisc.edu (Mark Hiner)
Date: Wed, 8 Jan 2014 14:40:36 -0600
Subject: [SCIFIO] [ImageJ-devel] [ImgLib2] The img-metadata branch
In-Reply-To: <CAMWa8i0XoT3GPAc3sU8_4uBkP9sb__bE9Zv99=N_e17wGnBKRg@mail.gmail.com>
References: <CADN69ykbTxxsr6z6RcEqbb3hRpXgrOCZcw9700_zSFOCPNO_kg@mail.gmail.com>
	<CADN69ymwt_qLY2aYuGPonWEbS5sQxAmYHi==YdAvNe464yEV_w@mail.gmail.com>
	<CAMWa8i1+H5X=O+oe14SE200jkq5hPKZmVYnX=-q0NrKpJp8x2Q@mail.gmail.com>
	<CAMWa8i1t-haNinXjkaoDFntRF-8aW+1Si8QZYQZKePxHzptVtQ@mail.gmail.com>
	<CADN69ymbqEzu+XCRQr051ke1vppEf9frOUe=CEK4GSmop_00eg@mail.gmail.com>
	<CADN69ykKh8Y0eu11yLn08uRS0WqfP165fOPyW5ojXCppfsMFZw@mail.gmail.com>
	<CAMWa8i04n31BRSKN-8guCpFW-HS_HAbcZQvsmroib3WPwMjDVg@mail.gmail.com>
	<CA+B=mGpwd4a+JVyxKAiMtGZeEtMv_oqghc6SKxyw04OJfkd-Uw@mail.gmail.com>
	<CAMWa8i0fmiF51aN7s-kNJzDCuVZygp35-HFjKywrbB0avs-Gjw@mail.gmail.com>
	<CA+B=mGqfQ-jdmXv69addi3SrG=KN7pLDk1VR5pdzEigVGwD4fg@mail.gmail.com>
	<CAMWa8i0sLRvc3N8XgCNTcHs7nV-nxzVbt+Gxb+RbBH8KFRGLXg@mail.gmail.com>
	<CA+B=mGr+z1FiDfOJLJJBX1n2F971YoYVXcNjYcqiTTjds2F5+Q@mail.gmail.com>
	<CA+B=mGproDP1qioEeVZaLNP4JzMwYsyTHA63XaEevHWF7Oezwg@mail.gmail.com>
	<CAMWa8i282xYqkTcQGwDXyAiUYa+RYamDQ3XhDt5bR1TP3-nQnA@mail.gmail.com>
	<CA+B=mGqEsceF2dQ=pv3nJtAJuPQQ5QWbdOympjg7y1rMAbd5YA@mail.gmail.com>
	<CAMWa8i10EimnUz+vRcX372UcGZ2cUnGpkPu630FLfQzFyWn57g@mail.gmail.com>
	<CA+B=mGo0iXWwmwcLhGVBF9AbuCegzQaAxf5ca4ikv974iYhQ2g@mail.gmail.com>
	<CAMWa8i0XoT3GPAc3sU8_4uBkP9sb__bE9Zv99=N_e17wGnBKRg@mail.gmail.com>
Message-ID: <CA+B=mGqSWQaWjOas55bkefdv_e6GFiS_rZQ7zdb59qv9WaLrgA@mail.gmail.com>

Hi Brian,

 Sorry to hear that some tests are failing for you now.

 It does sound like there could be a bug here, but I will need more
information to track it down.

 Which tests are you running exactly, and what's the stack trace you get?
If you could provide a minimal set of steps to reproduce the error, that
would be great. Also, where are you setting the pixel size to be 0? (as a
side note, a value of 1.0 might be safer.. which is what these axes are
supposed to default to)

Thanks!
Mark


On Wed, Jan 8, 2014 at 9:57 AM, Brian Northan <bnorthan at gmail.com> wrote:

> Hi Mark
>
> Hope you had a good holiday.   I noticed some tests of mine failing just
> after Christmas. I think the failure possibly has something to do with a
> change in setting pixel size when loading.  Right around line 1000 in this
> commit.
>
>
> https://github.com/scifio/scifio/commit/232261b978cbaeb42eb28c67cdddb7aca1acb1b6
>
> If you remember I have a script SimpleCreatePhantoms.sh which creates a
> blank image then places a sphere in it.  It now fails in the second step
> because it cannot reload the blank image.  I also cannot reload the newly
> created blank image into the latest build of ImageJ.
>
> I have a workaround (set pixel size to zero since I am not actually using
> it right now) so it isn't critical but thought I'd let you know about a
> potential bug.
>
> Brian
>
>
> On Mon, Dec 16, 2013 at 3:32 PM, Mark Hiner <hiner at wisc.edu> wrote:
>
>> No problem. That "error" message when failing to create services is
>> confusing.
>>
>> Glad it's working, let us know if you have any more problems!
>>
>> - Mark
>>
>>
>> On Mon, Dec 16, 2013 at 2:19 PM, Brian Northan <bnorthan at gmail.com>wrote:
>>
>>> Hi Mark
>>>
>>> I just checked and It did work after all...  I actually never checked to
>>> see if the final output was created.  I just saw the exception and assumed
>>> it had stopped.
>>>
>>> So everything appears great now,.  Looks like the floating point numbers
>>> are being saved correctly.
>>>
>>> Thanks for the fix
>>>
>>> Brian
>>>
>>>
>>> On Mon, Dec 16, 2013 at 2:46 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>>
>>>> Hi Brian,
>>>>
>>>>  So, running your CreatePhantomCommand via the DeconvolutionTest class
>>>> actually creates a blank image for me... I ran it from Eclipse directly
>>>> though.
>>>>
>>>>  Also, I did observe the same error message that you saw, but the
>>>> message was just logged and execution continued (because the services that
>>>> failed to instantiate weren't necessary for execution.. so the "error"
>>>> nature of the message is a bit of an overstatement in this case).
>>>>
>>>>  It is possible that some classes in SCIFIO erroneously have required
>>>> services that aren't available in headless mode, but nothing stood out to
>>>> me as suspicious.
>>>>
>>>> Could you do two more things for me:
>>>>
>>>> 1) Try running your scripts without using a headless IJ2 to verify this
>>>> works on your end.
>>>>
>>>> 2) Set the Java system property: "scijava.log.level=4" and re-paste the
>>>> error output. This will turn full debugging on.
>>>>
>>>> Thanks,
>>>> Mark
>>>>
>>>>
>>>> On Mon, Dec 16, 2013 at 11:23 AM, Brian Northan <bnorthan at gmail.com>wrote:
>>>>
>>>>> Hi Mark
>>>>>
>>>>> My code is here: https://github.com/bnorthan/projects -- be warned it
>>>>> is in need of some refactoring which I plan to do as ImageJ2 scripting
>>>>> becomes available.
>>>>>
>>>>> A simple example of running my custom commands is in
>>>>> "SimpleCreatePhantoms.sh"  (the other scripts will not work because of
>>>>> references to things on my own machine).
>>>>>
>>>>> The code is for a project I did earlier in the year (
>>>>> http://spie.org/x648.xml?product_id=2002974).
>>>>>
>>>>> The main program is called DeconvolutionTest.java... which has ended
>>>>> up evolving into a command parser.  I never really polished it though
>>>>> because I am going to throw it away and use ImageJ2 scripting as that
>>>>> develops.     A lot of things in the code base fall into that category,
>>>>> things I put together quickly but are meant to be replaced with the
>>>>> "proper" imagej2 component.
>>>>>
>>>>> SimpleCreatePhantoms.sh just calls a command to create a blank
>>>>> phantom, then a second command to place a sphere in it.
>>>>>
>>>>>
>>>>> On Mon, Dec 16, 2013 at 9:09 AM, Mark Hiner <hinerm at gmail.com> wrote:
>>>>>
>>>>>> P.S. please feel free to send your commands via private e-mail, if
>>>>>> you don't want them to be public.
>>>>>>
>>>>>> Similarly, if you can share the dataset you're using that would be
>>>>>> ideal... but no worries if it's proprietary or anything.
>>>>>>
>>>>>>
>>>>>> On Mon, Dec 16, 2013 at 8:07 AM, Mark Hiner <hiner at wisc.edu> wrote:
>>>>>>
>>>>>>> Hi Brian,
>>>>>>>
>>>>>>>  Ahhh.. I'm sorry! I misunderstood. If that's the actual stack trace
>>>>>>> then no, I don't think you are having any problems with the dependency
>>>>>>> tree, and all your pom settings should be fine given that stack trace.
>>>>>>>
>>>>>>>  Sidetrack: the pom-scijava doesn't actually have snapshot versions.
>>>>>>> It's basically just versioning glue - it defines a version properties to
>>>>>>> help ensure consistent versions of the various SciJava libraries (like
>>>>>>> SCIFIO) are consumed. Using 1.111 is fine, as we want to use the latest
>>>>>>> version of everything since SCIFIO-0.7.4/0.7.5 are quite new. Let me know
>>>>>>> if that's not clear...
>>>>>>>
>>>>>>>   Anyway, since we know it worked in 0.7.3, I would like to bisect<https://www.kernel.org/pub/software/scm/git/docs/git-bisect.html>and figure out what happened. However, I currently can't reproduce the
>>>>>>> issue. When I open a float dataset with SCIFIO 0.7.5 in IJ2 I'm able to
>>>>>>> write it as a .tif. So you're probably exposing a bug with other commands
>>>>>>> interacting with SCIFIO.
>>>>>>>
>>>>>>>  Can you share your custom commands? If not, could you let me know
>>>>>>> which commands you're calling?
>>>>>>>
>>>>>>> Thanks,
>>>>>>> - Mark
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> On Fri, Dec 13, 2013 at 1:49 PM, Brian Northan <bnorthan at gmail.com>wrote:
>>>>>>>
>>>>>>>> Hi Mark
>>>>>>>>
>>>>>>>> I am using IJ2 in headless mode with some custom commands I wrote.
>>>>>>>> So it is always possible that I still have old references somewhere.
>>>>>>>> However that stack trace was actually generated with 0.7.4.  When I had
>>>>>>>> noted that 0.7.5-SNAPSHOT threw an exception, I went back to 0.7.4 to make
>>>>>>>> sure that worked but it also had the same exception.  Then I went back to
>>>>>>>> 0.7.3 which worked (other than the floating point problem).
>>>>>>>>
>>>>>>>> Below is the stack trace using 0.7.5-SNAPSHOT.   (btw since I am
>>>>>>>> using IJ2 maybe there is something else wrong in the dependency tree??  One
>>>>>>>> of the IJ2 components??  Should I set the sci-java version to a SNAPSHOT
>>>>>>>> version too??  It is 1.111 right now.
>>>>>>>>
>>>>>>>>      at org.scijava.Context.inject(Context.java:273)
>>>>>>>>     at
>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstance(DefaultPluginService.java:241)
>>>>>>>>     at
>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstances(DefaultPluginService.java:229)
>>>>>>>>     at
>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstancesOfType(DefaultPluginService.java:220)
>>>>>>>>     at
>>>>>>>> org.scijava.plugin.AbstractSingletonService.createInstances(AbstractSingletonService.java:95)
>>>>>>>>     at
>>>>>>>> org.scijava.plugin.AbstractSingletonService.getInstances(AbstractSingletonService.java:73)
>>>>>>>>     at
>>>>>>>> org.scijava.plugin.AbstractSingletonService$1.get(AbstractSingletonService.java:87)
>>>>>>>>     at
>>>>>>>> org.scijava.plugin.AbstractSingletonService$1.get(AbstractSingletonService.java:83)
>>>>>>>>     at
>>>>>>>> org.scijava.object.ObjectIndex.resolvePending(ObjectIndex.java:391)
>>>>>>>>     at org.scijava.object.ObjectIndex.get(ObjectIndex.java:136)
>>>>>>>>     at
>>>>>>>> org.scijava.object.DefaultObjectService.getObjects(DefaultObjectService.java:89)
>>>>>>>>     at
>>>>>>>> io.scif.codec.DefaultCodecService.getCodec(DefaultCodecService.java:65)
>>>>>>>>     at
>>>>>>>> io.scif.formats.tiff.TiffCompression.compress(TiffCompression.java:330)
>>>>>>>>     at io.scif.formats.tiff.TiffSaver.writeImage(TiffSaver.java:391)
>>>>>>>>     at io.scif.formats.tiff.TiffSaver.writeImage(TiffSaver.java:279)
>>>>>>>>      at
>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1250)
>>>>>>>>     at
>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1290)
>>>>>>>>
>>>>>>>>     at io.scif.AbstractWriter.savePlane(AbstractWriter.java:107)
>>>>>>>>     at io.scif.img.ImgSaver.writePlanes(ImgSaver.java:532)
>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:380)
>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:133)
>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:114)
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>> On Fri, Dec 13, 2013 at 1:40 PM, Mark Hiner <hinerm at gmail.com>wrote:
>>>>>>>>
>>>>>>>>>
>>>>>>>>> Hi Brian,
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>>  I referenced the scifio 0.7.5-SNAPSHOT (would that be correct to
>>>>>>>>>> get the absolute latest??)
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>> Yep this should be the latest snapshot.
>>>>>>>>>
>>>>>>>>>  in my POM and ran into an exception when executing my code.
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>> ...
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>>      at
>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1255)
>>>>>>>>>>     at
>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1295)
>>>>>>>>>>     at io.scif.AbstractWriter.savePlane(AbstractWriter.java:107)
>>>>>>>>>>     at io.scif.img.ImgSaver.writePlanes(ImgSaver.java:532)
>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:380)
>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:133)
>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:114)
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>> That stack trace suggests that an older version of the TIFFFormat
>>>>>>>>> is being used. It must be from prior commit 37953<https://github.com/scifio/scifio/commit/379530aab9a9848e59363d87dcbdb79c4842bfc3>(because the TiffSaver.writeImage call is now on line 1250, not 1255). I'm
>>>>>>>>> assuming it's from the 0.7.4 release.
>>>>>>>>>
>>>>>>>>>  Are you just running the code snippet that Curtis posted a while
>>>>>>>>> back (or your own similar snippet)? Or are you using SCIFIO in IJ2, or
>>>>>>>>> another application?
>>>>>>>>>
>>>>>>>>>  Could you run "mvn dependency:tree", or check the "Maven
>>>>>>>>> Dependencies" tab if you're using Eclipse? I'm assuming something must
>>>>>>>>> still have a 0.7.4 SCIFIO reference, which is being pulled in instead of
>>>>>>>>> 0.7.5...
>>>>>>>>>
>>>>>>>>> Sorry for the inconvenience.. let me know what you find!
>>>>>>>>>
>>>>>>>>> Thanks,
>>>>>>>>> Mark
>>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://scif.io/pipermail/scifio/attachments/20140108/4a443835/attachment-0002.html>

From bnorthan at gmail.com  Wed Jan  8 15:01:39 2014
From: bnorthan at gmail.com (Brian Northan)
Date: Wed, 8 Jan 2014 16:01:39 -0500
Subject: [SCIFIO] [ImageJ-devel] [ImgLib2] The img-metadata branch
In-Reply-To: <CA+B=mGqSWQaWjOas55bkefdv_e6GFiS_rZQ7zdb59qv9WaLrgA@mail.gmail.com>
References: <CADN69ykbTxxsr6z6RcEqbb3hRpXgrOCZcw9700_zSFOCPNO_kg@mail.gmail.com>
	<CADN69ymwt_qLY2aYuGPonWEbS5sQxAmYHi==YdAvNe464yEV_w@mail.gmail.com>
	<CAMWa8i1+H5X=O+oe14SE200jkq5hPKZmVYnX=-q0NrKpJp8x2Q@mail.gmail.com>
	<CAMWa8i1t-haNinXjkaoDFntRF-8aW+1Si8QZYQZKePxHzptVtQ@mail.gmail.com>
	<CADN69ymbqEzu+XCRQr051ke1vppEf9frOUe=CEK4GSmop_00eg@mail.gmail.com>
	<CADN69ykKh8Y0eu11yLn08uRS0WqfP165fOPyW5ojXCppfsMFZw@mail.gmail.com>
	<CAMWa8i04n31BRSKN-8guCpFW-HS_HAbcZQvsmroib3WPwMjDVg@mail.gmail.com>
	<CA+B=mGpwd4a+JVyxKAiMtGZeEtMv_oqghc6SKxyw04OJfkd-Uw@mail.gmail.com>
	<CAMWa8i0fmiF51aN7s-kNJzDCuVZygp35-HFjKywrbB0avs-Gjw@mail.gmail.com>
	<CA+B=mGqfQ-jdmXv69addi3SrG=KN7pLDk1VR5pdzEigVGwD4fg@mail.gmail.com>
	<CAMWa8i0sLRvc3N8XgCNTcHs7nV-nxzVbt+Gxb+RbBH8KFRGLXg@mail.gmail.com>
	<CA+B=mGr+z1FiDfOJLJJBX1n2F971YoYVXcNjYcqiTTjds2F5+Q@mail.gmail.com>
	<CA+B=mGproDP1qioEeVZaLNP4JzMwYsyTHA63XaEevHWF7Oezwg@mail.gmail.com>
	<CAMWa8i282xYqkTcQGwDXyAiUYa+RYamDQ3XhDt5bR1TP3-nQnA@mail.gmail.com>
	<CA+B=mGqEsceF2dQ=pv3nJtAJuPQQ5QWbdOympjg7y1rMAbd5YA@mail.gmail.com>
	<CAMWa8i10EimnUz+vRcX372UcGZ2cUnGpkPu630FLfQzFyWn57g@mail.gmail.com>
	<CA+B=mGo0iXWwmwcLhGVBF9AbuCegzQaAxf5ca4ikv974iYhQ2g@mail.gmail.com>
	<CAMWa8i0XoT3GPAc3sU8_4uBkP9sb__bE9Zv99=N_e17wGnBKRg@mail.gmail.com>
	<CA+B=mGqSWQaWjOas55bkefdv_e6GFiS_rZQ7zdb59qv9WaLrgA@mail.gmail.com>
Message-ID: <CAMWa8i1HcF3ZgujbsixH1ygaNggSr17yAn3WqYij7rLrpwpSOQ@mail.gmail.com>

Hi Mark

To clarify I was only changing the spacings to 0 as a hack to get around
the error I was seeing.  The code I was wondering about (around line 975 of
TIFFFormat.java) is only called for spacing > 0.0.

You can repeat the error by running the CreatePhantomCommand we discussed a
couple weeks ago.  (I believe you retrieved the code and got it running but
let me know if you need the instructions again).

The error can be repeated by running the CreatePhantomCommand to create a
blank image and then trying to load the output into ImageJ2.  The stack
trace that I get from ImageJ2 is then as follows...

java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
    at java.util.ArrayList.rangeCheck(ArrayList.java:604)
    at java.util.ArrayList.get(ArrayList.java:382)
    at io.scif.AbstractMetadata.get(AbstractMetadata.java:138)
    at
io.scif.formats.TIFFFormat$BaseTIFFParser.initMetadata(TIFFFormat.java:975)
    at io.scif.formats.TIFFFormat$Parser.initMetadata(TIFFFormat.java:375)
    at
io.scif.formats.TIFFFormat$BaseTIFFParser.typedParse(TIFFFormat.java:645)
    at
io.scif.formats.TIFFFormat$BaseTIFFParser.typedParse(TIFFFormat.java:627)
    at io.scif.AbstractParser.parse(AbstractParser.java:326)
    at io.scif.AbstractParser.parse(AbstractParser.java:105)
    at io.scif.AbstractParser.parse(AbstractParser.java:59)
    at io.scif.AbstractReader.setSource(AbstractReader.java:217)
    at
io.scif.services.DefaultInitializeService.initializeReader(DefaultInitializeService.java:96)
    at io.scif.img.ImgOpener.createReader(ImgOpener.java:365)
    at io.scif.img.ImgOpener.openImg(ImgOpener.java:147)
    at
imagej.data.DefaultDatasetService.open(DefaultDatasetService.java:254)
    at imagej.data.io.DatasetIOPlugin.open(DatasetIOPlugin.java:82)
    at imagej.data.io.DatasetIOPlugin.open(DatasetIOPlugin.java:54)
    at imagej.io.DefaultIOService.open(DefaultIOService.java:87)
    at imagej.plugins.commands.io.OpenFile.run(OpenFile.java:85)
    at imagej.command.CommandModule.run(CommandModule.java:196)
    at imagej.module.ModuleRunner.run(ModuleRunner.java:170)
    at imagej.module.ModuleRunner.call(ModuleRunner.java:131)
    at imagej.module.ModuleRunner.call(ModuleRunner.java:70)
    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
    at java.util.concurrent.FutureTask.run(FutureTask.java:166)
    at
java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:724)


On Wed, Jan 8, 2014 at 3:40 PM, Mark Hiner <hiner at wisc.edu> wrote:

> Hi Brian,
>
>  Sorry to hear that some tests are failing for you now.
>
>  It does sound like there could be a bug here, but I will need more
> information to track it down.
>
>  Which tests are you running exactly, and what's the stack trace you get?
> If you could provide a minimal set of steps to reproduce the error, that
> would be great. Also, where are you setting the pixel size to be 0? (as a
> side note, a value of 1.0 might be safer.. which is what these axes are
> supposed to default to)
>
> Thanks!
> Mark
>
>
> On Wed, Jan 8, 2014 at 9:57 AM, Brian Northan <bnorthan at gmail.com> wrote:
>
>> Hi Mark
>>
>> Hope you had a good holiday.   I noticed some tests of mine failing just
>> after Christmas. I think the failure possibly has something to do with a
>> change in setting pixel size when loading.  Right around line 1000 in this
>> commit.
>>
>>
>> https://github.com/scifio/scifio/commit/232261b978cbaeb42eb28c67cdddb7aca1acb1b6
>>
>> If you remember I have a script SimpleCreatePhantoms.sh which creates a
>> blank image then places a sphere in it.  It now fails in the second step
>> because it cannot reload the blank image.  I also cannot reload the newly
>> created blank image into the latest build of ImageJ.
>>
>> I have a workaround (set pixel size to zero since I am not actually using
>> it right now) so it isn't critical but thought I'd let you know about a
>> potential bug.
>>
>> Brian
>>
>>
>> On Mon, Dec 16, 2013 at 3:32 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>
>>> No problem. That "error" message when failing to create services is
>>> confusing.
>>>
>>> Glad it's working, let us know if you have any more problems!
>>>
>>> - Mark
>>>
>>>
>>> On Mon, Dec 16, 2013 at 2:19 PM, Brian Northan <bnorthan at gmail.com>wrote:
>>>
>>>> Hi Mark
>>>>
>>>> I just checked and It did work after all...  I actually never checked
>>>> to see if the final output was created.  I just saw the exception and
>>>> assumed it had stopped.
>>>>
>>>> So everything appears great now,.  Looks like the floating point
>>>> numbers are being saved correctly.
>>>>
>>>> Thanks for the fix
>>>>
>>>> Brian
>>>>
>>>>
>>>> On Mon, Dec 16, 2013 at 2:46 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>>>
>>>>> Hi Brian,
>>>>>
>>>>>  So, running your CreatePhantomCommand via the DeconvolutionTest class
>>>>> actually creates a blank image for me... I ran it from Eclipse directly
>>>>> though.
>>>>>
>>>>>  Also, I did observe the same error message that you saw, but the
>>>>> message was just logged and execution continued (because the services that
>>>>> failed to instantiate weren't necessary for execution.. so the "error"
>>>>> nature of the message is a bit of an overstatement in this case).
>>>>>
>>>>>  It is possible that some classes in SCIFIO erroneously have required
>>>>> services that aren't available in headless mode, but nothing stood out to
>>>>> me as suspicious.
>>>>>
>>>>> Could you do two more things for me:
>>>>>
>>>>> 1) Try running your scripts without using a headless IJ2 to verify
>>>>> this works on your end.
>>>>>
>>>>> 2) Set the Java system property: "scijava.log.level=4" and re-paste
>>>>> the error output. This will turn full debugging on.
>>>>>
>>>>> Thanks,
>>>>> Mark
>>>>>
>>>>>
>>>>> On Mon, Dec 16, 2013 at 11:23 AM, Brian Northan <bnorthan at gmail.com>wrote:
>>>>>
>>>>>> Hi Mark
>>>>>>
>>>>>> My code is here: https://github.com/bnorthan/projects -- be warned
>>>>>> it is in need of some refactoring which I plan to do as ImageJ2 scripting
>>>>>> becomes available.
>>>>>>
>>>>>> A simple example of running my custom commands is in
>>>>>> "SimpleCreatePhantoms.sh"  (the other scripts will not work because of
>>>>>> references to things on my own machine).
>>>>>>
>>>>>> The code is for a project I did earlier in the year (
>>>>>> http://spie.org/x648.xml?product_id=2002974).
>>>>>>
>>>>>> The main program is called DeconvolutionTest.java... which has ended
>>>>>> up evolving into a command parser.  I never really polished it though
>>>>>> because I am going to throw it away and use ImageJ2 scripting as that
>>>>>> develops.     A lot of things in the code base fall into that category,
>>>>>> things I put together quickly but are meant to be replaced with the
>>>>>> "proper" imagej2 component.
>>>>>>
>>>>>> SimpleCreatePhantoms.sh just calls a command to create a blank
>>>>>> phantom, then a second command to place a sphere in it.
>>>>>>
>>>>>>
>>>>>> On Mon, Dec 16, 2013 at 9:09 AM, Mark Hiner <hinerm at gmail.com> wrote:
>>>>>>
>>>>>>> P.S. please feel free to send your commands via private e-mail, if
>>>>>>> you don't want them to be public.
>>>>>>>
>>>>>>> Similarly, if you can share the dataset you're using that would be
>>>>>>> ideal... but no worries if it's proprietary or anything.
>>>>>>>
>>>>>>>
>>>>>>> On Mon, Dec 16, 2013 at 8:07 AM, Mark Hiner <hiner at wisc.edu> wrote:
>>>>>>>
>>>>>>>> Hi Brian,
>>>>>>>>
>>>>>>>>  Ahhh.. I'm sorry! I misunderstood. If that's the actual stack
>>>>>>>> trace then no, I don't think you are having any problems with the
>>>>>>>> dependency tree, and all your pom settings should be fine given that stack
>>>>>>>> trace.
>>>>>>>>
>>>>>>>>  Sidetrack: the pom-scijava doesn't actually have snapshot
>>>>>>>> versions. It's basically just versioning glue - it defines a version
>>>>>>>> properties to help ensure consistent versions of the various SciJava
>>>>>>>> libraries (like SCIFIO) are consumed. Using 1.111 is fine, as we want to
>>>>>>>> use the latest version of everything since SCIFIO-0.7.4/0.7.5 are quite
>>>>>>>> new. Let me know if that's not clear...
>>>>>>>>
>>>>>>>>   Anyway, since we know it worked in 0.7.3, I would like to bisect<https://www.kernel.org/pub/software/scm/git/docs/git-bisect.html>and figure out what happened. However, I currently can't reproduce the
>>>>>>>> issue. When I open a float dataset with SCIFIO 0.7.5 in IJ2 I'm able to
>>>>>>>> write it as a .tif. So you're probably exposing a bug with other commands
>>>>>>>> interacting with SCIFIO.
>>>>>>>>
>>>>>>>>  Can you share your custom commands? If not, could you let me know
>>>>>>>> which commands you're calling?
>>>>>>>>
>>>>>>>> Thanks,
>>>>>>>> - Mark
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>> On Fri, Dec 13, 2013 at 1:49 PM, Brian Northan <bnorthan at gmail.com>wrote:
>>>>>>>>
>>>>>>>>> Hi Mark
>>>>>>>>>
>>>>>>>>> I am using IJ2 in headless mode with some custom commands I
>>>>>>>>> wrote.  So it is always possible that I still have old references
>>>>>>>>> somewhere.  However that stack trace was actually generated with 0.7.4.
>>>>>>>>> When I had noted that 0.7.5-SNAPSHOT threw an exception, I went back to
>>>>>>>>> 0.7.4 to make sure that worked but it also had the same exception.  Then I
>>>>>>>>> went back to 0.7.3 which worked (other than the floating point problem).
>>>>>>>>>
>>>>>>>>> Below is the stack trace using 0.7.5-SNAPSHOT.   (btw since I am
>>>>>>>>> using IJ2 maybe there is something else wrong in the dependency tree??  One
>>>>>>>>> of the IJ2 components??  Should I set the sci-java version to a SNAPSHOT
>>>>>>>>> version too??  It is 1.111 right now.
>>>>>>>>>
>>>>>>>>>      at org.scijava.Context.inject(Context.java:273)
>>>>>>>>>     at
>>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstance(DefaultPluginService.java:241)
>>>>>>>>>     at
>>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstances(DefaultPluginService.java:229)
>>>>>>>>>     at
>>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstancesOfType(DefaultPluginService.java:220)
>>>>>>>>>     at
>>>>>>>>> org.scijava.plugin.AbstractSingletonService.createInstances(AbstractSingletonService.java:95)
>>>>>>>>>     at
>>>>>>>>> org.scijava.plugin.AbstractSingletonService.getInstances(AbstractSingletonService.java:73)
>>>>>>>>>     at
>>>>>>>>> org.scijava.plugin.AbstractSingletonService$1.get(AbstractSingletonService.java:87)
>>>>>>>>>     at
>>>>>>>>> org.scijava.plugin.AbstractSingletonService$1.get(AbstractSingletonService.java:83)
>>>>>>>>>     at
>>>>>>>>> org.scijava.object.ObjectIndex.resolvePending(ObjectIndex.java:391)
>>>>>>>>>     at org.scijava.object.ObjectIndex.get(ObjectIndex.java:136)
>>>>>>>>>     at
>>>>>>>>> org.scijava.object.DefaultObjectService.getObjects(DefaultObjectService.java:89)
>>>>>>>>>     at
>>>>>>>>> io.scif.codec.DefaultCodecService.getCodec(DefaultCodecService.java:65)
>>>>>>>>>     at
>>>>>>>>> io.scif.formats.tiff.TiffCompression.compress(TiffCompression.java:330)
>>>>>>>>>     at
>>>>>>>>> io.scif.formats.tiff.TiffSaver.writeImage(TiffSaver.java:391)
>>>>>>>>>     at
>>>>>>>>> io.scif.formats.tiff.TiffSaver.writeImage(TiffSaver.java:279)
>>>>>>>>>      at
>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1250)
>>>>>>>>>     at
>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1290)
>>>>>>>>>
>>>>>>>>>     at io.scif.AbstractWriter.savePlane(AbstractWriter.java:107)
>>>>>>>>>     at io.scif.img.ImgSaver.writePlanes(ImgSaver.java:532)
>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:380)
>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:133)
>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:114)
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> On Fri, Dec 13, 2013 at 1:40 PM, Mark Hiner <hinerm at gmail.com>wrote:
>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> Hi Brian,
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>>  I referenced the scifio 0.7.5-SNAPSHOT (would that be correct
>>>>>>>>>>> to get the absolute latest??)
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> Yep this should be the latest snapshot.
>>>>>>>>>>
>>>>>>>>>>  in my POM and ran into an exception when executing my code.
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> ...
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>>      at
>>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1255)
>>>>>>>>>>>     at
>>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1295)
>>>>>>>>>>>     at io.scif.AbstractWriter.savePlane(AbstractWriter.java:107)
>>>>>>>>>>>     at io.scif.img.ImgSaver.writePlanes(ImgSaver.java:532)
>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:380)
>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:133)
>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:114)
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> That stack trace suggests that an older version of the TIFFFormat
>>>>>>>>>> is being used. It must be from prior commit 37953<https://github.com/scifio/scifio/commit/379530aab9a9848e59363d87dcbdb79c4842bfc3>(because the TiffSaver.writeImage call is now on line 1250, not 1255). I'm
>>>>>>>>>> assuming it's from the 0.7.4 release.
>>>>>>>>>>
>>>>>>>>>>  Are you just running the code snippet that Curtis posted a while
>>>>>>>>>> back (or your own similar snippet)? Or are you using SCIFIO in IJ2, or
>>>>>>>>>> another application?
>>>>>>>>>>
>>>>>>>>>>  Could you run "mvn dependency:tree", or check the "Maven
>>>>>>>>>> Dependencies" tab if you're using Eclipse? I'm assuming something must
>>>>>>>>>> still have a 0.7.4 SCIFIO reference, which is being pulled in instead of
>>>>>>>>>> 0.7.5...
>>>>>>>>>>
>>>>>>>>>> Sorry for the inconvenience.. let me know what you find!
>>>>>>>>>>
>>>>>>>>>> Thanks,
>>>>>>>>>> Mark
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://scif.io/pipermail/scifio/attachments/20140108/d73743d3/attachment-0002.html>

From hiner at wisc.edu  Wed Jan  8 15:52:16 2014
From: hiner at wisc.edu (Mark Hiner)
Date: Wed, 8 Jan 2014 15:52:16 -0600
Subject: [SCIFIO] [ImageJ-devel] [ImgLib2] The img-metadata branch
In-Reply-To: <CAMWa8i1HcF3ZgujbsixH1ygaNggSr17yAn3WqYij7rLrpwpSOQ@mail.gmail.com>
References: <CADN69ykbTxxsr6z6RcEqbb3hRpXgrOCZcw9700_zSFOCPNO_kg@mail.gmail.com>
	<CADN69ymwt_qLY2aYuGPonWEbS5sQxAmYHi==YdAvNe464yEV_w@mail.gmail.com>
	<CAMWa8i1+H5X=O+oe14SE200jkq5hPKZmVYnX=-q0NrKpJp8x2Q@mail.gmail.com>
	<CAMWa8i1t-haNinXjkaoDFntRF-8aW+1Si8QZYQZKePxHzptVtQ@mail.gmail.com>
	<CADN69ymbqEzu+XCRQr051ke1vppEf9frOUe=CEK4GSmop_00eg@mail.gmail.com>
	<CADN69ykKh8Y0eu11yLn08uRS0WqfP165fOPyW5ojXCppfsMFZw@mail.gmail.com>
	<CAMWa8i04n31BRSKN-8guCpFW-HS_HAbcZQvsmroib3WPwMjDVg@mail.gmail.com>
	<CA+B=mGpwd4a+JVyxKAiMtGZeEtMv_oqghc6SKxyw04OJfkd-Uw@mail.gmail.com>
	<CAMWa8i0fmiF51aN7s-kNJzDCuVZygp35-HFjKywrbB0avs-Gjw@mail.gmail.com>
	<CA+B=mGqfQ-jdmXv69addi3SrG=KN7pLDk1VR5pdzEigVGwD4fg@mail.gmail.com>
	<CAMWa8i0sLRvc3N8XgCNTcHs7nV-nxzVbt+Gxb+RbBH8KFRGLXg@mail.gmail.com>
	<CA+B=mGr+z1FiDfOJLJJBX1n2F971YoYVXcNjYcqiTTjds2F5+Q@mail.gmail.com>
	<CA+B=mGproDP1qioEeVZaLNP4JzMwYsyTHA63XaEevHWF7Oezwg@mail.gmail.com>
	<CAMWa8i282xYqkTcQGwDXyAiUYa+RYamDQ3XhDt5bR1TP3-nQnA@mail.gmail.com>
	<CA+B=mGqEsceF2dQ=pv3nJtAJuPQQ5QWbdOympjg7y1rMAbd5YA@mail.gmail.com>
	<CAMWa8i10EimnUz+vRcX372UcGZ2cUnGpkPu630FLfQzFyWn57g@mail.gmail.com>
	<CA+B=mGo0iXWwmwcLhGVBF9AbuCegzQaAxf5ca4ikv974iYhQ2g@mail.gmail.com>
	<CAMWa8i0XoT3GPAc3sU8_4uBkP9sb__bE9Zv99=N_e17wGnBKRg@mail.gmail.com>
	<CA+B=mGqSWQaWjOas55bkefdv_e6GFiS_rZQ7zdb59qv9WaLrgA@mail.gmail.com>
	<CAMWa8i1HcF3ZgujbsixH1ygaNggSr17yAn3WqYij7rLrpwpSOQ@mail.gmail.com>
Message-ID: <CA+B=mGrvxVDsK6J_j-Nv=p=zUtF2Dfqsvmb88eam6s65+-w=HA@mail.gmail.com>

Ahh.. looks like this was just a general bug in opening TIFF data. Sorry
that wasn't clear to me.

Anyway, it's fixed now locally. I'll release SCIFIO 0.8.2 tonight or
tomorrow which will include the fix (you'll just have to update your
pom-scijava to the latest version at that point).

Side note: you may want to define your CreatePhantomCommand (and other
commands?) as discoverable IJ2 commands..

For example:

@Plugin(type=Command.class, menu = {
    @Menu(label = MenuConstants.PLUGINS_LABEL,
            weight = MenuConstants.PLUGINS_WEIGHT,
            mnemonic = MenuConstants.PLUGINS_MNEMONIC),
        @Menu(label = "Truenorth", mnemonic = 't'), @Menu(label = "Create
Phantom", weight = 1) })
public class CreatePhantomCommand  implements Command
{
...
}

Would make the CreatePhantomCommand discoverable by searching commands, or
via the Plugin menu. Made testing in IJ2 a little easier for me..

Anyway, thanks again!
- Mark


On Wed, Jan 8, 2014 at 3:01 PM, Brian Northan <bnorthan at gmail.com> wrote:

> Hi Mark
>
> To clarify I was only changing the spacings to 0 as a hack to get around
> the error I was seeing.  The code I was wondering about (around line 975 of
> TIFFFormat.java) is only called for spacing > 0.0.
>
> You can repeat the error by running the CreatePhantomCommand we discussed
> a couple weeks ago.  (I believe you retrieved the code and got it running
> but let me know if you need the instructions again).
>
> The error can be repeated by running the CreatePhantomCommand to create a
> blank image and then trying to load the output into ImageJ2.  The stack
> trace that I get from ImageJ2 is then as follows...
>
> java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
>     at java.util.ArrayList.rangeCheck(ArrayList.java:604)
>     at java.util.ArrayList.get(ArrayList.java:382)
>     at io.scif.AbstractMetadata.get(AbstractMetadata.java:138)
>     at
> io.scif.formats.TIFFFormat$BaseTIFFParser.initMetadata(TIFFFormat.java:975)
>     at io.scif.formats.TIFFFormat$Parser.initMetadata(TIFFFormat.java:375)
>     at
> io.scif.formats.TIFFFormat$BaseTIFFParser.typedParse(TIFFFormat.java:645)
>     at
> io.scif.formats.TIFFFormat$BaseTIFFParser.typedParse(TIFFFormat.java:627)
>     at io.scif.AbstractParser.parse(AbstractParser.java:326)
>     at io.scif.AbstractParser.parse(AbstractParser.java:105)
>     at io.scif.AbstractParser.parse(AbstractParser.java:59)
>     at io.scif.AbstractReader.setSource(AbstractReader.java:217)
>     at
> io.scif.services.DefaultInitializeService.initializeReader(DefaultInitializeService.java:96)
>     at io.scif.img.ImgOpener.createReader(ImgOpener.java:365)
>     at io.scif.img.ImgOpener.openImg(ImgOpener.java:147)
>     at
> imagej.data.DefaultDatasetService.open(DefaultDatasetService.java:254)
>     at imagej.data.io.DatasetIOPlugin.open(DatasetIOPlugin.java:82)
>     at imagej.data.io.DatasetIOPlugin.open(DatasetIOPlugin.java:54)
>     at imagej.io.DefaultIOService.open(DefaultIOService.java:87)
>     at imagej.plugins.commands.io.OpenFile.run(OpenFile.java:85)
>     at imagej.command.CommandModule.run(CommandModule.java:196)
>     at imagej.module.ModuleRunner.run(ModuleRunner.java:170)
>     at imagej.module.ModuleRunner.call(ModuleRunner.java:131)
>     at imagej.module.ModuleRunner.call(ModuleRunner.java:70)
>     at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
>     at java.util.concurrent.FutureTask.run(FutureTask.java:166)
>     at
> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>     at
> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>     at java.lang.Thread.run(Thread.java:724)
>
>
> On Wed, Jan 8, 2014 at 3:40 PM, Mark Hiner <hiner at wisc.edu> wrote:
>
>> Hi Brian,
>>
>>  Sorry to hear that some tests are failing for you now.
>>
>>  It does sound like there could be a bug here, but I will need more
>> information to track it down.
>>
>>  Which tests are you running exactly, and what's the stack trace you get?
>> If you could provide a minimal set of steps to reproduce the error, that
>> would be great. Also, where are you setting the pixel size to be 0? (as a
>> side note, a value of 1.0 might be safer.. which is what these axes are
>> supposed to default to)
>>
>> Thanks!
>> Mark
>>
>>
>> On Wed, Jan 8, 2014 at 9:57 AM, Brian Northan <bnorthan at gmail.com> wrote:
>>
>>> Hi Mark
>>>
>>> Hope you had a good holiday.   I noticed some tests of mine failing just
>>> after Christmas. I think the failure possibly has something to do with a
>>> change in setting pixel size when loading.  Right around line 1000 in this
>>> commit.
>>>
>>>
>>> https://github.com/scifio/scifio/commit/232261b978cbaeb42eb28c67cdddb7aca1acb1b6
>>>
>>> If you remember I have a script SimpleCreatePhantoms.sh which creates a
>>> blank image then places a sphere in it.  It now fails in the second step
>>> because it cannot reload the blank image.  I also cannot reload the newly
>>> created blank image into the latest build of ImageJ.
>>>
>>> I have a workaround (set pixel size to zero since I am not actually
>>> using it right now) so it isn't critical but thought I'd let you know about
>>> a potential bug.
>>>
>>> Brian
>>>
>>>
>>> On Mon, Dec 16, 2013 at 3:32 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>>
>>>> No problem. That "error" message when failing to create services is
>>>> confusing.
>>>>
>>>> Glad it's working, let us know if you have any more problems!
>>>>
>>>> - Mark
>>>>
>>>>
>>>> On Mon, Dec 16, 2013 at 2:19 PM, Brian Northan <bnorthan at gmail.com>wrote:
>>>>
>>>>> Hi Mark
>>>>>
>>>>> I just checked and It did work after all...  I actually never checked
>>>>> to see if the final output was created.  I just saw the exception and
>>>>> assumed it had stopped.
>>>>>
>>>>> So everything appears great now,.  Looks like the floating point
>>>>> numbers are being saved correctly.
>>>>>
>>>>> Thanks for the fix
>>>>>
>>>>> Brian
>>>>>
>>>>>
>>>>> On Mon, Dec 16, 2013 at 2:46 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>>>>
>>>>>> Hi Brian,
>>>>>>
>>>>>>  So, running your CreatePhantomCommand via the DeconvolutionTest
>>>>>> class actually creates a blank image for me... I ran it from Eclipse
>>>>>> directly though.
>>>>>>
>>>>>>  Also, I did observe the same error message that you saw, but the
>>>>>> message was just logged and execution continued (because the services that
>>>>>> failed to instantiate weren't necessary for execution.. so the "error"
>>>>>> nature of the message is a bit of an overstatement in this case).
>>>>>>
>>>>>>  It is possible that some classes in SCIFIO erroneously have required
>>>>>> services that aren't available in headless mode, but nothing stood out to
>>>>>> me as suspicious.
>>>>>>
>>>>>> Could you do two more things for me:
>>>>>>
>>>>>> 1) Try running your scripts without using a headless IJ2 to verify
>>>>>> this works on your end.
>>>>>>
>>>>>> 2) Set the Java system property: "scijava.log.level=4" and re-paste
>>>>>> the error output. This will turn full debugging on.
>>>>>>
>>>>>> Thanks,
>>>>>> Mark
>>>>>>
>>>>>>
>>>>>> On Mon, Dec 16, 2013 at 11:23 AM, Brian Northan <bnorthan at gmail.com>wrote:
>>>>>>
>>>>>>> Hi Mark
>>>>>>>
>>>>>>> My code is here: https://github.com/bnorthan/projects -- be warned
>>>>>>> it is in need of some refactoring which I plan to do as ImageJ2 scripting
>>>>>>> becomes available.
>>>>>>>
>>>>>>> A simple example of running my custom commands is in
>>>>>>> "SimpleCreatePhantoms.sh"  (the other scripts will not work because of
>>>>>>> references to things on my own machine).
>>>>>>>
>>>>>>> The code is for a project I did earlier in the year (
>>>>>>> http://spie.org/x648.xml?product_id=2002974).
>>>>>>>
>>>>>>> The main program is called DeconvolutionTest.java... which has ended
>>>>>>> up evolving into a command parser.  I never really polished it though
>>>>>>> because I am going to throw it away and use ImageJ2 scripting as that
>>>>>>> develops.     A lot of things in the code base fall into that category,
>>>>>>> things I put together quickly but are meant to be replaced with the
>>>>>>> "proper" imagej2 component.
>>>>>>>
>>>>>>> SimpleCreatePhantoms.sh just calls a command to create a blank
>>>>>>> phantom, then a second command to place a sphere in it.
>>>>>>>
>>>>>>>
>>>>>>> On Mon, Dec 16, 2013 at 9:09 AM, Mark Hiner <hinerm at gmail.com>wrote:
>>>>>>>
>>>>>>>> P.S. please feel free to send your commands via private e-mail, if
>>>>>>>> you don't want them to be public.
>>>>>>>>
>>>>>>>> Similarly, if you can share the dataset you're using that would be
>>>>>>>> ideal... but no worries if it's proprietary or anything.
>>>>>>>>
>>>>>>>>
>>>>>>>> On Mon, Dec 16, 2013 at 8:07 AM, Mark Hiner <hiner at wisc.edu> wrote:
>>>>>>>>
>>>>>>>>> Hi Brian,
>>>>>>>>>
>>>>>>>>>  Ahhh.. I'm sorry! I misunderstood. If that's the actual stack
>>>>>>>>> trace then no, I don't think you are having any problems with the
>>>>>>>>> dependency tree, and all your pom settings should be fine given that stack
>>>>>>>>> trace.
>>>>>>>>>
>>>>>>>>>  Sidetrack: the pom-scijava doesn't actually have snapshot
>>>>>>>>> versions. It's basically just versioning glue - it defines a version
>>>>>>>>> properties to help ensure consistent versions of the various SciJava
>>>>>>>>> libraries (like SCIFIO) are consumed. Using 1.111 is fine, as we want to
>>>>>>>>> use the latest version of everything since SCIFIO-0.7.4/0.7.5 are quite
>>>>>>>>> new. Let me know if that's not clear...
>>>>>>>>>
>>>>>>>>>   Anyway, since we know it worked in 0.7.3, I would like to bisect<https://www.kernel.org/pub/software/scm/git/docs/git-bisect.html>and figure out what happened. However, I currently can't reproduce the
>>>>>>>>> issue. When I open a float dataset with SCIFIO 0.7.5 in IJ2 I'm able to
>>>>>>>>> write it as a .tif. So you're probably exposing a bug with other commands
>>>>>>>>> interacting with SCIFIO.
>>>>>>>>>
>>>>>>>>>  Can you share your custom commands? If not, could you let me know
>>>>>>>>> which commands you're calling?
>>>>>>>>>
>>>>>>>>> Thanks,
>>>>>>>>> - Mark
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> On Fri, Dec 13, 2013 at 1:49 PM, Brian Northan <bnorthan at gmail.com
>>>>>>>>> > wrote:
>>>>>>>>>
>>>>>>>>>> Hi Mark
>>>>>>>>>>
>>>>>>>>>> I am using IJ2 in headless mode with some custom commands I
>>>>>>>>>> wrote.  So it is always possible that I still have old references
>>>>>>>>>> somewhere.  However that stack trace was actually generated with 0.7.4.
>>>>>>>>>> When I had noted that 0.7.5-SNAPSHOT threw an exception, I went back to
>>>>>>>>>> 0.7.4 to make sure that worked but it also had the same exception.  Then I
>>>>>>>>>> went back to 0.7.3 which worked (other than the floating point problem).
>>>>>>>>>>
>>>>>>>>>> Below is the stack trace using 0.7.5-SNAPSHOT.   (btw since I am
>>>>>>>>>> using IJ2 maybe there is something else wrong in the dependency tree??  One
>>>>>>>>>> of the IJ2 components??  Should I set the sci-java version to a SNAPSHOT
>>>>>>>>>> version too??  It is 1.111 right now.
>>>>>>>>>>
>>>>>>>>>>      at org.scijava.Context.inject(Context.java:273)
>>>>>>>>>>     at
>>>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstance(DefaultPluginService.java:241)
>>>>>>>>>>     at
>>>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstances(DefaultPluginService.java:229)
>>>>>>>>>>     at
>>>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstancesOfType(DefaultPluginService.java:220)
>>>>>>>>>>     at
>>>>>>>>>> org.scijava.plugin.AbstractSingletonService.createInstances(AbstractSingletonService.java:95)
>>>>>>>>>>     at
>>>>>>>>>> org.scijava.plugin.AbstractSingletonService.getInstances(AbstractSingletonService.java:73)
>>>>>>>>>>     at
>>>>>>>>>> org.scijava.plugin.AbstractSingletonService$1.get(AbstractSingletonService.java:87)
>>>>>>>>>>     at
>>>>>>>>>> org.scijava.plugin.AbstractSingletonService$1.get(AbstractSingletonService.java:83)
>>>>>>>>>>     at
>>>>>>>>>> org.scijava.object.ObjectIndex.resolvePending(ObjectIndex.java:391)
>>>>>>>>>>     at org.scijava.object.ObjectIndex.get(ObjectIndex.java:136)
>>>>>>>>>>     at
>>>>>>>>>> org.scijava.object.DefaultObjectService.getObjects(DefaultObjectService.java:89)
>>>>>>>>>>     at
>>>>>>>>>> io.scif.codec.DefaultCodecService.getCodec(DefaultCodecService.java:65)
>>>>>>>>>>     at
>>>>>>>>>> io.scif.formats.tiff.TiffCompression.compress(TiffCompression.java:330)
>>>>>>>>>>     at
>>>>>>>>>> io.scif.formats.tiff.TiffSaver.writeImage(TiffSaver.java:391)
>>>>>>>>>>     at
>>>>>>>>>> io.scif.formats.tiff.TiffSaver.writeImage(TiffSaver.java:279)
>>>>>>>>>>      at
>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1250)
>>>>>>>>>>     at
>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1290)
>>>>>>>>>>
>>>>>>>>>>     at io.scif.AbstractWriter.savePlane(AbstractWriter.java:107)
>>>>>>>>>>     at io.scif.img.ImgSaver.writePlanes(ImgSaver.java:532)
>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:380)
>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:133)
>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:114)
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> On Fri, Dec 13, 2013 at 1:40 PM, Mark Hiner <hinerm at gmail.com>wrote:
>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> Hi Brian,
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>>  I referenced the scifio 0.7.5-SNAPSHOT (would that be correct
>>>>>>>>>>>> to get the absolute latest??)
>>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> Yep this should be the latest snapshot.
>>>>>>>>>>>
>>>>>>>>>>>  in my POM and ran into an exception when executing my code.
>>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> ...
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>>      at
>>>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1255)
>>>>>>>>>>>>     at
>>>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1295)
>>>>>>>>>>>>     at io.scif.AbstractWriter.savePlane(AbstractWriter.java:107)
>>>>>>>>>>>>     at io.scif.img.ImgSaver.writePlanes(ImgSaver.java:532)
>>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:380)
>>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:133)
>>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:114)
>>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> That stack trace suggests that an older version of the
>>>>>>>>>>> TIFFFormat is being used. It must be from prior commit 37953<https://github.com/scifio/scifio/commit/379530aab9a9848e59363d87dcbdb79c4842bfc3>(because the TiffSaver.writeImage call is now on line 1250, not 1255). I'm
>>>>>>>>>>> assuming it's from the 0.7.4 release.
>>>>>>>>>>>
>>>>>>>>>>>  Are you just running the code snippet that Curtis posted a
>>>>>>>>>>> while back (or your own similar snippet)? Or are you using SCIFIO in IJ2,
>>>>>>>>>>> or another application?
>>>>>>>>>>>
>>>>>>>>>>>  Could you run "mvn dependency:tree", or check the "Maven
>>>>>>>>>>> Dependencies" tab if you're using Eclipse? I'm assuming something must
>>>>>>>>>>> still have a 0.7.4 SCIFIO reference, which is being pulled in instead of
>>>>>>>>>>> 0.7.5...
>>>>>>>>>>>
>>>>>>>>>>> Sorry for the inconvenience.. let me know what you find!
>>>>>>>>>>>
>>>>>>>>>>> Thanks,
>>>>>>>>>>> Mark
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://scif.io/pipermail/scifio/attachments/20140108/facd20cc/attachment-0002.html>

From bnorthan at gmail.com  Wed Jan  8 16:39:33 2014
From: bnorthan at gmail.com (Brian Northan)
Date: Wed, 8 Jan 2014 17:39:33 -0500
Subject: [SCIFIO] [ImageJ-devel] [ImgLib2] The img-metadata branch
In-Reply-To: <CA+B=mGrvxVDsK6J_j-Nv=p=zUtF2Dfqsvmb88eam6s65+-w=HA@mail.gmail.com>
References: <CADN69ykbTxxsr6z6RcEqbb3hRpXgrOCZcw9700_zSFOCPNO_kg@mail.gmail.com>
	<CADN69ymwt_qLY2aYuGPonWEbS5sQxAmYHi==YdAvNe464yEV_w@mail.gmail.com>
	<CAMWa8i1+H5X=O+oe14SE200jkq5hPKZmVYnX=-q0NrKpJp8x2Q@mail.gmail.com>
	<CAMWa8i1t-haNinXjkaoDFntRF-8aW+1Si8QZYQZKePxHzptVtQ@mail.gmail.com>
	<CADN69ymbqEzu+XCRQr051ke1vppEf9frOUe=CEK4GSmop_00eg@mail.gmail.com>
	<CADN69ykKh8Y0eu11yLn08uRS0WqfP165fOPyW5ojXCppfsMFZw@mail.gmail.com>
	<CAMWa8i04n31BRSKN-8guCpFW-HS_HAbcZQvsmroib3WPwMjDVg@mail.gmail.com>
	<CA+B=mGpwd4a+JVyxKAiMtGZeEtMv_oqghc6SKxyw04OJfkd-Uw@mail.gmail.com>
	<CAMWa8i0fmiF51aN7s-kNJzDCuVZygp35-HFjKywrbB0avs-Gjw@mail.gmail.com>
	<CA+B=mGqfQ-jdmXv69addi3SrG=KN7pLDk1VR5pdzEigVGwD4fg@mail.gmail.com>
	<CAMWa8i0sLRvc3N8XgCNTcHs7nV-nxzVbt+Gxb+RbBH8KFRGLXg@mail.gmail.com>
	<CA+B=mGr+z1FiDfOJLJJBX1n2F971YoYVXcNjYcqiTTjds2F5+Q@mail.gmail.com>
	<CA+B=mGproDP1qioEeVZaLNP4JzMwYsyTHA63XaEevHWF7Oezwg@mail.gmail.com>
	<CAMWa8i282xYqkTcQGwDXyAiUYa+RYamDQ3XhDt5bR1TP3-nQnA@mail.gmail.com>
	<CA+B=mGqEsceF2dQ=pv3nJtAJuPQQ5QWbdOympjg7y1rMAbd5YA@mail.gmail.com>
	<CAMWa8i10EimnUz+vRcX372UcGZ2cUnGpkPu630FLfQzFyWn57g@mail.gmail.com>
	<CA+B=mGo0iXWwmwcLhGVBF9AbuCegzQaAxf5ca4ikv974iYhQ2g@mail.gmail.com>
	<CAMWa8i0XoT3GPAc3sU8_4uBkP9sb__bE9Zv99=N_e17wGnBKRg@mail.gmail.com>
	<CA+B=mGqSWQaWjOas55bkefdv_e6GFiS_rZQ7zdb59qv9WaLrgA@mail.gmail.com>
	<CAMWa8i1HcF3ZgujbsixH1ygaNggSr17yAn3WqYij7rLrpwpSOQ@mail.gmail.com>
	<CA+B=mGrvxVDsK6J_j-Nv=p=zUtF2Dfqsvmb88eam6s65+-w=HA@mail.gmail.com>
Message-ID: <CAMWa8i39Jy8sirZ8-zG9JM87XCKEgyvVpsgoMCHVn2gEkhZeQA@mail.gmail.com>

Hi Mark

Thanks for the fix.  And thanks for the example code for making the command
discoverable.

Brian


On Wed, Jan 8, 2014 at 4:52 PM, Mark Hiner <hiner at wisc.edu> wrote:

> Ahh.. looks like this was just a general bug in opening TIFF data. Sorry
> that wasn't clear to me.
>
> Anyway, it's fixed now locally. I'll release SCIFIO 0.8.2 tonight or
> tomorrow which will include the fix (you'll just have to update your
> pom-scijava to the latest version at that point).
>
> Side note: you may want to define your CreatePhantomCommand (and other
> commands?) as discoverable IJ2 commands..
>
> For example:
>
> @Plugin(type=Command.class, menu = {
>     @Menu(label = MenuConstants.PLUGINS_LABEL,
>             weight = MenuConstants.PLUGINS_WEIGHT,
>             mnemonic = MenuConstants.PLUGINS_MNEMONIC),
>         @Menu(label = "Truenorth", mnemonic = 't'), @Menu(label = "Create
> Phantom", weight = 1) })
> public class CreatePhantomCommand  implements Command
> {
> ...
> }
>
> Would make the CreatePhantomCommand discoverable by searching commands, or
> via the Plugin menu. Made testing in IJ2 a little easier for me..
>
> Anyway, thanks again!
> - Mark
>
>
> On Wed, Jan 8, 2014 at 3:01 PM, Brian Northan <bnorthan at gmail.com> wrote:
>
>> Hi Mark
>>
>> To clarify I was only changing the spacings to 0 as a hack to get around
>> the error I was seeing.  The code I was wondering about (around line 975 of
>> TIFFFormat.java) is only called for spacing > 0.0.
>>
>> You can repeat the error by running the CreatePhantomCommand we discussed
>> a couple weeks ago.  (I believe you retrieved the code and got it running
>> but let me know if you need the instructions again).
>>
>> The error can be repeated by running the CreatePhantomCommand to create a
>> blank image and then trying to load the output into ImageJ2.  The stack
>> trace that I get from ImageJ2 is then as follows...
>>
>> java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
>>     at java.util.ArrayList.rangeCheck(ArrayList.java:604)
>>     at java.util.ArrayList.get(ArrayList.java:382)
>>     at io.scif.AbstractMetadata.get(AbstractMetadata.java:138)
>>     at
>> io.scif.formats.TIFFFormat$BaseTIFFParser.initMetadata(TIFFFormat.java:975)
>>     at io.scif.formats.TIFFFormat$Parser.initMetadata(TIFFFormat.java:375)
>>     at
>> io.scif.formats.TIFFFormat$BaseTIFFParser.typedParse(TIFFFormat.java:645)
>>     at
>> io.scif.formats.TIFFFormat$BaseTIFFParser.typedParse(TIFFFormat.java:627)
>>     at io.scif.AbstractParser.parse(AbstractParser.java:326)
>>     at io.scif.AbstractParser.parse(AbstractParser.java:105)
>>     at io.scif.AbstractParser.parse(AbstractParser.java:59)
>>     at io.scif.AbstractReader.setSource(AbstractReader.java:217)
>>     at
>> io.scif.services.DefaultInitializeService.initializeReader(DefaultInitializeService.java:96)
>>     at io.scif.img.ImgOpener.createReader(ImgOpener.java:365)
>>     at io.scif.img.ImgOpener.openImg(ImgOpener.java:147)
>>     at
>> imagej.data.DefaultDatasetService.open(DefaultDatasetService.java:254)
>>     at imagej.data.io.DatasetIOPlugin.open(DatasetIOPlugin.java:82)
>>     at imagej.data.io.DatasetIOPlugin.open(DatasetIOPlugin.java:54)
>>     at imagej.io.DefaultIOService.open(DefaultIOService.java:87)
>>     at imagej.plugins.commands.io.OpenFile.run(OpenFile.java:85)
>>     at imagej.command.CommandModule.run(CommandModule.java:196)
>>     at imagej.module.ModuleRunner.run(ModuleRunner.java:170)
>>     at imagej.module.ModuleRunner.call(ModuleRunner.java:131)
>>     at imagej.module.ModuleRunner.call(ModuleRunner.java:70)
>>     at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
>>     at java.util.concurrent.FutureTask.run(FutureTask.java:166)
>>     at
>> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>>     at
>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>>     at java.lang.Thread.run(Thread.java:724)
>>
>>
>> On Wed, Jan 8, 2014 at 3:40 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>
>>> Hi Brian,
>>>
>>>  Sorry to hear that some tests are failing for you now.
>>>
>>>  It does sound like there could be a bug here, but I will need more
>>> information to track it down.
>>>
>>>  Which tests are you running exactly, and what's the stack trace you
>>> get? If you could provide a minimal set of steps to reproduce the error,
>>> that would be great. Also, where are you setting the pixel size to be 0?
>>> (as a side note, a value of 1.0 might be safer.. which is what these axes
>>> are supposed to default to)
>>>
>>> Thanks!
>>> Mark
>>>
>>>
>>> On Wed, Jan 8, 2014 at 9:57 AM, Brian Northan <bnorthan at gmail.com>wrote:
>>>
>>>> Hi Mark
>>>>
>>>> Hope you had a good holiday.   I noticed some tests of mine failing
>>>> just after Christmas. I think the failure possibly has something to do with
>>>> a change in setting pixel size when loading.  Right around line 1000 in
>>>> this commit.
>>>>
>>>>
>>>> https://github.com/scifio/scifio/commit/232261b978cbaeb42eb28c67cdddb7aca1acb1b6
>>>>
>>>> If you remember I have a script SimpleCreatePhantoms.sh which creates a
>>>> blank image then places a sphere in it.  It now fails in the second step
>>>> because it cannot reload the blank image.  I also cannot reload the newly
>>>> created blank image into the latest build of ImageJ.
>>>>
>>>> I have a workaround (set pixel size to zero since I am not actually
>>>> using it right now) so it isn't critical but thought I'd let you know about
>>>> a potential bug.
>>>>
>>>> Brian
>>>>
>>>>
>>>> On Mon, Dec 16, 2013 at 3:32 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>>>
>>>>> No problem. That "error" message when failing to create services is
>>>>> confusing.
>>>>>
>>>>> Glad it's working, let us know if you have any more problems!
>>>>>
>>>>> - Mark
>>>>>
>>>>>
>>>>> On Mon, Dec 16, 2013 at 2:19 PM, Brian Northan <bnorthan at gmail.com>wrote:
>>>>>
>>>>>> Hi Mark
>>>>>>
>>>>>> I just checked and It did work after all...  I actually never checked
>>>>>> to see if the final output was created.  I just saw the exception and
>>>>>> assumed it had stopped.
>>>>>>
>>>>>> So everything appears great now,.  Looks like the floating point
>>>>>> numbers are being saved correctly.
>>>>>>
>>>>>> Thanks for the fix
>>>>>>
>>>>>> Brian
>>>>>>
>>>>>>
>>>>>> On Mon, Dec 16, 2013 at 2:46 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>>>>>
>>>>>>> Hi Brian,
>>>>>>>
>>>>>>>  So, running your CreatePhantomCommand via the DeconvolutionTest
>>>>>>> class actually creates a blank image for me... I ran it from Eclipse
>>>>>>> directly though.
>>>>>>>
>>>>>>>  Also, I did observe the same error message that you saw, but the
>>>>>>> message was just logged and execution continued (because the services that
>>>>>>> failed to instantiate weren't necessary for execution.. so the "error"
>>>>>>> nature of the message is a bit of an overstatement in this case).
>>>>>>>
>>>>>>>  It is possible that some classes in SCIFIO erroneously have
>>>>>>> required services that aren't available in headless mode, but nothing stood
>>>>>>> out to me as suspicious.
>>>>>>>
>>>>>>> Could you do two more things for me:
>>>>>>>
>>>>>>> 1) Try running your scripts without using a headless IJ2 to verify
>>>>>>> this works on your end.
>>>>>>>
>>>>>>> 2) Set the Java system property: "scijava.log.level=4" and re-paste
>>>>>>> the error output. This will turn full debugging on.
>>>>>>>
>>>>>>> Thanks,
>>>>>>> Mark
>>>>>>>
>>>>>>>
>>>>>>> On Mon, Dec 16, 2013 at 11:23 AM, Brian Northan <bnorthan at gmail.com>wrote:
>>>>>>>
>>>>>>>> Hi Mark
>>>>>>>>
>>>>>>>> My code is here: https://github.com/bnorthan/projects -- be warned
>>>>>>>> it is in need of some refactoring which I plan to do as ImageJ2 scripting
>>>>>>>> becomes available.
>>>>>>>>
>>>>>>>> A simple example of running my custom commands is in
>>>>>>>> "SimpleCreatePhantoms.sh"  (the other scripts will not work because of
>>>>>>>> references to things on my own machine).
>>>>>>>>
>>>>>>>> The code is for a project I did earlier in the year (
>>>>>>>> http://spie.org/x648.xml?product_id=2002974).
>>>>>>>>
>>>>>>>> The main program is called DeconvolutionTest.java... which has
>>>>>>>> ended up evolving into a command parser.  I never really polished it though
>>>>>>>> because I am going to throw it away and use ImageJ2 scripting as that
>>>>>>>> develops.     A lot of things in the code base fall into that category,
>>>>>>>> things I put together quickly but are meant to be replaced with the
>>>>>>>> "proper" imagej2 component.
>>>>>>>>
>>>>>>>> SimpleCreatePhantoms.sh just calls a command to create a blank
>>>>>>>> phantom, then a second command to place a sphere in it.
>>>>>>>>
>>>>>>>>
>>>>>>>> On Mon, Dec 16, 2013 at 9:09 AM, Mark Hiner <hinerm at gmail.com>wrote:
>>>>>>>>
>>>>>>>>> P.S. please feel free to send your commands via private e-mail, if
>>>>>>>>> you don't want them to be public.
>>>>>>>>>
>>>>>>>>> Similarly, if you can share the dataset you're using that would be
>>>>>>>>> ideal... but no worries if it's proprietary or anything.
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> On Mon, Dec 16, 2013 at 8:07 AM, Mark Hiner <hiner at wisc.edu>wrote:
>>>>>>>>>
>>>>>>>>>> Hi Brian,
>>>>>>>>>>
>>>>>>>>>>  Ahhh.. I'm sorry! I misunderstood. If that's the actual stack
>>>>>>>>>> trace then no, I don't think you are having any problems with the
>>>>>>>>>> dependency tree, and all your pom settings should be fine given that stack
>>>>>>>>>> trace.
>>>>>>>>>>
>>>>>>>>>>  Sidetrack: the pom-scijava doesn't actually have snapshot
>>>>>>>>>> versions. It's basically just versioning glue - it defines a version
>>>>>>>>>> properties to help ensure consistent versions of the various SciJava
>>>>>>>>>> libraries (like SCIFIO) are consumed. Using 1.111 is fine, as we want to
>>>>>>>>>> use the latest version of everything since SCIFIO-0.7.4/0.7.5 are quite
>>>>>>>>>> new. Let me know if that's not clear...
>>>>>>>>>>
>>>>>>>>>>   Anyway, since we know it worked in 0.7.3, I would like to
>>>>>>>>>> bisect<https://www.kernel.org/pub/software/scm/git/docs/git-bisect.html>and figure out what happened. However, I currently can't reproduce the
>>>>>>>>>> issue. When I open a float dataset with SCIFIO 0.7.5 in IJ2 I'm able to
>>>>>>>>>> write it as a .tif. So you're probably exposing a bug with other commands
>>>>>>>>>> interacting with SCIFIO.
>>>>>>>>>>
>>>>>>>>>>  Can you share your custom commands? If not, could you let me
>>>>>>>>>> know which commands you're calling?
>>>>>>>>>>
>>>>>>>>>> Thanks,
>>>>>>>>>> - Mark
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> On Fri, Dec 13, 2013 at 1:49 PM, Brian Northan <
>>>>>>>>>> bnorthan at gmail.com> wrote:
>>>>>>>>>>
>>>>>>>>>>> Hi Mark
>>>>>>>>>>>
>>>>>>>>>>> I am using IJ2 in headless mode with some custom commands I
>>>>>>>>>>> wrote.  So it is always possible that I still have old references
>>>>>>>>>>> somewhere.  However that stack trace was actually generated with 0.7.4.
>>>>>>>>>>> When I had noted that 0.7.5-SNAPSHOT threw an exception, I went back to
>>>>>>>>>>> 0.7.4 to make sure that worked but it also had the same exception.  Then I
>>>>>>>>>>> went back to 0.7.3 which worked (other than the floating point problem).
>>>>>>>>>>>
>>>>>>>>>>> Below is the stack trace using 0.7.5-SNAPSHOT.   (btw since I am
>>>>>>>>>>> using IJ2 maybe there is something else wrong in the dependency tree??  One
>>>>>>>>>>> of the IJ2 components??  Should I set the sci-java version to a SNAPSHOT
>>>>>>>>>>> version too??  It is 1.111 right now.
>>>>>>>>>>>
>>>>>>>>>>>      at org.scijava.Context.inject(Context.java:273)
>>>>>>>>>>>     at
>>>>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstance(DefaultPluginService.java:241)
>>>>>>>>>>>     at
>>>>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstances(DefaultPluginService.java:229)
>>>>>>>>>>>     at
>>>>>>>>>>> org.scijava.plugin.DefaultPluginService.createInstancesOfType(DefaultPluginService.java:220)
>>>>>>>>>>>     at
>>>>>>>>>>> org.scijava.plugin.AbstractSingletonService.createInstances(AbstractSingletonService.java:95)
>>>>>>>>>>>     at
>>>>>>>>>>> org.scijava.plugin.AbstractSingletonService.getInstances(AbstractSingletonService.java:73)
>>>>>>>>>>>     at
>>>>>>>>>>> org.scijava.plugin.AbstractSingletonService$1.get(AbstractSingletonService.java:87)
>>>>>>>>>>>     at
>>>>>>>>>>> org.scijava.plugin.AbstractSingletonService$1.get(AbstractSingletonService.java:83)
>>>>>>>>>>>     at
>>>>>>>>>>> org.scijava.object.ObjectIndex.resolvePending(ObjectIndex.java:391)
>>>>>>>>>>>     at org.scijava.object.ObjectIndex.get(ObjectIndex.java:136)
>>>>>>>>>>>     at
>>>>>>>>>>> org.scijava.object.DefaultObjectService.getObjects(DefaultObjectService.java:89)
>>>>>>>>>>>     at
>>>>>>>>>>> io.scif.codec.DefaultCodecService.getCodec(DefaultCodecService.java:65)
>>>>>>>>>>>     at
>>>>>>>>>>> io.scif.formats.tiff.TiffCompression.compress(TiffCompression.java:330)
>>>>>>>>>>>     at
>>>>>>>>>>> io.scif.formats.tiff.TiffSaver.writeImage(TiffSaver.java:391)
>>>>>>>>>>>     at
>>>>>>>>>>> io.scif.formats.tiff.TiffSaver.writeImage(TiffSaver.java:279)
>>>>>>>>>>>      at
>>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1250)
>>>>>>>>>>>     at
>>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1290)
>>>>>>>>>>>
>>>>>>>>>>>     at io.scif.AbstractWriter.savePlane(AbstractWriter.java:107)
>>>>>>>>>>>     at io.scif.img.ImgSaver.writePlanes(ImgSaver.java:532)
>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:380)
>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:133)
>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:114)
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> On Fri, Dec 13, 2013 at 1:40 PM, Mark Hiner <hinerm at gmail.com>wrote:
>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>> Hi Brian,
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>>  I referenced the scifio 0.7.5-SNAPSHOT (would that be correct
>>>>>>>>>>>>> to get the absolute latest??)
>>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>> Yep this should be the latest snapshot.
>>>>>>>>>>>>
>>>>>>>>>>>>  in my POM and ran into an exception when executing my code.
>>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>> ...
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>>      at
>>>>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1255)
>>>>>>>>>>>>>     at
>>>>>>>>>>>>> io.scif.formats.TIFFFormat$Writer.savePlane(TIFFFormat.java:1295)
>>>>>>>>>>>>>     at
>>>>>>>>>>>>> io.scif.AbstractWriter.savePlane(AbstractWriter.java:107)
>>>>>>>>>>>>>     at io.scif.img.ImgSaver.writePlanes(ImgSaver.java:532)
>>>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:380)
>>>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:133)
>>>>>>>>>>>>>     at io.scif.img.ImgSaver.saveImg(ImgSaver.java:114)
>>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>> That stack trace suggests that an older version of the
>>>>>>>>>>>> TIFFFormat is being used. It must be from prior commit 37953<https://github.com/scifio/scifio/commit/379530aab9a9848e59363d87dcbdb79c4842bfc3>(because the TiffSaver.writeImage call is now on line 1250, not 1255). I'm
>>>>>>>>>>>> assuming it's from the 0.7.4 release.
>>>>>>>>>>>>
>>>>>>>>>>>>  Are you just running the code snippet that Curtis posted a
>>>>>>>>>>>> while back (or your own similar snippet)? Or are you using SCIFIO in IJ2,
>>>>>>>>>>>> or another application?
>>>>>>>>>>>>
>>>>>>>>>>>>  Could you run "mvn dependency:tree", or check the "Maven
>>>>>>>>>>>> Dependencies" tab if you're using Eclipse? I'm assuming something must
>>>>>>>>>>>> still have a 0.7.4 SCIFIO reference, which is being pulled in instead of
>>>>>>>>>>>> 0.7.5...
>>>>>>>>>>>>
>>>>>>>>>>>> Sorry for the inconvenience.. let me know what you find!
>>>>>>>>>>>>
>>>>>>>>>>>> Thanks,
>>>>>>>>>>>> Mark
>>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://scif.io/pipermail/scifio/attachments/20140108/a54970d1/attachment-0002.html>

From hiner at wisc.edu  Tue Jan 14 08:39:38 2014
From: hiner at wisc.edu (Mark Hiner)
Date: Tue, 14 Jan 2014 08:39:38 -0600
Subject: [SCIFIO] Service construction
In-Reply-To: <52D514DE.6000707@uni-konstanz.de>
References: <CA+B=mGo89gdBMJG6df8Vj_DZ3=jqqNiX7ETWkeu=O6Nn3cs9TQ@mail.gmail.com>
	<52D187E5.5060204@uni-konstanz.de>
	<CA+B=mGo_xuHh2fRH9wZgcgpW2MuqyMgxq-B5G8iQeTphHipo+A@mail.gmail.com>
	<52D514DE.6000707@uni-konstanz.de>
Message-ID: <CA+B=mGoZH-LfLquJ5tboDLLw5WSbJg2VVLX0HQ+3xfB9jG1_fA@mail.gmail.com>

Hi Christian,

These are both great questions, so no worries!

* If I want to use a global "Context" in my complete "KNIME Application",
> why is there the possibility to create several contexts?
>

Curtis can expand on this if necessary, but by avoiding one static Context,
we allow multiple instances of applications to run in the same JVM with
differing sets of Services, Plugins, and any other state that could be
desired. I don't have specific use cases off hand, but fundamentally,
avoiding static classes and allowing state to be encapsulated with each
instance of a Context is considerably more flexible. I think the only
advantage a static Context would have is that it might mitigate some
confusion. ;)

Also, if you know you want a static Context, it's easy enough to create a
static utility class with a getContext() method that provides a consistent
Context instance for everything in your application.

* How can I use the class "Scifio" in a global way, s.t. this context also
> knows all other services? The "Scifio" Context class itself suggests to
> create one context for ImageJ2, one for SCIFIO, etc.?!
>

I'm not sure exactly what you mean when you reference the "Scifio" Context.
But note that the SCIFIO
class<https://github.com/scifio/scifio/blob/master/scifio/src/main/java/io/scif/SCIFIO.java#L97>has
a constructor that accepts an existing Context. The SCIFIO class was
designed, fundamentally, to act as a wrapper for existing Contexts. So you
can maintain your one application context, and create a new SCIFIO around
it when needed. The zero-param constructor is primarily a convenience for
when you don't have/need a Context already in your application.

So to make SCIFIO global, just have a single global Context and then wrap
it with a SCIFIO whenever you need the SCIFIO API. There are many ways you
could implement this - using a static utility method as above, or adding a
HasSCIFIO layer on top of
AbstractContextual<https://github.com/scijava/scijava-common/blob/master/src/main/java/org/scijava/AbstractContextual.java>classes
(which we actually had at one point and then moved away from),
etc...

Hope this helps. Let me know if anything is unclear.

- Mark


On Tue, Jan 14, 2014 at 4:43 AM, Christian Dietz <
christian.dietz at uni-konstanz.de> wrote:

>  Hi Mark,
>
> maybe a very stupid questions, but I got two more very general ones:
>
> * If I want to use a global "Context" in my complete "KNIME Application",
> why is there the possibility to create several contexts?
> * How can I use the class "Scifio" in a global way, s.t. this context also
> knows all other services? The "Scifio" Context class itself suggests to
> create one context for ImageJ2, one for SCIFIO, etc.?!
>
> Don't misunderstand me, I really want to use the context the way you guys
> think its best, but I understand too little since now I guess :)
>
> Have a nice day!
>
> Christian
>
>
> Am 13.01.2014 17:34, schrieb Mark Hiner:
>
>  Hi Christian,
>
> On Sat, Jan 11, 2014 at 12:05 PM, Christian Dietz <
> christian.dietz at uni-konstanz.de> wrote:
>
>> If so, I thought about an "exclude service" option in the Context?
>> Something like: Include all SingletonService, but if you include them, make
>> sure that they are of type ImageJService or SCIFIOService or something like
>> that? Or: The user can provide a "ServiceFilter" Implementation where he
>> can exclude/Include certain services? I don't know if this makes sense at
>> all, just a naive thinking I guess.
>
>
>  I understand what you're saying, but there are significant problems with
> excluding services like this. It's really not extensible - it will always
> be possible for something downstream to add a problematic service. Unless
> you have complete control of the classpath - but if you have that, you can
> limit which services and plugins are discovered, and thus loaded, anyway.
>
>  So let's go more into the philosophy of what you're trying to do:
>
>  - Why severely limit Services available to the Context? From what I
> understood (and please correct me if I'm wrong here) you have one class
> loader and one context per plugin? So you want to limit the number of
> services because each plugin is going to load a new context? Is that right?
>
>  If so, I feel like the Context use is a bit too narrowly scoped here.
> It's developed as more of an application-level context, so I think it will
> be a continuous struggle to use it as something else. Would it be possible
> to refactor your context usage to simply have one Context, that loads all
> of the services/plugins available, and is then passed around/reused by
> other modules?
>
>  Thanks,
> Mark
>
>
> On Sat, Jan 11, 2014 at 12:05 PM, Christian Dietz <
> christian.dietz at uni-konstanz.de> wrote:
>
>>  Hi Mark,
>>
>> I figured out my problem and I have no clue how to solve it in a nice way
>> :-)
>>
>> We restrict our the context we create to very limited amount of services.
>> We only want to load the services we really need.
>> Since now, I told my Context to load all SingletonService.class. I needed
>> to load all SingletonServices, such that the method isMultipleChoiceObject
>> (line 382) returns "true" for e.g. the "CalculatorOp" and KNIME can
>> generate the dialog for e.g. the ImageCalculator. This only worked if the
>> CalculatorService.class is available in the context.
>>
>> The important part actually is: If I request to load _any_
>> SingletonService, of course also the SingletonServices from SCIFIO etc are
>> also loaded, which I actually don't need here. On the other hand, I don't
>> want to manually add SingletonServices from ImageJ2 I need (this is what I
>> do now with CalculatorSerice, ThresholdService, etc... see line 128/129 at
>> https://github.com/knime-ip/knip-imagej2/blob/master/org.knime.knip.imagej2.core/src/org/knime/knip/imagej2/core/IJGateway.java
>> ).
>>
>> Does this make sense?
>>
>> If so, I thought about an "exclude service" option in the Context?
>> Something like: Include all SingletonService, but if you include them, make
>> sure that they are of type ImageJService or SCIFIOService or something like
>> that? Or: The user can provide a "ServiceFilter" Implementation where he
>> can exclude/Include certain services? I don't know if this makes sense at
>> all, just a naive thinking I guess.
>>
>> Thanks for your support again,
>>
>> Christian
>>
>>
>>
>> Am 10.01.2014 19:57, schrieb Mark Hiner:
>>
>>    OK, so I'm questioning how the IJAdapterProvider<https://github.com/knime-ip/knip-imagej2/blob/master/org.knime.knip.imagej2.core/src/org/knime/knip/imagej2/core/IJGateway.java#L428>assembles the list of services..
>>
>>
>> It seems like it's trying to manually assemble a list of services to
>> construct the context with. Is that right? When constructing the context
>> and providing a list of services, you basically can give it just the
>> superclass services, and all children will be discovered. We did that so
>> you can make a context with say SCIFOService and SciJavaService and then
>> plugins that add more SCIFIOServices will automatically be included.
>>
>> Does that make sense?
>>
>>    So I would possibly refactor this to make a context with
>> ImageJServices, SCIFIOServices, and SciJavaServices.. because those are the
>> relevant components you're using, right?
>>
>>    Also, yes whenever you try to get objects from an ObjectIndex, ALL
>> pending initializations occur. This just defers the initialization until
>> it's required.
>>
>>    All SingletonServices add each of their singleton instances to the
>> ObjectIndex lazily during their initialize() method. So that's why these
>> translators are being loaded. And they fail because SCIFIOServices aren't
>> included.
>>
>> So, context creation is part of the problem.. but I think the
>> classpath/class loader is still incorrect, because you have OME-Formats
>> stuff in it.
>>
>> I will try to update the Context so that when that error comes up, it
>> prints out the services that WERE used to create the context, and maybe the
>> classpath of the current class loader. Because that error is extremely
>> cryptic and unhelpful.
>>
>> Then maybe we can discuss more tomorrow!
>>
>>   Take care
>>  Mark
>>
>>
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://scif.io/pipermail/scifio/attachments/20140114/89f1e264/attachment-0002.html>

From martin.hoehne at uk-koeln.de  Wed Jan 15 06:36:48 2014
From: martin.hoehne at uk-koeln.de (=?iso-8859-1?Q?Martin_H=F6hne?=)
Date: Wed, 15 Jan 2014 12:36:48 +0000
Subject: [SCIFIO] opening tiff files with ImageJ2
Message-ID: <E450B219918B8C47A2C631E943340A7052F2CDA6@UKK086.ADS.UK-KOELN.DE>

Dear list,

We have 16 bit Tiff files from a camera (from a Chemoluminescence detector. Fusion XL machine form Vilber Lourmat http://www.vilber.com/). The images can be opened fine in Fiji (open or drag&drop). However, importing via File>Import>BioFormats fails. I get this error:

"Sorry, there was a problem during import". The log file is posted at the end of this mail.

We are fine with the normal opening, however the ImageJ2 seems to try to open with the import function (2.0.0.0 beta7.6). I get this message:
"io.scif.img.ImgIOExceprion: java.io.EOFException: Attempting to read beyond end of file" 

The image contains some metadata I can?t read when opening with ImageJ, but only when opening the file with the Fusion software from Vilber.
For the attached file the metadata is at the end of this posting as well.

The metadata is not so important, but it would be great if the images could be opened with ImageJ2 as well.

Thank you
Martin

PS - I hope this ist he right list to post. If not, maybe someone could direct me to the best suited forum

System information:
Win7 64bit
Fiji, updatet 2014-01-15

Log from import:
Fiji(legacy mode) File>Import>BioFormats:
loci.formats.FormatException: loci.common.ReflectException: java.lang.reflect.InvocationTargetException
	at loci.formats.in.TiffJAIReader.openBufferedImage(TiffJAIReader.java:202)
	at loci.formats.in.TiffJAIReader.initFile(TiffJAIReader.java:162)
	at loci.formats.FormatReader.setId(FormatReader.java:1360)
	at loci.formats.DelegateReader.setId(DelegateReader.java:275)
	at loci.plugins.in.ImportProcess.initializeFile(ImportProcess.java:482)
	at loci.plugins.in.ImportProcess.execute(ImportProcess.java:146)
	at loci.plugins.in.Importer.showDialogs(Importer.java:141)
	at loci.plugins.in.Importer.run(Importer.java:79)
	at loci.plugins.LociImporter.run(LociImporter.java:81)
	at ij.IJ.runUserPlugIn(IJ.java:196)
	at ij.IJ.runPlugIn(IJ.java:160)
	at ij.Executer.runCommand(Executer.java:131)
	at ij.Executer.run(Executer.java:64)
	at java.lang.Thread.run(Thread.java:662)
Caused by: loci.common.ReflectException: java.lang.reflect.InvocationTargetException
	at loci.common.ReflectedUniverse.exec(ReflectedUniverse.java:125)
	at loci.formats.in.TiffJAIReader.openBufferedImage(TiffJAIReader.java:197)
	... 13 more
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at ome.scifio.common.ReflectedUniverse.exec(ReflectedUniverse.java:317)
	at loci.common.ReflectedUniverse.exec(ReflectedUniverse.java:122)
	... 14 more
Caused by: java.io.EOFException
	at com.sun.media.jai.codec.SeekableStream.readFully(SeekableStream.java:329)
	at com.sun.media.jai.codec.SeekableStream.readFully(SeekableStream.java:306)
	at com.sun.media.jai.codec.SeekableStream.readUnsignedIntLE(SeekableStream.java:708)
	at com.sun.media.jai.codec.TIFFDirectory.readUnsignedInt(TIFFDirectory.java:524)
	at com.sun.media.jai.codec.TIFFDirectory.initialize(TIFFDirectory.java:289)
	at com.sun.media.jai.codec.TIFFDirectory.<init>(TIFFDirectory.java:125)
	at com.sun.media.jai.codecimpl.TIFFImage.<init>(TIFFImage.java:318)
	at com.sun.media.jai.codecimpl.TIFFImageDecoder.decodeAsRenderedImage(TIFFImageDecoder.java:112)
	... 20 more


Metadata of attached image:
Good Laboratory Practice:GLP

GENERAL INFORMATION
   Title: 
   Comments:
   Date:  Freitag, 13. Dezember 2013
   Time: 13:42:04
   Image name: C:\Users\nephrolab\Pictures\temp_western\mhoehne\eva24__1.TIF

   Software information: FusionCapt Advance  Solo 4 16.07

ACQUISITION PARAMETERS: 

Lens information:
   Iris aperture:  

Camera information:
   Integration time acquisition: : 0 min 50 sec 0 msec
   Acquisition mode: Serial/r/n      Image 1/10  
   Positive acquisition 
   Resolution used: Binning 2x2 
   Pixel depth 16 Bit per pixel  
   Software acquisition mode: Not defined 
   Vigneting filter : Aperture value 0.84
   Sensor area used: : (0, 0, 2048,2048)
   Configuration file used: C:\Users\nephrolab\Documents\Vilber Lourmat\nephrolab_settings\2x2 binning.prt
   Camera serial number: 275704
   Tray position:  Non applicable
   Application name: 2x2 binning
   Auto mode: User defined autoexposure coef 97%
   USB status: No USB detected
   Imaging system: FusionCapt Advance  Solo 4 16.07
   Camera serial number: 275704   - Firmware >2.0.0<
   USB codage: No darkroom
   Lens configuration: Non applicable
   RGB status: Not installed
   Skylight: Not installed

Image manipulation 

   Gray level inversion: No

-------------- next part --------------
A non-text attachment was scrubbed...
Name: eva24__1.TIF
Type: image/tiff
Size: 2098962 bytes
Desc: eva24__1.TIF
URL: <http://scif.io/pipermail/scifio/attachments/20140115/4555589d/attachment-0002.tif>

From hiner at wisc.edu  Wed Jan 15 09:32:46 2014
From: hiner at wisc.edu (Mark Hiner)
Date: Wed, 15 Jan 2014 09:32:46 -0600
Subject: [SCIFIO] opening tiff files with ImageJ2
In-Reply-To: <E450B219918B8C47A2C631E943340A7052F2CDA6@UKK086.ADS.UK-KOELN.DE>
References: <E450B219918B8C47A2C631E943340A7052F2CDA6@UKK086.ADS.UK-KOELN.DE>
Message-ID: <CA+B=mGqMOW1w2RM7R_0aLU=ubHPi1eeWDLNww47abZ-xQ7oRdA@mail.gmail.com>

Hi Martin,

PS - I hope this ist he right list to post. If not, maybe someone could
> direct me to the best suited forum
>

This is definitely a problem in SCIFIO, so this was the right place to
post! I've opened a new issue
<https://github.com/scifio/scifio/issues/123>to track this problem and
will look into it today.

Because this looks to be a bug in Bio-Formats as well (which is not
surprising - as the SCIFIO TIFF support is derived from Bio-Formats) I am
also forwarding this to the OME-Users list.

Thanks for the report!

- Mark


On Wed, Jan 15, 2014 at 6:36 AM, Martin H?hne <martin.hoehne at uk-koeln.de>wrote:

> Dear list,
>
> We have 16 bit Tiff files from a camera (from a Chemoluminescence
> detector. Fusion XL machine form Vilber Lourmat http://www.vilber.com/).
> The images can be opened fine in Fiji (open or drag&drop). However,
> importing via File>Import>BioFormats fails. I get this error:
>
> "Sorry, there was a problem during import". The log file is posted at the
> end of this mail.
>
> We are fine with the normal opening, however the ImageJ2 seems to try to
> open with the import function (2.0.0.0 beta7.6). I get this message:
> "io.scif.img.ImgIOExceprion: java.io.EOFException: Attempting to read
> beyond end of file"
>
> The image contains some metadata I can?t read when opening with ImageJ,
> but only when opening the file with the Fusion software from Vilber.
> For the attached file the metadata is at the end of this posting as well.
>
> The metadata is not so important, but it would be great if the images
> could be opened with ImageJ2 as well.
>
> Thank you
> Martin
>
> PS - I hope this ist he right list to post. If not, maybe someone could
> direct me to the best suited forum
>
> System information:
> Win7 64bit
> Fiji, updatet 2014-01-15
>
> Log from import:
> Fiji(legacy mode) File>Import>BioFormats:
> loci.formats.FormatException: loci.common.ReflectException:
> java.lang.reflect.InvocationTargetException
>         at
> loci.formats.in.TiffJAIReader.openBufferedImage(TiffJAIReader.java:202)
>         at loci.formats.in.TiffJAIReader.initFile(TiffJAIReader.java:162)
>         at loci.formats.FormatReader.setId(FormatReader.java:1360)
>         at loci.formats.DelegateReader.setId(DelegateReader.java:275)
>         at
> loci.plugins.in.ImportProcess.initializeFile(ImportProcess.java:482)
>         at loci.plugins.in.ImportProcess.execute(ImportProcess.java:146)
>         at loci.plugins.in.Importer.showDialogs(Importer.java:141)
>         at loci.plugins.in.Importer.run(Importer.java:79)
>         at loci.plugins.LociImporter.run(LociImporter.java:81)
>         at ij.IJ.runUserPlugIn(IJ.java:196)
>         at ij.IJ.runPlugIn(IJ.java:160)
>         at ij.Executer.runCommand(Executer.java:131)
>         at ij.Executer.run(Executer.java:64)
>         at java.lang.Thread.run(Thread.java:662)
> Caused by: loci.common.ReflectException:
> java.lang.reflect.InvocationTargetException
>         at loci.common.ReflectedUniverse.exec(ReflectedUniverse.java:125)
>         at
> loci.formats.in.TiffJAIReader.openBufferedImage(TiffJAIReader.java:197)
>         ... 13 more
> Caused by: java.lang.reflect.InvocationTargetException
>         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>         at
> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>         at
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
>         at java.lang.reflect.Method.invoke(Method.java:597)
>         at
> ome.scifio.common.ReflectedUniverse.exec(ReflectedUniverse.java:317)
>         at loci.common.ReflectedUniverse.exec(ReflectedUniverse.java:122)
>         ... 14 more
> Caused by: java.io.EOFException
>         at
> com.sun.media.jai.codec.SeekableStream.readFully(SeekableStream.java:329)
>         at
> com.sun.media.jai.codec.SeekableStream.readFully(SeekableStream.java:306)
>         at
> com.sun.media.jai.codec.SeekableStream.readUnsignedIntLE(SeekableStream.java:708)
>         at
> com.sun.media.jai.codec.TIFFDirectory.readUnsignedInt(TIFFDirectory.java:524)
>         at
> com.sun.media.jai.codec.TIFFDirectory.initialize(TIFFDirectory.java:289)
>         at
> com.sun.media.jai.codec.TIFFDirectory.<init>(TIFFDirectory.java:125)
>         at com.sun.media.jai.codecimpl.TIFFImage.<init>(TIFFImage.java:318)
>         at
> com.sun.media.jai.codecimpl.TIFFImageDecoder.decodeAsRenderedImage(TIFFImageDecoder.java:112)
>         ... 20 more
>
>
> Metadata of attached image:
> Good Laboratory Practice:GLP
>
> GENERAL INFORMATION
>    Title:
>    Comments:
>    Date:  Freitag, 13. Dezember 2013
>    Time: 13:42:04
>    Image name:
> C:\Users\nephrolab\Pictures\temp_western\mhoehne\eva24__1.TIF
>
>    Software information: FusionCapt Advance  Solo 4 16.07
>
> ACQUISITION PARAMETERS:
>
> Lens information:
>    Iris aperture:
>
> Camera information:
>    Integration time acquisition: : 0 min 50 sec 0 msec
>    Acquisition mode: Serial/r/n      Image 1/10
>    Positive acquisition
>    Resolution used: Binning 2x2
>    Pixel depth 16 Bit per pixel
>    Software acquisition mode: Not defined
>    Vigneting filter : Aperture value 0.84
>    Sensor area used: : (0, 0, 2048,2048)
>    Configuration file used: C:\Users\nephrolab\Documents\Vilber
> Lourmat\nephrolab_settings\2x2 binning.prt
>    Camera serial number: 275704
>    Tray position:  Non applicable
>    Application name: 2x2 binning
>    Auto mode: User defined autoexposure coef 97%
>    USB status: No USB detected
>    Imaging system: FusionCapt Advance  Solo 4 16.07
>    Camera serial number: 275704   - Firmware >2.0.0<
>    USB codage: No darkroom
>    Lens configuration: Non applicable
>    RGB status: Not installed
>    Skylight: Not installed
>
> Image manipulation
>
>    Gray level inversion: No
>
>
> _______________________________________________
> SCIFIO mailing list
> SCIFIO at scif.io
> http://scif.io/mailman/listinfo/scifio
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://scif.io/pipermail/scifio/attachments/20140115/b297d73d/attachment-0002.html>

From hiner at wisc.edu  Thu Jan 16 13:47:41 2014
From: hiner at wisc.edu (Mark Hiner)
Date: Thu, 16 Jan 2014 13:47:41 -0600
Subject: [SCIFIO] opening tiff files with ImageJ2
In-Reply-To: <CA+B=mGqMOW1w2RM7R_0aLU=ubHPi1eeWDLNww47abZ-xQ7oRdA@mail.gmail.com>
References: <E450B219918B8C47A2C631E943340A7052F2CDA6@UKK086.ADS.UK-KOELN.DE>
	<CA+B=mGqMOW1w2RM7R_0aLU=ubHPi1eeWDLNww47abZ-xQ7oRdA@mail.gmail.com>
Message-ID: <CA+B=mGpykqkpzJ8jLn0irwAdrAOXJeVgv3yK_Hz+zYihEifFtA@mail.gmail.com>

Hi Martin,

  There were two IFDs (id 1807 and 1808) which were unknown to us -
presumably related to the FusionCapt software you're using. As interpreted
by the TIFF spec they would cause reading past the EOF. There was a
safeguard in the SCIFIO parser to truncate such a read before the EOF, but
it wasn't implemented properly.

 I fixed the bug,<https://github.com/scifio/scifio/commit/2b9f1be852c4b2bffee40a673924780022ac2c54>and
added a SCIFIO-dev
update site <http://fiji.sc/List_of_update_sites> for Fiji. Using this
update site will allow you to use the most recent SCIFIO. Generally, this
isn't guaranteed to be stable, but it should help if you want to view your
data in IJ2 between now and the next SCIFIO release.

Thanks again for reporting this issue. Let me know if anything else comes
up!

- Mark


On Wed, Jan 15, 2014 at 9:32 AM, Mark Hiner <hiner at wisc.edu> wrote:

> Hi Martin,
>
>
> PS - I hope this ist he right list to post. If not, maybe someone could
>> direct me to the best suited forum
>>
>
> This is definitely a problem in SCIFIO, so this was the right place to
> post! I've opened a new issue<https://github.com/scifio/scifio/issues/123>to track this problem and will look into it today.
>
> Because this looks to be a bug in Bio-Formats as well (which is not
> surprising - as the SCIFIO TIFF support is derived from Bio-Formats) I am
> also forwarding this to the OME-Users list.
>
> Thanks for the report!
>
> - Mark
>
>
> On Wed, Jan 15, 2014 at 6:36 AM, Martin H?hne <martin.hoehne at uk-koeln.de>wrote:
>
>> Dear list,
>>
>> We have 16 bit Tiff files from a camera (from a Chemoluminescence
>> detector. Fusion XL machine form Vilber Lourmat http://www.vilber.com/).
>> The images can be opened fine in Fiji (open or drag&drop). However,
>> importing via File>Import>BioFormats fails. I get this error:
>>
>> "Sorry, there was a problem during import". The log file is posted at the
>> end of this mail.
>>
>> We are fine with the normal opening, however the ImageJ2 seems to try to
>> open with the import function (2.0.0.0 beta7.6). I get this message:
>> "io.scif.img.ImgIOExceprion: java.io.EOFException: Attempting to read
>> beyond end of file"
>>
>> The image contains some metadata I can?t read when opening with ImageJ,
>> but only when opening the file with the Fusion software from Vilber.
>> For the attached file the metadata is at the end of this posting as well.
>>
>> The metadata is not so important, but it would be great if the images
>> could be opened with ImageJ2 as well.
>>
>> Thank you
>> Martin
>>
>> PS - I hope this ist he right list to post. If not, maybe someone could
>> direct me to the best suited forum
>>
>> System information:
>> Win7 64bit
>> Fiji, updatet 2014-01-15
>>
>> Log from import:
>> Fiji(legacy mode) File>Import>BioFormats:
>> loci.formats.FormatException: loci.common.ReflectException:
>> java.lang.reflect.InvocationTargetException
>>         at
>> loci.formats.in.TiffJAIReader.openBufferedImage(TiffJAIReader.java:202)
>>         at loci.formats.in.TiffJAIReader.initFile(TiffJAIReader.java:162)
>>         at loci.formats.FormatReader.setId(FormatReader.java:1360)
>>         at loci.formats.DelegateReader.setId(DelegateReader.java:275)
>>         at
>> loci.plugins.in.ImportProcess.initializeFile(ImportProcess.java:482)
>>         at loci.plugins.in.ImportProcess.execute(ImportProcess.java:146)
>>         at loci.plugins.in.Importer.showDialogs(Importer.java:141)
>>         at loci.plugins.in.Importer.run(Importer.java:79)
>>         at loci.plugins.LociImporter.run(LociImporter.java:81)
>>         at ij.IJ.runUserPlugIn(IJ.java:196)
>>         at ij.IJ.runPlugIn(IJ.java:160)
>>         at ij.Executer.runCommand(Executer.java:131)
>>         at ij.Executer.run(Executer.java:64)
>>         at java.lang.Thread.run(Thread.java:662)
>> Caused by: loci.common.ReflectException:
>> java.lang.reflect.InvocationTargetException
>>         at loci.common.ReflectedUniverse.exec(ReflectedUniverse.java:125)
>>         at
>> loci.formats.in.TiffJAIReader.openBufferedImage(TiffJAIReader.java:197)
>>         ... 13 more
>> Caused by: java.lang.reflect.InvocationTargetException
>>         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>         at
>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>>         at
>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
>>         at java.lang.reflect.Method.invoke(Method.java:597)
>>         at
>> ome.scifio.common.ReflectedUniverse.exec(ReflectedUniverse.java:317)
>>         at loci.common.ReflectedUniverse.exec(ReflectedUniverse.java:122)
>>         ... 14 more
>> Caused by: java.io.EOFException
>>         at
>> com.sun.media.jai.codec.SeekableStream.readFully(SeekableStream.java:329)
>>         at
>> com.sun.media.jai.codec.SeekableStream.readFully(SeekableStream.java:306)
>>         at
>> com.sun.media.jai.codec.SeekableStream.readUnsignedIntLE(SeekableStream.java:708)
>>         at
>> com.sun.media.jai.codec.TIFFDirectory.readUnsignedInt(TIFFDirectory.java:524)
>>         at
>> com.sun.media.jai.codec.TIFFDirectory.initialize(TIFFDirectory.java:289)
>>         at
>> com.sun.media.jai.codec.TIFFDirectory.<init>(TIFFDirectory.java:125)
>>         at
>> com.sun.media.jai.codecimpl.TIFFImage.<init>(TIFFImage.java:318)
>>         at
>> com.sun.media.jai.codecimpl.TIFFImageDecoder.decodeAsRenderedImage(TIFFImageDecoder.java:112)
>>         ... 20 more
>>
>>
>> Metadata of attached image:
>> Good Laboratory Practice:GLP
>>
>> GENERAL INFORMATION
>>    Title:
>>    Comments:
>>    Date:  Freitag, 13. Dezember 2013
>>    Time: 13:42:04
>>    Image name:
>> C:\Users\nephrolab\Pictures\temp_western\mhoehne\eva24__1.TIF
>>
>>    Software information: FusionCapt Advance  Solo 4 16.07
>>
>> ACQUISITION PARAMETERS:
>>
>> Lens information:
>>    Iris aperture:
>>
>> Camera information:
>>    Integration time acquisition: : 0 min 50 sec 0 msec
>>    Acquisition mode: Serial/r/n      Image 1/10
>>    Positive acquisition
>>    Resolution used: Binning 2x2
>>    Pixel depth 16 Bit per pixel
>>    Software acquisition mode: Not defined
>>    Vigneting filter : Aperture value 0.84
>>    Sensor area used: : (0, 0, 2048,2048)
>>    Configuration file used: C:\Users\nephrolab\Documents\Vilber
>> Lourmat\nephrolab_settings\2x2 binning.prt
>>    Camera serial number: 275704
>>    Tray position:  Non applicable
>>    Application name: 2x2 binning
>>    Auto mode: User defined autoexposure coef 97%
>>    USB status: No USB detected
>>    Imaging system: FusionCapt Advance  Solo 4 16.07
>>    Camera serial number: 275704   - Firmware >2.0.0<
>>    USB codage: No darkroom
>>    Lens configuration: Non applicable
>>    RGB status: Not installed
>>    Skylight: Not installed
>>
>> Image manipulation
>>
>>    Gray level inversion: No
>>
>>
>> _______________________________________________
>> SCIFIO mailing list
>> SCIFIO at scif.io
>> http://scif.io/mailman/listinfo/scifio
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://scif.io/pipermail/scifio/attachments/20140116/6aafb371/attachment-0002.html>

From hiner at wisc.edu  Thu Jan 16 14:37:00 2014
From: hiner at wisc.edu (Mark Hiner)
Date: Thu, 16 Jan 2014 14:37:00 -0600
Subject: [SCIFIO] opening tiff files with ImageJ2
In-Reply-To: <E450B219918B8C47A2C631E943340A7052F2E238@UKK086.ADS.UK-KOELN.DE>
References: <E450B219918B8C47A2C631E943340A7052F2CDA6@UKK086.ADS.UK-KOELN.DE>
	<CA+B=mGqMOW1w2RM7R_0aLU=ubHPi1eeWDLNww47abZ-xQ7oRdA@mail.gmail.com>
	<CA+B=mGpykqkpzJ8jLn0irwAdrAOXJeVgv3yK_Hz+zYihEifFtA@mail.gmail.com>
	<E450B219918B8C47A2C631E943340A7052F2E238@UKK086.ADS.UK-KOELN.DE>
Message-ID: <CA+B=mGoV1FW6appuaZNu1+WqhLNX0HDGCa19SkA1JAOug82uqA@mail.gmail.com>

Hi Martin,

thank you for that incredible fast reaction and fix!
>

You're welcome! Just wanted to post this on the list, so it goes on record.
;)

 I tried with the Scifio-dev update and it works perfectly fine.
>

Glad to hear it. It's always great to get feedback about SCIFIO/IJ2 - even
bug reports!

Take care,
Mark


On Thu, Jan 16, 2014 at 2:18 PM, Martin H?hne <martin.hoehne at uk-koeln.de>wrote:

>  Hi Mark,
>
>
>
> thank you for that incredible fast reaction and fix!
>
>
>
> As I said, currently we were still fine with Fiji/ImageJ1 opening the
> files. I just wanted to ensure that we still can open the files when
> ImageJ2 has replaced ImageJ1.
>
> I tried with the Scifio-dev update and it works perfectly fine.
>
>  Thanks again
>
> Martin
>
>
>
> *Von:* hinerm at gmail.com [mailto:hinerm at gmail.com] *Im Auftrag von *Mark
> Hiner
> *Gesendet:* Donnerstag, 16. Januar 2014 20:48
> *An:* Martin H?hne
> *Cc:* scifio at scif.io
> *Betreff:* Re: [SCIFIO] opening tiff files with ImageJ2
>
>
>
> Hi Martin,
>
>   There were two IFDs (id 1807 and 1808) which were unknown to us -
> presumably related to the FusionCapt software you're using. As interpreted
> by the TIFF spec they would cause reading past the EOF. There was a
> safeguard in the SCIFIO parser to truncate such a read before the EOF, but
> it wasn't implemented properly.
>
>  I fixed the bug,<https://github.com/scifio/scifio/commit/2b9f1be852c4b2bffee40a673924780022ac2c54>and added a SCIFIO-dev
> update site <http://fiji.sc/List_of_update_sites> for Fiji. Using this
> update site will allow you to use the most recent SCIFIO. Generally, this
> isn't guaranteed to be stable, but it should help if you want to view your
> data in IJ2 between now and the next SCIFIO release.
>
> Thanks again for reporting this issue. Let me know if anything else comes
> up!
>
> - Mark
>
>
>
> On Wed, Jan 15, 2014 at 9:32 AM, Mark Hiner <hiner at wisc.edu> wrote:
>
> Hi Martin,
>
>
>
> PS - I hope this ist he right list to post. If not, maybe someone could
> direct me to the best suited forum
>
>
>
> This is definitely a problem in SCIFIO, so this was the right place to
> post! I've opened a new issue<https://github.com/scifio/scifio/issues/123>to track this problem and will look into it today.
>
> Because this looks to be a bug in Bio-Formats as well (which is not
> surprising - as the SCIFIO TIFF support is derived from Bio-Formats) I am
> also forwarding this to the OME-Users list.
>
> Thanks for the report!
>
> - Mark
>
>
>
> On Wed, Jan 15, 2014 at 6:36 AM, Martin H?hne <martin.hoehne at uk-koeln.de>
> wrote:
>
>  Dear list,
>
> We have 16 bit Tiff files from a camera (from a Chemoluminescence
> detector. Fusion XL machine form Vilber Lourmat http://www.vilber.com/).
> The images can be opened fine in Fiji (open or drag&drop). However,
> importing via File>Import>BioFormats fails. I get this error:
>
> "Sorry, there was a problem during import". The log file is posted at the
> end of this mail.
>
> We are fine with the normal opening, however the ImageJ2 seems to try to
> open with the import function (2.0.0.0 beta7.6). I get this message:
> "io.scif.img.ImgIOExceprion: java.io.EOFException: Attempting to read
> beyond end of file"
>
> The image contains some metadata I can?t read when opening with ImageJ,
> but only when opening the file with the Fusion software from Vilber.
> For the attached file the metadata is at the end of this posting as well.
>
> The metadata is not so important, but it would be great if the images
> could be opened with ImageJ2 as well.
>
> Thank you
> Martin
>
> PS - I hope this ist he right list to post. If not, maybe someone could
> direct me to the best suited forum
>
> System information:
> Win7 64bit
> Fiji, updatet 2014-01-15
>
> Log from import:
> Fiji(legacy mode) File>Import>BioFormats:
> loci.formats.FormatException: loci.common.ReflectException:
> java.lang.reflect.InvocationTargetException
>         at
> loci.formats.in.TiffJAIReader.openBufferedImage(TiffJAIReader.java:202)
>         at loci.formats.in.TiffJAIReader.initFile(TiffJAIReader.java:162)
>         at loci.formats.FormatReader.setId(FormatReader.java:1360)
>         at loci.formats.DelegateReader.setId(DelegateReader.java:275)
>         at
> loci.plugins.in.ImportProcess.initializeFile(ImportProcess.java:482)
>         at loci.plugins.in.ImportProcess.execute(ImportProcess.java:146)
>         at loci.plugins.in.Importer.showDialogs(Importer.java:141)
>         at loci.plugins.in.Importer.run(Importer.java:79)
>         at loci.plugins.LociImporter.run(LociImporter.java:81)
>         at ij.IJ.runUserPlugIn(IJ.java:196)
>         at ij.IJ.runPlugIn(IJ.java:160)
>         at ij.Executer.runCommand(Executer.java:131)
>         at ij.Executer.run(Executer.java:64)
>         at java.lang.Thread.run(Thread.java:662)
> Caused by: loci.common.ReflectException:
> java.lang.reflect.InvocationTargetException
>         at loci.common.ReflectedUniverse.exec(ReflectedUniverse.java:125)
>         at
> loci.formats.in.TiffJAIReader.openBufferedImage(TiffJAIReader.java:197)
>         ... 13 more
> Caused by: java.lang.reflect.InvocationTargetException
>         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>         at
> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>         at
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
>         at java.lang.reflect.Method.invoke(Method.java:597)
>         at
> ome.scifio.common.ReflectedUniverse.exec(ReflectedUniverse.java:317)
>         at loci.common.ReflectedUniverse.exec(ReflectedUniverse.java:122)
>         ... 14 more
> Caused by: java.io.EOFException
>         at
> com.sun.media.jai.codec.SeekableStream.readFully(SeekableStream.java:329)
>         at
> com.sun.media.jai.codec.SeekableStream.readFully(SeekableStream.java:306)
>         at
> com.sun.media.jai.codec.SeekableStream.readUnsignedIntLE(SeekableStream.java:708)
>         at
> com.sun.media.jai.codec.TIFFDirectory.readUnsignedInt(TIFFDirectory.java:524)
>         at
> com.sun.media.jai.codec.TIFFDirectory.initialize(TIFFDirectory.java:289)
>         at
> com.sun.media.jai.codec.TIFFDirectory.<init>(TIFFDirectory.java:125)
>         at com.sun.media.jai.codecimpl.TIFFImage.<init>(TIFFImage.java:318)
>         at
> com.sun.media.jai.codecimpl.TIFFImageDecoder.decodeAsRenderedImage(TIFFImageDecoder.java:112)
>         ... 20 more
>
>
> Metadata of attached image:
> Good Laboratory Practice:GLP
>
> GENERAL INFORMATION
>    Title:
>    Comments:
>    Date:  Freitag, 13. Dezember 2013
>    Time: 13:42:04
>    Image name:
> C:\Users\nephrolab\Pictures\temp_western\mhoehne\eva24__1.TIF
>
>    Software information: FusionCapt Advance  Solo 4 16.07
>
> ACQUISITION PARAMETERS:
>
> Lens information:
>    Iris aperture:
>
> Camera information:
>    Integration time acquisition: : 0 min 50 sec 0 msec
>    Acquisition mode: Serial/r/n      Image 1/10
>    Positive acquisition
>    Resolution used: Binning 2x2
>    Pixel depth 16 Bit per pixel
>    Software acquisition mode: Not defined
>    Vigneting filter : Aperture value 0.84
>    Sensor area used: : (0, 0, 2048,2048)
>    Configuration file used: C:\Users\nephrolab\Documents\Vilber
> Lourmat\nephrolab_settings\2x2 binning.prt
>    Camera serial number: 275704
>    Tray position:  Non applicable
>    Application name: 2x2 binning
>    Auto mode: User defined autoexposure coef 97%
>    USB status: No USB detected
>    Imaging system: FusionCapt Advance  Solo 4 16.07
>    Camera serial number: 275704   - Firmware >2.0.0<
>    USB codage: No darkroom
>    Lens configuration: Non applicable
>    RGB status: Not installed
>    Skylight: Not installed
>
> Image manipulation
>
>    Gray level inversion: No
>
>   _______________________________________________
> SCIFIO mailing list
> SCIFIO at scif.io
> http://scif.io/mailman/listinfo/scifio
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://scif.io/pipermail/scifio/attachments/20140116/84d570fc/attachment-0002.html>

From ctrueden at wisc.edu  Tue Jan 21 16:08:39 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Tue, 21 Jan 2014 16:08:39 -0600
Subject: [SCIFIO] Service construction
In-Reply-To: <CA+B=mGoZH-LfLquJ5tboDLLw5WSbJg2VVLX0HQ+3xfB9jG1_fA@mail.gmail.com>
References: <CA+B=mGo89gdBMJG6df8Vj_DZ3=jqqNiX7ETWkeu=O6Nn3cs9TQ@mail.gmail.com>
	<52D187E5.5060204@uni-konstanz.de>
	<CA+B=mGo_xuHh2fRH9wZgcgpW2MuqyMgxq-B5G8iQeTphHipo+A@mail.gmail.com>
	<52D514DE.6000707@uni-konstanz.de>
	<CA+B=mGoZH-LfLquJ5tboDLLw5WSbJg2VVLX0HQ+3xfB9jG1_fA@mail.gmail.com>
Message-ID: <CADN69y=eQ0+OuHP2OWTXvGvfYUMHfU0cDOK9iKQJVXRqSKz5JQ@mail.gmail.com>

Hi Christian & everyone,

> Curtis can expand on this if necessary, but by avoiding one static
> Context, we allow multiple instances of applications to run in the
> same JVM with differing sets of Services, Plugins, and any other state
> that could be desired.

Right. There are valid use cases for having multiple Contexts in the same
JVM. But I would not suggest proliferating several Context objects within
the same instance of the KNIME application, if you can avoid it.

As a rule of thumb: two objects from different Contexts should not
interact. There is currently no way to pass objects between Contexts. Each
Contextual object has exactly *one* Context associated with it, which
cannot be changed once it is set. This is by design. I am open to changing
the design, but at the moment, that's how it works. So if you create object
Foo using Context F, and then create object Bar using Context B, and then
later Foo and Bar need to interact somehow... the behavior will be
undefined at best, unstable or explosive at worst. Such interactions do not
always check for "context consistency" but that assumption is definitely
implicit throughout the codebase right now.

So I agree with Mark: best if you can create one Context that has all the
services you need, and you can reuse that Context everywhere. If this is a
problem for OSGi-related reasons (e.g., class loaders) then perhaps we can
tackle those issues at our next hackathon. :-)

Regards,
Curtis


On Tue, Jan 14, 2014 at 8:39 AM, Mark Hiner <hiner at wisc.edu> wrote:

> Hi Christian,
>
> These are both great questions, so no worries!
>
> * If I want to use a global "Context" in my complete "KNIME Application",
>> why is there the possibility to create several contexts?
>>
>
> Curtis can expand on this if necessary, but by avoiding one static
> Context, we allow multiple instances of applications to run in the same JVM
> with differing sets of Services, Plugins, and any other state that could be
> desired. I don't have specific use cases off hand, but fundamentally,
> avoiding static classes and allowing state to be encapsulated with each
> instance of a Context is considerably more flexible. I think the only
> advantage a static Context would have is that it might mitigate some
> confusion. ;)
>
> Also, if you know you want a static Context, it's easy enough to create a
> static utility class with a getContext() method that provides a consistent
> Context instance for everything in your application.
>
> * How can I use the class "Scifio" in a global way, s.t. this context also
>> knows all other services? The "Scifio" Context class itself suggests to
>> create one context for ImageJ2, one for SCIFIO, etc.?!
>>
>
> I'm not sure exactly what you mean when you reference the "Scifio"
> Context. But note that the SCIFIO class<https://github.com/scifio/scifio/blob/master/scifio/src/main/java/io/scif/SCIFIO.java#L97>has a constructor that accepts an existing Context. The SCIFIO class was
> designed, fundamentally, to act as a wrapper for existing Contexts. So you
> can maintain your one application context, and create a new SCIFIO around
> it when needed. The zero-param constructor is primarily a convenience for
> when you don't have/need a Context already in your application.
>
> So to make SCIFIO global, just have a single global Context and then wrap
> it with a SCIFIO whenever you need the SCIFIO API. There are many ways you
> could implement this - using a static utility method as above, or adding a
> HasSCIFIO layer on top of AbstractContextual<https://github.com/scijava/scijava-common/blob/master/src/main/java/org/scijava/AbstractContextual.java>classes (which we actually had at one point and then moved away from),
> etc...
>
> Hope this helps. Let me know if anything is unclear.
>
> - Mark
>
>
> On Tue, Jan 14, 2014 at 4:43 AM, Christian Dietz <
> christian.dietz at uni-konstanz.de> wrote:
>
>>  Hi Mark,
>>
>> maybe a very stupid questions, but I got two more very general ones:
>>
>> * If I want to use a global "Context" in my complete "KNIME Application",
>> why is there the possibility to create several contexts?
>> * How can I use the class "Scifio" in a global way, s.t. this context
>> also knows all other services? The "Scifio" Context class itself suggests
>> to create one context for ImageJ2, one for SCIFIO, etc.?!
>>
>> Don't misunderstand me, I really want to use the context the way you guys
>> think its best, but I understand too little since now I guess :)
>>
>> Have a nice day!
>>
>> Christian
>>
>>
>> Am 13.01.2014 17:34, schrieb Mark Hiner:
>>
>>  Hi Christian,
>>
>> On Sat, Jan 11, 2014 at 12:05 PM, Christian Dietz <
>> christian.dietz at uni-konstanz.de> wrote:
>>
>>> If so, I thought about an "exclude service" option in the Context?
>>> Something like: Include all SingletonService, but if you include them, make
>>> sure that they are of type ImageJService or SCIFIOService or something like
>>> that? Or: The user can provide a "ServiceFilter" Implementation where he
>>> can exclude/Include certain services? I don't know if this makes sense at
>>> all, just a naive thinking I guess.
>>
>>
>>  I understand what you're saying, but there are significant problems
>> with excluding services like this. It's really not extensible - it will
>> always be possible for something downstream to add a problematic service.
>> Unless you have complete control of the classpath - but if you have that,
>> you can limit which services and plugins are discovered, and thus loaded,
>> anyway.
>>
>>  So let's go more into the philosophy of what you're trying to do:
>>
>>  - Why severely limit Services available to the Context? From what I
>> understood (and please correct me if I'm wrong here) you have one class
>> loader and one context per plugin? So you want to limit the number of
>> services because each plugin is going to load a new context? Is that right?
>>
>>  If so, I feel like the Context use is a bit too narrowly scoped here.
>> It's developed as more of an application-level context, so I think it will
>> be a continuous struggle to use it as something else. Would it be possible
>> to refactor your context usage to simply have one Context, that loads all
>> of the services/plugins available, and is then passed around/reused by
>> other modules?
>>
>>  Thanks,
>> Mark
>>
>>
>> On Sat, Jan 11, 2014 at 12:05 PM, Christian Dietz <
>> christian.dietz at uni-konstanz.de> wrote:
>>
>>>  Hi Mark,
>>>
>>> I figured out my problem and I have no clue how to solve it in a nice
>>> way :-)
>>>
>>> We restrict our the context we create to very limited amount of
>>> services. We only want to load the services we really need.
>>> Since now, I told my Context to load all SingletonService.class. I
>>> needed to load all SingletonServices, such that the method
>>> isMultipleChoiceObject (line 382) returns "true" for e.g. the
>>> "CalculatorOp" and KNIME can generate the dialog for e.g. the
>>> ImageCalculator. This only worked if the CalculatorService.class is
>>> available in the context.
>>>
>>> The important part actually is: If I request to load _any_
>>> SingletonService, of course also the SingletonServices from SCIFIO etc are
>>> also loaded, which I actually don't need here. On the other hand, I don't
>>> want to manually add SingletonServices from ImageJ2 I need (this is what I
>>> do now with CalculatorSerice, ThresholdService, etc... see line 128/129 at
>>> https://github.com/knime-ip/knip-imagej2/blob/master/org.knime.knip.imagej2.core/src/org/knime/knip/imagej2/core/IJGateway.java
>>> ).
>>>
>>> Does this make sense?
>>>
>>> If so, I thought about an "exclude service" option in the Context?
>>> Something like: Include all SingletonService, but if you include them, make
>>> sure that they are of type ImageJService or SCIFIOService or something like
>>> that? Or: The user can provide a "ServiceFilter" Implementation where he
>>> can exclude/Include certain services? I don't know if this makes sense at
>>> all, just a naive thinking I guess.
>>>
>>> Thanks for your support again,
>>>
>>> Christian
>>>
>>>
>>>
>>> Am 10.01.2014 19:57, schrieb Mark Hiner:
>>>
>>>    OK, so I'm questioning how the IJAdapterProvider<https://github.com/knime-ip/knip-imagej2/blob/master/org.knime.knip.imagej2.core/src/org/knime/knip/imagej2/core/IJGateway.java#L428>assembles the list of services..
>>>
>>>
>>> It seems like it's trying to manually assemble a list of services to
>>> construct the context with. Is that right? When constructing the context
>>> and providing a list of services, you basically can give it just the
>>> superclass services, and all children will be discovered. We did that so
>>> you can make a context with say SCIFOService and SciJavaService and then
>>> plugins that add more SCIFIOServices will automatically be included.
>>>
>>> Does that make sense?
>>>
>>>    So I would possibly refactor this to make a context with
>>> ImageJServices, SCIFIOServices, and SciJavaServices.. because those are the
>>> relevant components you're using, right?
>>>
>>>    Also, yes whenever you try to get objects from an ObjectIndex, ALL
>>> pending initializations occur. This just defers the initialization until
>>> it's required.
>>>
>>>    All SingletonServices add each of their singleton instances to the
>>> ObjectIndex lazily during their initialize() method. So that's why these
>>> translators are being loaded. And they fail because SCIFIOServices aren't
>>> included.
>>>
>>> So, context creation is part of the problem.. but I think the
>>> classpath/class loader is still incorrect, because you have OME-Formats
>>> stuff in it.
>>>
>>> I will try to update the Context so that when that error comes up, it
>>> prints out the services that WERE used to create the context, and maybe the
>>> classpath of the current class loader. Because that error is extremely
>>> cryptic and unhelpful.
>>>
>>> Then maybe we can discuss more tomorrow!
>>>
>>>   Take care
>>>  Mark
>>>
>>>
>>>
>>
>>
>  --
> You received this message because you are subscribed to the Google Groups
> "scijava" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to scijava+unsubscribe at googlegroups.com.
> For more options, visit https://groups.google.com/groups/opt_out.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://scif.io/pipermail/scifio/attachments/20140121/9bfc79fd/attachment-0002.html>

